<info.guardianproject.onionkit.ui.TorServiceUtils: int findProcessIdWithPidOf(java.lang.String)> -> <java.lang.Runtime: java.lang.Process exec(java.lang.String[])>
<info.guardianproject.onionkit.ui.TorServiceUtils: int findProcessId(java.lang.String)> -> <info.guardianproject.onionkit.ui.TorServiceUtils: int findProcessIdWithPidOf(java.lang.String)>
<info.guardianproject.onionkit.ui.OrbotHelper: boolean isOrbotRunning()> -> <info.guardianproject.onionkit.ui.TorServiceUtils: int findProcessId(java.lang.String)>
<org.torproject.android.service.TorServiceUtils: int findProcessIdWithPidOf(java.lang.String)> -> <java.lang.Runtime: java.lang.Process exec(java.lang.String[])>
<org.torproject.android.service.TorServiceUtils: int findProcessId(java.lang.String)> -> <org.torproject.android.service.TorServiceUtils: int findProcessIdWithPidOf(java.lang.String)>
<org.torproject.android.service.TorService: boolean findExistingProc()> -> <org.torproject.android.service.TorServiceUtils: int findProcessId(java.lang.String)>
<org.torproject.android.service.TorService: void run()> -> <org.torproject.android.service.TorService: boolean findExistingProc()>
<java.lang.Thread: void run()> -> <org.torproject.android.service.TorService: void run()>
<org.torproject.android.service.TorService: void setTorProfile(int)> -> <java.lang.Thread: void run()>
<org.torproject.android.service.TorService: void onStart(android.content.Intent,int)> -> <org.torproject.android.service.TorService: void setTorProfile(int)>
<dummyMainClass: org.torproject.android.service.TorService dummyMainMethod_org_torproject_android_service_TorService(android.content.Intent)> -> <org.torproject.android.service.TorService: void onStart(android.content.Intent,int)>
<org.torproject.android.service.TorService$2: void onReceive(android.content.Context,android.content.Intent)> -> <org.torproject.android.service.TorService: void setTorProfile(int)>
<org.torproject.android.service.TorService$1: void setProfile(int)> -> <org.torproject.android.service.TorService: void setTorProfile(int)>
<org.spongycastle.crypto.prng.ThreadedSeedGenerator$SeedGenerator: byte[] generateSeed(int,boolean)> -> <java.lang.Thread: void run()>
<org.spongycastle.crypto.prng.ThreadedSeedGenerator: byte[] generateSeed(int,boolean)> -> <org.spongycastle.crypto.prng.ThreadedSeedGenerator$SeedGenerator: byte[] generateSeed(int,boolean)>
<org.spongycastle.crypto.tls.TlsProtocolHandler: java.security.SecureRandom createSecureRandom()> -> <org.spongycastle.crypto.prng.ThreadedSeedGenerator: byte[] generateSeed(int,boolean)>
<org.torproject.android.service.TorService: boolean access$11(org.torproject.android.service.TorService)> -> <org.torproject.android.service.TorService: boolean findExistingProc()>
<org.torproject.android.service.TorService$5: void run()> -> <org.torproject.android.service.TorService: boolean access$11(org.torproject.android.service.TorService)>
<org.torproject.android.service.TorService: void killTorProcess()> -> <org.torproject.android.service.TorServiceUtils: int findProcessId(java.lang.String)>
<org.torproject.android.service.TorService: void stopTor()> -> <org.torproject.android.service.TorService: void killTorProcess()>
<org.torproject.android.service.TorService: void run()> -> <org.torproject.android.service.TorService: void stopTor()>
<org.torproject.android.service.TorService: boolean checkTorBinaries(boolean)> -> <org.torproject.android.service.TorService: void stopTor()>
<org.torproject.android.service.TorService$3: void run()> -> <org.torproject.android.service.TorService: boolean checkTorBinaries(boolean)>
<org.torproject.android.service.TorService: void onStart(android.content.Intent,int)> -> <org.torproject.android.service.TorService$3: void run()>
<org.torproject.android.service.CheckBinariesAsyncTask: java.lang.Long doInBackground(org.torproject.android.service.TorService[])> -> <org.torproject.android.service.TorService: boolean checkTorBinaries(boolean)>
<org.torproject.android.service.CheckBinariesAsyncTask: java.lang.Object doInBackground(java.lang.Object[])> -> <org.torproject.android.service.CheckBinariesAsyncTask: java.lang.Long doInBackground(org.torproject.android.service.TorService[])>
<org.torproject.android.service.TorService$4: void run()> -> <org.torproject.android.service.TorService: boolean checkTorBinaries(boolean)>
<org.torproject.android.service.TorService: void initTor()> -> <org.torproject.android.service.TorService: void killTorProcess()>
<org.torproject.android.service.TorService: void run()> -> <org.torproject.android.service.TorService: void initTor()>
<org.torproject.android.service.TorService: void runTorShellCmd()> -> <org.torproject.android.service.TorServiceUtils: int findProcessId(java.lang.String)>
<org.torproject.android.service.TorService: void initTor()> -> <org.torproject.android.service.TorService: void runTorShellCmd()>
<org.torproject.android.service.TorService: void runPrivoxyShellCmd()> -> <org.torproject.android.service.TorServiceUtils: int findProcessId(java.lang.String)>
<org.torproject.android.service.TorService: void initTor()> -> <org.torproject.android.service.TorService: void runPrivoxyShellCmd()>
