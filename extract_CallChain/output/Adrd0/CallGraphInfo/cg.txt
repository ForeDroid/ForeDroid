<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MyPlayerService$CommandReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService$CommandReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.LogoActivity dummyMainMethod_com_ophone_MiniPlayer_LogoActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MainActivity dummyMainMethod_com_ophone_MiniPlayer_MainActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity$UpdateReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MyPlayerService dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.xxx.yyy.MyService dummyMainMethod_com_xxx_yyy_MyService(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity$UpdateReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity$UpdateReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MyPlayer$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayer$UpdateReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.xxx.yyy.MyBoolService dummyMainMethod_com_xxx_yyy_MyBoolService(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.xxx.yyy.MyAlarmReceiver dummyMainMethod_com_xxx_yyy_MyAlarmReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.ophone.MiniPlayer.MusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MusicActivity$UpdateReceiver(android.content.Intent)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <android.view.View: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.LogoActivity dummyMainMethod_com_ophone_MiniPlayer_LogoActivity(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.MainActivity dummyMainMethod_com_ophone_MiniPlayer_MainActivity(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity$UpdateReceiver(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.xxx.yyy.MyService dummyMainMethod_com_xxx_yyy_MyService(android.content.Intent)> -> <com.xxx.yyy.MyService: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity$UpdateReceiver(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity$UpdateReceiver(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayer$UpdateReceiver(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MusicActivity$UpdateReceiver(android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<com.xxx.yyy.MyService: void <clinit>()> -> <android.net.Uri: void <clinit>()>
<com.xxx.yyy.MyService: void <clinit>()> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MusicActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MusicActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: java.lang.Integer access$9(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList access$0(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: int access$8(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void access$7(com.ophone.MiniPlayer.MusicActivity,int)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MusicActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void <init>()> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void <init>()> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Integer: java.lang.Integer valueOf(int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Exception: void <init>()>
<java.lang.Exception: void <init>()> -> <java.lang.Throwable: void <init>()>
<java.lang.Object: void <init>()> -> <java.lang.Object: void finalize()>
<com.ophone.MiniPlayer.MusicActivity: void <init>()> -> <com.ophone.MiniPlayer.MusicActivity$2: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$2: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void <init>()> -> <com.ophone.MiniPlayer.MusicActivity$1: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$1: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.Loadimageurl: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void <init>()> -> <android.app.ListActivity: void <init>()>
<dummyMainClass: com.xxx.yyy.MyAlarmReceiver dummyMainMethod_com_xxx_yyy_MyAlarmReceiver(android.content.Intent)> -> <com.xxx.yyy.MyAlarmReceiver: void <init>()>
<dummyMainClass: com.xxx.yyy.MyAlarmReceiver dummyMainMethod_com_xxx_yyy_MyAlarmReceiver(android.content.Intent)> -> <com.xxx.yyy.MyAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.xxx.yyy.MyAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <clinit>()>
<com.xxx.yyy.MyAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.lang.String getAction()>
<com.xxx.yyy.MyAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.xxx.yyy.MyAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.xxx.yyy.MyAlarmReceiver: android.content.Intent getIntent()>
<com.xxx.yyy.MyAlarmReceiver: void <init>()> -> <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.xxx.yyy.MyBoolService dummyMainMethod_com_xxx_yyy_MyBoolService(android.content.Intent)> -> <com.xxx.yyy.MyBoolService: void <init>()>
<dummyMainClass: com.xxx.yyy.MyBoolService dummyMainMethod_com_xxx_yyy_MyBoolService(android.content.Intent)> -> <com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <clinit>()>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.PendingIntent: void <clinit>()>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.lang.String getAction()>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <com.xxx.yyy.MyBoolService: android.content.Intent getIntent()>
<com.xxx.yyy.MyBoolService: void <init>()> -> <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayer$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void <init>(com.ophone.MiniPlayer.MyPlayer)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayer$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void access$4(com.ophone.MiniPlayer.MyPlayer)>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void access$3(com.ophone.MiniPlayer.MyPlayer)>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void <init>(com.ophone.MiniPlayer.MyPlayer)> -> <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayer$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void <init>()>
<com.ophone.MiniPlayer.MyPlayer: void <init>()> -> <com.ophone.MiniPlayer.MyPlayer$3: void <init>(com.ophone.MiniPlayer.MyPlayer)>
<com.ophone.MiniPlayer.MyPlayer$3: void <init>(com.ophone.MiniPlayer.MyPlayer)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.MyPlayer: void <init>()> -> <com.ophone.MiniPlayer.MyPlayer$2: void <init>(com.ophone.MiniPlayer.MyPlayer)>
<com.ophone.MiniPlayer.MyPlayer$2: void <init>(com.ophone.MiniPlayer.MyPlayer)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayer: void <init>()> -> <com.ophone.MiniPlayer.MyPlayer$1: void <init>(com.ophone.MiniPlayer.MyPlayer)>
<com.ophone.MiniPlayer.MyPlayer$1: void <init>(com.ophone.MiniPlayer.MyPlayer)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayer: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.MyPlayer: void <init>()> -> <android.app.Activity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: int access$5(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$4(com.ophone.MiniPlayer.PlayingListActivity,int)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void <init>(com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.Thread: void start()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <com.ophone.MiniPlayer.PlayingListActivity: android.os.Handler access$6(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: com.ophone.MiniPlayer.PlayingListActivity access$0(com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <java.lang.StringBuilder: java.lang.String toString()>
<java.lang.Thread: void start()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void <init>(com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver)> -> <java.lang.Thread: void <init>()>
<java.lang.Thread: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: void <init>()> -> <com.ophone.MiniPlayer.PlayingListActivity$2: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$2: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: void <init>()> -> <com.ophone.MiniPlayer.PlayingListActivity$1: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$1: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: void <init>()> -> <android.app.ListActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: void onResume()>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: void onPause()>
<dummyMainClass: com.ophone.MiniPlayer.MusicFeedActivity dummyMainMethod_com_ophone_MiniPlayer_MusicFeedActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicFeedActivity: void onDestroy()>
<com.ophone.MiniPlayer.MusicFeedActivity: void <init>()> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.MusicFeedActivity: void <init>()> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <java.lang.String: java.lang.String valueOf(int)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.graphics.Bitmap: void <clinit>()>
<java.lang.String: java.lang.String valueOf(int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.graphics.Matrix: void <init>()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.graphics.Matrix: boolean postScale(float,float)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onDestroy()> -> <android.app.ListActivity: void onDestroy()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onPause()> -> <android.app.Activity: void onPause()>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <android.app.Activity: void onResume()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <android.app.ListActivity: android.widget.ListView getListView()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setTitle(java.lang.CharSequence)>
<com.ophone.MiniPlayer.MusicFeedActivity: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.MusicFeedActivity: void <init>()> -> <android.app.ListActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.lang.Integer access$5(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.ArrayList access$4(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: int access$10(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void access$9(com.ophone.MiniPlayer.OnlineMusicActivity,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)> -> <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void <init>()> -> <com.ophone.MiniPlayer.OnlineMusicActivity$2: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$2: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void <init>()> -> <com.ophone.MiniPlayer.OnlineMusicActivity$1: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$1: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void <init>()> -> <android.app.ListActivity: void <init>()>
<dummyMainClass: com.xxx.yyy.MyService dummyMainMethod_com_xxx_yyy_MyService(android.content.Intent)> -> <com.xxx.yyy.MyService: void <init>()>
<dummyMainClass: com.xxx.yyy.MyService dummyMainMethod_com_xxx_yyy_MyService(android.content.Intent)> -> <com.xxx.yyy.MyService: void onCreate()>
<dummyMainClass: com.xxx.yyy.MyService dummyMainMethod_com_xxx_yyy_MyService(android.content.Intent)> -> <com.xxx.yyy.MyService: void onStart(android.content.Intent,int)>
<dummyMainClass: com.xxx.yyy.MyService dummyMainMethod_com_xxx_yyy_MyService(android.content.Intent)> -> <com.xxx.yyy.MyService: android.os.IBinder onBind(android.content.Intent)>
<dummyMainClass: com.xxx.yyy.MyService dummyMainMethod_com_xxx_yyy_MyService(android.content.Intent)> -> <com.xxx.yyy.MyService: void onDestroy()>
<com.xxx.yyy.MyService: void <init>()> -> <android.net.Uri: void <clinit>()>
<com.xxx.yyy.MyService: void <init>()> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.content.Intent: void <clinit>()>
<com.xxx.yyy.MyService: void onCreate()> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.net.Uri: void <clinit>()>
<com.xxx.yyy.MyService: void onCreate()> -> <android.app.PendingIntent: void <clinit>()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <com.xxx.yyy.MyService: void <clinit>()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.os.SystemClock: long elapsedRealtime()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <com.xxx.yyy.MyService: void setMobileDataState(android.content.Context,boolean)>
<com.xxx.yyy.MyService: void setMobileDataState(android.content.Context,boolean)> -> <com.xxx.yyy.MyService: void <clinit>()>
<com.xxx.yyy.MyService: void setMobileDataState(android.content.Context,boolean)> -> <com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)>
<com.xxx.yyy.MyService: android.os.IBinder onBind(android.content.Intent)> -> <com.xxx.yyy.MyService: android.content.Intent getIntent()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <com.xxx.yyy.qzl: void <init>(android.content.Context,java.lang.String,java.lang.String,int,com.xxx.yyy.SMSObserver)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <com.xxx.yyy.qzl: void GG()>
<com.xxx.yyy.qzl: void GG()> -> <com.xxx.yyy.qzl$1: void <init>(com.xxx.yyy.qzl)>
<com.xxx.yyy.qzl: void GG()> -> <java.lang.Thread: void start()>
<com.xxx.yyy.qzl: void GG()> -> <com.xxx.yyy.qzl$1: void run()>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: android.content.Context access$5(com.xxx.yyy.qzl)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: void access$7(com.xxx.yyy.qzl,java.lang.String)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: java.lang.String access$4(com.xxx.yyy.qzl)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: java.lang.String access$0(com.xxx.yyy.qzl)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: java.lang.String access$1(com.xxx.yyy.qzl)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: java.lang.String access$6(com.xxx.yyy.qzl,java.lang.String)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: java.lang.String access$3(com.xxx.yyy.qzl)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.qzl: java.lang.String access$2(com.xxx.yyy.qzl)>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.UpdateHelper: void <clinit>()>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <com.xxx.yyy.ddda: byte[] convertHexString(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <com.xxx.yyy.ddda: java.lang.String toHexString(byte[])>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<com.xxx.yyy.ddda: byte[] convertHexString(java.lang.String)> -> <java.lang.Integer: void <clinit>()>
<com.xxx.yyy.ddda: byte[] convertHexString(java.lang.String)> -> <java.lang.Integer: int parseInt(java.lang.String,int)>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.Integer: void <clinit>()>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.Integer: java.lang.String toHexString(int)>
<java.lang.Integer: java.lang.String toHexString(int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int parseInt(java.lang.String,int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.String toString()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.StringBuffer: void <init>()>
<java.lang.StringBuffer: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: void <init>()> -> <java.lang.AbstractStringBuilder: void <init>()>
<com.xxx.yyy.ddda: byte[] convertHexString(java.lang.String)> -> <java.lang.String: int length()>
<com.xxx.yyy.ddda: byte[] convertHexString(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<java.lang.String: java.lang.String substring(int,int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <javax.crypto.spec.DESKeySpec: void <init>(byte[])>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<java.lang.String: byte[] getBytes(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <javax.crypto.spec.DESKeySpec: void <init>(byte[])>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <java.lang.String: void <init>(byte[])>
<java.lang.String: void <init>(byte[])> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: void <init>(byte[])> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.UpdateHelper: void <init>(android.content.Context,int)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.UpdateHelper: void Doit(java.lang.String)>
<com.xxx.yyy.UpdateHelper: void <init>(android.content.Context,int)> -> <com.xxx.yyy.UpdateHelper: void <clinit>()>
<com.xxx.yyy.UpdateHelper: void Doit(java.lang.String)> -> <com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <com.xxx.yyy.UpdateHelper: void <clinit>()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.io.FileOutputStream: void close()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.io.FileOutputStream: void write(byte[],int,int)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.io.FileOutputStream: void <init>(java.io.File)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.xxx.yyy.UpdateHelper: void <init>(android.content.Context,int)> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.UpdateHelper: void <init>(android.content.Context,int)> -> <com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.lang.System: void <clinit>()>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<java.lang.Throwable: void printStackTrace()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.io.File: boolean exists()>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.io.File: boolean mkdir()>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.lang.String: java.lang.String toString()>
<java.lang.String: java.lang.String toString()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.adad: void <init>(java.lang.String,java.lang.String,int,java.lang.String,android.content.Context)>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.adad: void StartGo()>
<com.xxx.yyy.adad: void StartGo()> -> <com.xxx.yyy.adad$1: void <init>(com.xxx.yyy.adad)>
<com.xxx.yyy.adad: void StartGo()> -> <java.lang.Thread: void start()>
<com.xxx.yyy.adad: void StartGo()> -> <com.xxx.yyy.adad$1: void run()>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.Thread: void sleep(long)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.adad: java.lang.String access$2(com.xxx.yyy.adad)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.adad: android.content.Context access$3(com.xxx.yyy.adad)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.adad: int access$5(com.xxx.yyy.adad)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.adad: java.lang.String access$1(com.xxx.yyy.adad)>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.adad: java.lang.String access$4(com.xxx.yyy.adad,java.lang.String)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.adad: java.lang.String access$0(com.xxx.yyy.adad)>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.Integer: void <clinit>()>
<java.lang.Integer: int parseInt(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: void sleep(long)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <org.apache.http.client.params.HttpClientParams: void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String)>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <org.apache.http.HttpHost: void <init>(java.lang.String,int)>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <com.xxx.yyy.BBBB$LogRedirectHandler: void <init>(com.xxx.yyy.BBBB)>
<com.xxx.yyy.BBBB$LogRedirectHandler: void <init>(com.xxx.yyy.BBBB)> -> <org.apache.http.impl.client.DefaultRedirectHandler: void <init>()>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <java.util.ArrayList: void <init>()>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <com.xxx.yyy.BBBB: int GetRandomFromMinToMax(int,int)>
<com.xxx.yyy.BBBB: int GetRandomFromMinToMax(int,int)> -> <java.util.Random: void <init>(long)>
<com.xxx.yyy.BBBB: int GetRandomFromMinToMax(int,int)> -> <java.util.Random: int nextInt(int)>
<com.xxx.yyy.BBBB: int GetRandomFromMinToMax(int,int)> -> <java.util.Date: void <init>()>
<com.xxx.yyy.BBBB: int GetRandomFromMinToMax(int,int)> -> <java.util.Date: long getTime()>
<com.xxx.yyy.adad$1: void run()> -> <java.util.ArrayList: int size()>
<com.xxx.yyy.adad$1: void run()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.xxx.yyy.adad$1: void run()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.xxx.yyy.adad$1: void run()> -> <java.util.ArrayList: void <init>()>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.String: int length()>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.String: char charAt(int)>
<com.xxx.yyy.adad$1: void run()> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<java.lang.String: java.lang.String[] split(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.adad$1: void <init>(com.xxx.yyy.adad)> -> <java.lang.Thread: void <init>()>
<com.xxx.yyy.adad: void <init>(java.lang.String,java.lang.String,int,java.lang.String,android.content.Context)> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.ssmm: void <init>()>
<com.xxx.yyy.qzl$1: void run()> -> <com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)>
<com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)> -> <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)> -> <android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>
<com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)> -> <android.app.PendingIntent: void <clinit>()>
<com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)> -> <android.content.Intent: void <init>()>
<com.xxx.yyy.ssmm: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.String: int length()>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.String: char charAt(int)>
<com.xxx.yyy.qzl$1: void run()> -> <java.lang.String: java.lang.String substring(int)>
<java.lang.String: java.lang.String substring(int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.qzl$1: void <init>(com.xxx.yyy.qzl)> -> <java.lang.Thread: void <init>()>
<com.xxx.yyy.qzl: void <init>(android.content.Context,java.lang.String,java.lang.String,int,com.xxx.yyy.SMSObserver)> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <java.util.Date: void <init>()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <java.util.Date: long getTime()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <com.xxx.yyy.MyService: android.content.Intent getIntent()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <com.xxx.yyy.MyService: void openAPN()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.xxx.yyy.MyService: void openAPN()> -> <android.content.ContentValues: void <clinit>()>
<com.xxx.yyy.MyService: void openAPN()> -> <com.xxx.yyy.APNMatchTools: java.lang.String matchAPN(java.lang.String)>
<com.xxx.yyy.MyService: void openAPN()> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.MyService: void openAPN()> -> <com.xxx.yyy.MyService: void <clinit>()>
<com.xxx.yyy.APNMatchTools: java.lang.String matchAPN(java.lang.String)> -> <com.xxx.yyy.APNMatchTools$APNNet: void <clinit>()>
<com.xxx.yyy.APNMatchTools: java.lang.String matchAPN(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.APNMatchTools: java.lang.String matchAPN(java.lang.String)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.xxx.yyy.APNMatchTools: java.lang.String matchAPN(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<java.lang.String: boolean startsWith(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String toLowerCase()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.xxx.yyy.MyService: void openAPN()> -> <java.lang.String: java.lang.String toLowerCase()>
<com.xxx.yyy.MyService: void openAPN()> -> <java.lang.String: int compareTo(java.lang.String)>
<com.xxx.yyy.MyService: void openAPN()> -> <android.content.ContentValues: void <init>()>
<com.xxx.yyy.MyService: void openAPN()> -> <android.content.ContentValues: void putNull(java.lang.String)>
<com.xxx.yyy.MyService: void openAPN()> -> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.xxx.yyy.MyService: void openAPN()> -> <com.xxx.yyy.MyService: java.util.List getAPNList()>
<com.xxx.yyy.MyService: void openAPN()> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.MyService: void openAPN()> -> <java.util.ArrayList: java.util.Iterator iterator()>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <com.xxx.yyy.MyService$APN: void <init>()>
<com.xxx.yyy.MyService$APN: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <java.util.ArrayList: void <init>()>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.xxx.yyy.qzl: void <init>(android.content.Context,java.lang.String,java.lang.String,int,com.xxx.yyy.SMSObserver)> -> <android.content.Context: java.lang.String getString(int)>
<com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)> -> <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.os.Handler: void <init>()>
<com.xxx.yyy.MyService: void onCreate()> -> <com.xxx.yyy.SMSObserver: void <init>(android.os.Handler,android.content.Context)>
<com.xxx.yyy.SMSObserver: void <init>(android.os.Handler,android.content.Context)> -> <com.xxx.yyy.SMSDatabaseHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<com.xxx.yyy.SMSObserver: void <init>(android.os.Handler,android.content.Context)> -> <com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)>
<com.xxx.yyy.SMSObserver: void <init>(android.os.Handler,android.content.Context)> -> <com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <com.xxx.yyy.SMSEntityBad: void <clinit>()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <java.lang.String: java.lang.String valueOf(int)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.SMSEntityBad: void <clinit>()> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <com.xxx.yyy.SMSEntityBad: void <init>()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <com.xxx.yyy.SMSEntityBad: void setId(long)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <com.xxx.yyy.SMSEntityBad: void setKeyWord(java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <com.xxx.yyy.SMSEntityBad: void setType(int)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <com.xxx.yyy.SMSEntityBad: void setFlag(int)>
<com.xxx.yyy.SMSEntityBad: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <java.util.ArrayList: void <init>()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.xxx.yyy.SMSDatabaseHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)> -> <android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<com.xxx.yyy.SMSObserver: void <init>(android.os.Handler,android.content.Context)> -> <android.database.ContentObserver: void <init>(android.os.Handler)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.xxx.yyy.SMSObserver: void <init>(android.os.Handler,android.content.Context)> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.xxx.yyy.MyService: void <init>()> -> <android.app.Service: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void onCreate()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void onStart(android.content.Intent,int)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: android.os.IBinder onBind(android.content.Intent)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void onDestroy()>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <android.content.IntentFilter: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void onDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.ophone.MiniPlayer.MyPlayerService: android.os.IBinder onBind(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.MyPlayerService: void onStart(android.content.Intent,int)> -> <com.ophone.MiniPlayer.MyPlayerService: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.MyPlayerService: void onStart(android.content.Intent,int)> -> <com.ophone.MiniPlayer.MyPlayerService: void updateUi()>
<com.ophone.MiniPlayer.MyPlayerService: void updateUi()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void updateUi()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateUi()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void updateUi()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <com.ophone.MiniPlayer.MyPlayerService$3: void <init>(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$3: void <init>(com.ophone.MiniPlayer.MyPlayerService)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <android.content.IntentFilter: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <android.content.IntentFilter: void addDataScheme(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void <init>(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void <init>(com.ophone.MiniPlayer.MyPlayerService)> -> <android.content.BroadcastReceiver: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <android.media.MediaPlayer: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void onCreate()> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.ophone.MiniPlayer.MyPlayerService: void <init>()> -> <com.ophone.MiniPlayer.MyPlayerService$2: void <init>(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$2: void <init>(com.ophone.MiniPlayer.MyPlayerService)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void <init>()> -> <com.ophone.MiniPlayer.MyPlayerService$1: void <init>(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: void <init>(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.IPlayback$Stub: void <init>()>
<com.ophone.MiniPlayer.IPlayback$Stub: void <init>()> -> <android.os.Binder: void <init>()>
<com.ophone.MiniPlayer.IPlayback$Stub: void <init>()> -> <android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void <init>()> -> <android.app.Service: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$0(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$13(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: android.widget.Button access$12(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: int access$11(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$10(com.ophone.MiniPlayer.lyricsactivity,int)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: java.util.List access$9(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$8(com.ophone.MiniPlayer.lyricsactivity,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$7(com.ophone.MiniPlayer.lyricsactivity,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$6(com.ophone.MiniPlayer.lyricsactivity,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$5(com.ophone.MiniPlayer.lyricsactivity,java.util.List)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$4(com.ophone.MiniPlayer.lyricsactivity,int)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity$UpdateReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void <init>()> -> <com.ophone.MiniPlayer.lyricsactivity$3: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$3: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void <init>()> -> <com.ophone.MiniPlayer.lyricsactivity$2: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$2: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void <init>()> -> <com.ophone.MiniPlayer.lyricsactivity$1: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$1: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void <init>()> -> <android.app.Activity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MainActivity dummyMainMethod_com_ophone_MiniPlayer_MainActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MainActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MainActivity dummyMainMethod_com_ophone_MiniPlayer_MainActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.MainActivity dummyMainMethod_com_ophone_MiniPlayer_MainActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MainActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<dummyMainClass: com.ophone.MiniPlayer.MainActivity dummyMainMethod_com_ophone_MiniPlayer_MainActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MainActivity: void onDestroy()>
<com.ophone.MiniPlayer.MainActivity: void <init>()> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.MainActivity: void <init>()> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.MainActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MainActivity: void onDestroy()> -> <android.app.Activity: void onDestroy()>
<com.ophone.MiniPlayer.MainActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MainActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<com.ophone.MiniPlayer.MainActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MainActivity$AddAdapter: void <init>(com.ophone.MiniPlayer.MainActivity,com.ophone.MiniPlayer.MainActivity)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: void <init>(com.ophone.MiniPlayer.MainActivity,com.ophone.MiniPlayer.MainActivity)> -> <com.ophone.MiniPlayer.MainActivity$AddAdapter$ListItem: void <init>(com.ophone.MiniPlayer.MainActivity$AddAdapter,android.content.res.Resources,int,int,int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$ListItem: void <init>(com.ophone.MiniPlayer.MainActivity$AddAdapter,android.content.res.Resources,int,int,int)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: void <init>(com.ophone.MiniPlayer.MainActivity,com.ophone.MiniPlayer.MainActivity)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: void <init>(com.ophone.MiniPlayer.MainActivity,com.ophone.MiniPlayer.MainActivity)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: void <init>(com.ophone.MiniPlayer.MainActivity,com.ophone.MiniPlayer.MainActivity)> -> <android.widget.BaseAdapter: void <init>()>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setTitle(java.lang.CharSequence)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: void <init>(com.ophone.MiniPlayer.MainActivity,com.ophone.MiniPlayer.MainActivity)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: void <init>(com.ophone.MiniPlayer.MainActivity,com.ophone.MiniPlayer.MainActivity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MainActivity: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.MainActivity: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MainActivity: void <init>()> -> <android.app.Activity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search$2: void <init>(com.ophone.MiniPlayer.Search)>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.ophone.MiniPlayer.Search$2: void <init>(com.ophone.MiniPlayer.Search)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search$3: void <init>(com.ophone.MiniPlayer.Search)>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.ophone.MiniPlayer.Search$3: void <init>(com.ophone.MiniPlayer.Search)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search$1: void <init>(com.ophone.MiniPlayer.Search)>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <android.net.Uri: void <clinit>()>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.Search$1: void <init>(com.ophone.MiniPlayer.Search)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.Search dummyMainMethod_com_ophone_MiniPlayer_Search(android.content.Intent)> -> <com.ophone.MiniPlayer.Search: boolean onCreateOptionsMenu(android.view.Menu)>
<com.ophone.MiniPlayer.Search: void <init>()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.util.DisplayMetrics: void <clinit>()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.Search: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.Search: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.Search: boolean onCreateOptionsMenu(android.view.Menu)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.Search: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.Search: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.Search: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.Search$3: void <init>(com.ophone.MiniPlayer.Search)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.Search$2: void <init>(com.ophone.MiniPlayer.Search)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.graphics.drawable.BitmapDrawable: void <init>()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.PopupWindow: void <init>(android.view.View,int,int)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.Search$1: void <init>(com.ophone.MiniPlayer.Search)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.util.DisplayMetrics: void <init>()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.WindowManager getWindowManager()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.Search: android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[])> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.PopupWindow: void setOutsideTouchable(boolean)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.PopupWindow: void setFocusable(boolean)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.PopupWindow: void setTouchInterceptor(android.view.View$OnTouchListener)>
<com.ophone.MiniPlayer.Search: void <init>()> -> <com.ophone.MiniPlayer.Loadimageurl: void <init>()>
<com.ophone.MiniPlayer.Search: void <init>()> -> <android.app.Activity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.LogoActivity dummyMainMethod_com_ophone_MiniPlayer_LogoActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.LogoActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.LogoActivity dummyMainMethod_com_ophone_MiniPlayer_LogoActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: void <init>()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.LogoActivity$1: void <init>(com.ophone.MiniPlayer.LogoActivity)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.lang.Thread: void start()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.LogoActivity$1: void run()>
<com.ophone.MiniPlayer.LogoActivity$1: void run()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.LogoActivity$1: void run()> -> <java.lang.Thread: void sleep(long)>
<com.ophone.MiniPlayer.LogoActivity$1: void run()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.LogoActivity$1: void run()> -> <java.lang.Thread: void stop()>
<java.lang.Thread: void stop()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.LogoActivity$1: void <init>(com.ophone.MiniPlayer.LogoActivity)> -> <java.lang.Thread: void <init>()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.LogoActivity: void <init>()> -> <android.app.Activity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer$2: void <init>(com.ophone.MiniPlayer.MyPlayer)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer$2: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<com.ophone.MiniPlayer.MyPlayer$2: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer$2: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <com.ophone.MiniPlayer.MyPlayer: com.ophone.MiniPlayer.IPlayback access$2(com.ophone.MiniPlayer.MyPlayer)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void onResume()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void onPause()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayer dummyMainMethod_com_ophone_MiniPlayer_MyPlayer(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayer: void onDestroy()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.MyPlayer: boolean onCreateOptionsMenu(android.view.Menu)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.MyPlayer: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.System: long currentTimeMillis()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.utils.Digest: java.lang.String testDigest(java.lang.String)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String testDigest(java.lang.String)> -> <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String testDigest(java.lang.String)> -> <java.lang.String: byte[] getBytes()>
<java.lang.String: byte[] getBytes()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String testDigest(java.lang.String)> -> <com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.Integer: java.lang.String toHexString(int)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.String: java.lang.String toLowerCase()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.utils.Digest: void <init>()>
<com.ophone.MiniPlayer.utils.Digest: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.util.ArrayList: void <init>(int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.BaiduXmlHandler: void <init>()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: void <init>()> -> <com.ophone.MiniPlayer.provider.XmlHandler: void <init>()>
<com.ophone.MiniPlayer.provider.XmlHandler: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.ophone.MiniPlayer.MyPlayer: void onDestroy()> -> <android.app.Activity: void onDestroy()>
<com.ophone.MiniPlayer.MyPlayer: void onDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.ophone.MiniPlayer.MyPlayer: void onDestroy()> -> <android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<com.ophone.MiniPlayer.MyPlayer: void onPause()> -> <android.app.Activity: void onPause()>
<com.ophone.MiniPlayer.MyPlayer: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MyPlayer: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MyPlayer: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.ophone.MiniPlayer.MyPlayer: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.ophone.MiniPlayer.MyPlayer: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.ophone.MiniPlayer.MyPlayer: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.ophone.MiniPlayer.MyPlayer: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer: void onResume()> -> <android.app.Activity: void onResume()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <init>()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void <init>(com.ophone.MiniPlayer.MyPlayer)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.app.Activity: boolean requestWindowFeature(int)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MyPlayer: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MyPlayer: void setview()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MyPlayer: void SendIsPlaying()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MyPlayer: void Init()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.app.Activity: void finish()>
<com.ophone.MiniPlayer.MyPlayer: void SendIsPlaying()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void Init()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void Init()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void Init()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayer: void Init()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer: void SendIsPlaying()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void SendIsPlaying()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayer: void SendIsPlaying()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MyPlayer: void SendIsPlaying()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer: void setview()> -> <android.app.Activity: android.view.View findViewById(int)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService$CommandReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService$CommandReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void <init>(com.ophone.MiniPlayer.MyPlayerService)>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService$CommandReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService$CommandReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$26(com.ophone.MiniPlayer.MyPlayerService,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$25(com.ophone.MiniPlayer.MyPlayerService,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$12(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$24(com.ophone.MiniPlayer.MyPlayerService,java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$9(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$23(com.ophone.MiniPlayer.MyPlayerService,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$22(com.ophone.MiniPlayer.MyPlayerService,int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.System: long currentTimeMillis()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$8(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$6(com.ophone.MiniPlayer.MyPlayerService,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$21(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$7(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$20(com.ophone.MiniPlayer.MyPlayerService,int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$19(com.ophone.MiniPlayer.MyPlayerService,int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$18(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$17(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$16(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$15(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$14(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$3(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$13(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$1(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$11(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$5: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$5: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$2: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$2: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$1: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$1: void <init>(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: android.content.Intent getIntent()>
<dummyMainClass: com.ophone.MiniPlayer.MyPlayerService$CommandReceiver dummyMainMethod_com_ophone_MiniPlayer_MyPlayerService$CommandReceiver(android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$4: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$4: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.MusicActivity$4: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$5: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$5: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.MusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.MusicActivity: void access$11(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$5: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$8: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$8: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.MusicActivity$8: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$9: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.MusicActivity: int access$15(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.List access$3(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.MusicActivity: void access$14(com.ophone.MiniPlayer.MusicActivity,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.MusicActivity: android.database.Cursor access$13(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.provider.MediaStore$Audio$Media: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.io.File: boolean exists()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.io.File: boolean delete()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$9: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$7: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$7: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.MusicActivity$7: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$7: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MusicActivity$7: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.MusicActivity: void access$12(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$7: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$6: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity$6: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.MusicActivity$6: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void onResume()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void onPause()>
<dummyMainClass: com.ophone.MiniPlayer.MusicActivity dummyMainMethod_com_ophone_MiniPlayer_MusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MusicActivity: void onDestroy()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.provider.MediaStore$Audio$Media: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.String: java.lang.String valueOf(int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void onDestroy()> -> <android.app.ListActivity: void onDestroy()>
<com.ophone.MiniPlayer.MusicActivity: void onDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.ophone.MiniPlayer.MusicActivity: void onPause()> -> <android.app.Activity: void onPause()>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.MusicActivity$9: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.MusicActivity$8: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.MusicActivity$7: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.MusicActivity$6: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.MusicActivity$5: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.MusicActivity$4: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.MusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.MusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Activity: android.view.MenuInflater getMenuInflater()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.app.Activity: void showDialog(int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.content.ContentValues: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.provider.MediaStore$Audio$Media: android.net.Uri getContentUriForPath(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.net.Uri: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.provider.MediaStore$Audio$Media: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.content.ContentValues: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.MusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void showDialog(int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.ophone.MiniPlayer.MusicActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <com.ophone.MiniPlayer.MusicActivity: void JudgePlaying(int)>
<com.ophone.MiniPlayer.MusicActivity: void JudgePlaying(int)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void JudgePlaying(int)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void JudgePlaying(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MusicActivity: void JudgePlaying(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MusicActivity: void JudgePlaying(int)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicActivity: void onResume()> -> <com.ophone.MiniPlayer.MusicActivity$3: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: void onResume()> -> <java.lang.Thread: void start()>
<com.ophone.MiniPlayer.MusicActivity: void onResume()> -> <com.ophone.MiniPlayer.MusicActivity$3: void run()>
<com.ophone.MiniPlayer.MusicActivity$3: void run()> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$3: void run()> -> <com.ophone.MiniPlayer.MusicActivity: android.os.Handler access$10(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$3: void <init>(com.ophone.MiniPlayer.MusicActivity)> -> <java.lang.Thread: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void onResume()> -> <android.app.Activity: void onResume()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setTitle(int)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.app.ListActivity: android.widget.ListView getListView()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void registerForContextMenu(android.view.View)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <android.provider.MediaStore$Audio$Media: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <java.lang.String: java.lang.String valueOf(int)>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.Long: long parseLong(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.Long: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.Long: void <clinit>()>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<java.lang.Long: java.lang.Long valueOf(long)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Long: long parseLong(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.StringBuffer: java.lang.String toString()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.StringBuffer: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void setAlbum(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void setName(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void setId(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void setSinger(java.util.ArrayList)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void setPath(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void setDuration(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <com.ophone.MiniPlayer.provider.Song: void setTag(boolean)>
<com.ophone.MiniPlayer.provider.Song: void <init>()> -> <com.ophone.MiniPlayer.provider.Song$Source: void <init>(com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.provider.Song$Source: void <init>(com.ophone.MiniPlayer.provider.Song)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.provider.Song$Source: void <init>(com.ophone.MiniPlayer.provider.Song)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.provider.Song: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.provider.Song: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.io.File: boolean isDirectory()>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.io.File: java.io.File[] listFiles()>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.io.File: boolean isFile()>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.io.File: java.lang.String getName()>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.String: boolean contains(java.lang.CharSequence)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void folderScan(java.lang.String)> -> <com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <android.net.Uri: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: void fileScan(java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <java.util.ArrayList: int size()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$4: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$4: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$4: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$5: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$5: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void access$13(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$5: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void onResume()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void onPause()>
<dummyMainClass: com.ophone.MiniPlayer.OnlineMusicActivity dummyMainMethod_com_ophone_MiniPlayer_OnlineMusicActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void onDestroy()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onDestroy()> -> <android.app.ListActivity: void onDestroy()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onPause()> -> <android.app.Activity: void onPause()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$5: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$4: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.OnlineMusicActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void showDialog(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void senddownloadurltoservice(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void senddownloadurltoservice(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void senddownloadurltoservice(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void senddownloadurltoservice(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void senddownloadurltoservice(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void senddownloadurltoservice(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Activity: android.view.MenuInflater getMenuInflater()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onResume()> -> <com.ophone.MiniPlayer.OnlineMusicActivity$3: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onResume()> -> <java.lang.Thread: void start()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onResume()> -> <com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void access$11(com.ophone.MiniPlayer.OnlineMusicActivity,java.util.ArrayList)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.lang.Integer access$5(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <com.ophone.MiniPlayer.OnlineMusicActivity: android.os.Handler access$12(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.ArrayList access$4(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTagbaidu(boolean)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTaggoogle(boolean)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTag(boolean)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTagImage(boolean)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setId(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setName(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setSinger(java.util.ArrayList)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setAlbum(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void <init>()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.BaiduXmlHandler: void <init>()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <java.lang.Boolean: void <clinit>()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <java.lang.Boolean: boolean parseBoolean(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<java.lang.Boolean: boolean parseBoolean(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void <init>()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTaggoogle(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTagbaidu(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTag(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setTagImage(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setId(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setName(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setSinger(java.util.ArrayList)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setArtistId(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setAlbum(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setDuration(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setCanBeDownloaded(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setHasFullLyrics(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setCanBeStreamed(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setRingtoneUrl(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setAlbumId(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setHasSimilarSongs(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <com.ophone.MiniPlayer.provider.Song: void setHasRecommendation(boolean)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.GoogleXmlHandler: void <init>()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: void <init>()> -> <com.ophone.MiniPlayer.provider.XmlHandler: void <init>()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)> -> <java.lang.Thread: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onResume()> -> <android.app.Activity: void onResume()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setTitle(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.app.ListActivity: android.widget.ListView getListView()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void registerForContextMenu(android.view.View)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$6: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$6: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$6: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$6: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity$6: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$8(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$6: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$9: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$9: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$9: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$10(com.ophone.MiniPlayer.PlayingListActivity,int)>
<com.ophone.MiniPlayer.PlayingListActivity$9: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$7: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$7: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$7: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$5: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$5: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$5: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$11: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$11: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$11: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$11: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity$11: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$12(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$11: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: int access$11(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$11: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$8: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.view.View)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$9(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$8: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.view.View)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$3: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$3: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$3: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$12: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$12: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$12: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$12: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$13(com.ophone.MiniPlayer.PlayingListActivity,int)>
<com.ophone.MiniPlayer.PlayingListActivity$12: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$4: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$4: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$4: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$4: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity$4: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$7(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$4: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$14: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity$14: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.PlayingListActivity$14: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity$14: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$15(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$14: void onClick(android.content.DialogInterface,int)> -> <com.ophone.MiniPlayer.PlayingListActivity: int access$14(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$14: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void onResume()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void onPause()>
<dummyMainClass: com.ophone.MiniPlayer.PlayingListActivity dummyMainMethod_com_ophone_MiniPlayer_PlayingListActivity(android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: void onDestroy()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.ophone.MiniPlayer.PlayingListActivity: void onDestroy()> -> <android.app.ListActivity: void onDestroy()>
<com.ophone.MiniPlayer.PlayingListActivity: void onDestroy()> -> <android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<com.ophone.MiniPlayer.PlayingListActivity: void onDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.ophone.MiniPlayer.PlayingListActivity: void onPause()> -> <android.app.Activity: void onPause()>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.PlayingListActivity$8: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.view.View)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.PlayingListActivity$7: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.PlayingListActivity$6: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.PlayingListActivity$5: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.PlayingListActivity$4: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.PlayingListActivity$3: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Activity: android.view.MenuInflater getMenuInflater()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.app.Activity: void showDialog(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.PlayingListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.PlayingListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.PlayingListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.ophone.MiniPlayer.PlayingListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity$14: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity$13: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$13: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity$12: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity$11: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity$10: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$10: void <init>(com.ophone.MiniPlayer.PlayingListActivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity$9: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)> -> <java.lang.Character: void <clinit>()>
<com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)> -> <java.lang.Character: boolean isSupplementaryCodePoint(int)>
<java.lang.Character: boolean isSupplementaryCodePoint(int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.utils.PinyinComparator: java.lang.String pinyin(char)>
<com.ophone.MiniPlayer.utils.PinyinComparator: java.lang.String pinyin(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toHanyuPinyinStringArray(char)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toHanyuPinyinStringArray(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getUnformattedHanyuPinyinStringArray(char)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getUnformattedHanyuPinyinStringArray(char)> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: net.sourceforge.pinyin4j.ChineseToPinyinResource getInstance()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: net.sourceforge.pinyin4j.ChineseToPinyinResource getInstance()> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder: void <clinit>()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder: void <clinit>()> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: void <init>(net.sourceforge.pinyin4j.ChineseToPinyinResource$1)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void <init>(net.sourceforge.pinyin4j.ChineseToPinyinResource$1)> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: void <init>()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void <init>()> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: void initializeResource()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void initializeResource()> -> <net.sourceforge.pinyin4j.ResourceHelper: java.io.BufferedInputStream getResourceInputStream(java.lang.String)>
<net.sourceforge.pinyin4j.ResourceHelper: java.io.BufferedInputStream getResourceInputStream(java.lang.String)> -> <net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$(java.lang.String)>
<net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$(java.lang.String)> -> <java.lang.Class: java.lang.Class forName(java.lang.String)>
<java.lang.Class: java.lang.Class forName(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$(java.lang.String)> -> <java.lang.NoClassDefFoundError: void <init>(java.lang.String)>
<java.lang.NoClassDefFoundError: void <init>(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.NoClassDefFoundError: void <init>(java.lang.String)> -> <java.lang.LinkageError: void <init>()>
<java.lang.LinkageError: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.LinkageError: void <init>()> -> <java.lang.Error: void <init>()>
<java.lang.Error: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Error: void <init>()> -> <java.lang.Throwable: void <init>()>
<net.sourceforge.pinyin4j.ResourceHelper: java.io.BufferedInputStream getResourceInputStream(java.lang.String)> -> <java.io.BufferedInputStream: void <init>(java.io.InputStream)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void initializeResource()> -> <java.util.Properties: void load(java.io.InputStream)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void initializeResource()> -> <java.util.Properties: void <init>()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void initializeResource()> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: void setUnicodeToHanyuPinyinTable(java.util.Properties)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void initializeResource()> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: java.util.Properties getUnicodeToHanyuPinyinTable()>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getUnformattedHanyuPinyinStringArray(char)> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String[] getHanyuPinyinStringArray(char)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String[] getHanyuPinyinStringArray(char)> -> <java.lang.String: int length()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String[] getHanyuPinyinStringArray(char)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String[] getHanyuPinyinStringArray(char)> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String getHanyuPinyinRecordFromChar(char)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String getHanyuPinyinRecordFromChar(char)> -> <java.lang.Integer: void <clinit>()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String getHanyuPinyinRecordFromChar(char)> -> <java.lang.Integer: java.lang.String toHexString(int)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String getHanyuPinyinRecordFromChar(char)> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: java.util.Properties getUnicodeToHanyuPinyinTable()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String getHanyuPinyinRecordFromChar(char)> -> <net.sourceforge.pinyin4j.ChineseToPinyinResource: boolean isValidRecord(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.utils.PinyinComparator: void <init>()>
<com.ophone.MiniPlayer.utils.PinyinComparator: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void showDialog(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity: void SendSonglisttoService()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.Long: long parseLong(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.Float: float parseFloat(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.Long: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.Float: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void SendSonglisttoService()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <java.lang.String: void <clinit>()>
<java.lang.Float: float parseFloat(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <java.io.File: java.io.File[] listFiles()>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <java.io.File: java.lang.String getName()>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getFilelist(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<java.lang.String: int lastIndexOf(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendSonglisttoService()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendSonglisttoService()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendSonglisttoService()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendSonglisttoService()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.PlayingListActivity: void onResume()> -> <android.app.Activity: void onResume()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setTitle(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void finish()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.PlayingListActivity: void SendGetSongList()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.app.ListActivity: android.widget.ListView getListView()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void registerForContextMenu(android.view.View)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.PlayingListActivity: void SendGetSongList()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void SendGetSongList()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendGetSongList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendGetSongList()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$5: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$5: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.lyricsactivity$5: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$4: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$4: void onClick(android.content.DialogInterface,int)>
<com.ophone.MiniPlayer.lyricsactivity$4: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <java.lang.Object: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <com.ophone.MiniPlayer.R$styleable: void <clinit>()>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <android.view.View: void onDraw(android.graphics.Canvas)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <com.ophone.MiniPlayer.MyView: int getSentenceX(android.graphics.Paint,com.ophone.MiniPlayer.provider.Sentence)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <com.ophone.MiniPlayer.MyView: int getNowSentenceIndex(long)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <com.ophone.MiniPlayer.MyView: void drawKaraoke(com.ophone.MiniPlayer.provider.Sentence,int,int,long,android.graphics.Canvas)>
<com.ophone.MiniPlayer.MyView: void drawKaraoke(com.ophone.MiniPlayer.provider.Sentence,int,int,long,android.graphics.Canvas)> -> <android.graphics.Paint: void setColor(int)>
<com.ophone.MiniPlayer.MyView: void drawKaraoke(com.ophone.MiniPlayer.provider.Sentence,int,int,long,android.graphics.Canvas)> -> <android.graphics.Paint: void setTextSize(float)>
<com.ophone.MiniPlayer.MyView: void drawKaraoke(com.ophone.MiniPlayer.provider.Sentence,int,int,long,android.graphics.Canvas)> -> <android.graphics.Paint: void <init>()>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.graphics.Paint: void <init>()>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <com.ophone.MiniPlayer.MyView: void initMyView()>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.view.View: void setBackgroundResource(int)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <com.ophone.MiniPlayer.MyView: void setTextColor(int)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <com.ophone.MiniPlayer.MyView: void setTextSize(float)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <com.ophone.MiniPlayer.MyView: void setPaddings(float,float)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.view.View: int getHeight()>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.view.View: int getWidth()>
<com.ophone.MiniPlayer.MyView: void setPaddings(float,float)> -> <android.view.View: void setPadding(int,int,int,int)>
<com.ophone.MiniPlayer.MyView: void setTextSize(float)> -> <android.graphics.Paint: void setTextSize(float)>
<com.ophone.MiniPlayer.MyView: void setTextColor(int)> -> <android.graphics.Paint: void setColor(int)>
<com.ophone.MiniPlayer.MyView: void initMyView()> -> <android.graphics.Paint: void <init>()>
<com.ophone.MiniPlayer.MyView: void initMyView()> -> <android.graphics.Paint: void setColor(int)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$3: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <com.ophone.MiniPlayer.lyricsactivity: com.ophone.MiniPlayer.IPlayback access$3(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void <init>()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void onResume()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void onPause()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void onStop()>
<dummyMainClass: com.ophone.MiniPlayer.lyricsactivity dummyMainMethod_com_ophone_MiniPlayer_lyricsactivity(android.content.Intent)> -> <com.ophone.MiniPlayer.lyricsactivity: void onDestroy()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <java.lang.Boolean: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onStop()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onDestroy()> -> <java.lang.Boolean: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void onDestroy()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onDestroy()> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.ophone.MiniPlayer.lyricsactivity: void onDestroy()> -> <android.app.Activity: void onDestroy()>
<com.ophone.MiniPlayer.lyricsactivity: void onDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.ophone.MiniPlayer.lyricsactivity: void onDestroy()> -> <android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<com.ophone.MiniPlayer.lyricsactivity: void onStop()> -> <android.app.Activity: void onStop()>
<com.ophone.MiniPlayer.lyricsactivity: void onPause()> -> <android.app.Activity: void onPause()>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.lyricsactivity$5: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)> -> <com.ophone.MiniPlayer.lyricsactivity$4: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.lyricsactivity: android.app.Dialog onCreateDialog(int)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.ophone.MiniPlayer.lyricsactivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.lyricsactivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity: void finish()>
<com.ophone.MiniPlayer.lyricsactivity: void onResume()> -> <android.app.Activity: void onResume()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.IntentFilter: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: boolean requestWindowFeature(int)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.lyricsactivity: android.content.Intent getIntent()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.lyricsactivity: void setview()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.lyricsactivity: void SendIsPlaying()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.lyricsactivity: void Init()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void finish()>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.util.DisplayMetrics: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void SendIsPlaying()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void Init()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void Init()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void Init()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.lyricsactivity: void Init()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.lyricsactivity: void SendIsPlaying()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void SendIsPlaying()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.lyricsactivity: void SendIsPlaying()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.lyricsactivity: void SendIsPlaying()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.util.DisplayMetrics: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.app.Activity: android.view.WindowManager getWindowManager()>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.ophone.MiniPlayer.MyView: int getNowSentenceIndex(long)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyView: int getNowSentenceIndex(long)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity$4: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.lyricsactivity$5: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$5: void onClick(android.content.DialogInterface,int)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: void clear()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String getHanyuPinyinRecordFromChar(char)> -> <java.util.Properties: java.lang.String getProperty(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.PlayingListActivity: void access$15(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)> -> <com.ophone.MiniPlayer.PlayingListActivity: void sendselectfiletoservice(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void sendselectfiletoservice(java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void sendselectfiletoservice(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void sendselectfiletoservice(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void sendselectfiletoservice(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void sendselectfiletoservice(java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity: void access$7(com.ophone.MiniPlayer.PlayingListActivity)> -> <com.ophone.MiniPlayer.PlayingListActivity: void SendClearSongList()>
<com.ophone.MiniPlayer.PlayingListActivity: void SendClearSongList()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void SendClearSongList()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendClearSongList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendClearSongList()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity$3: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void access$9(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)> -> <com.ophone.MiniPlayer.PlayingListActivity: void SendsaveSonglist(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendsaveSonglist(java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void SendsaveSonglist(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendsaveSonglist(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendsaveSonglist(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void SendsaveSonglist(java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity: void access$12(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)> -> <com.ophone.MiniPlayer.PlayingListActivity: void senddeleteplaylist(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void senddeleteplaylist(java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void senddeleteplaylist(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void senddeleteplaylist(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void senddeleteplaylist(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void senddeleteplaylist(java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity$5: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.PlayingListActivity$7: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void access$8(com.ophone.MiniPlayer.PlayingListActivity)> -> <com.ophone.MiniPlayer.PlayingListActivity: void SenddeleteSong()>
<com.ophone.MiniPlayer.PlayingListActivity: void SenddeleteSong()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.PlayingListActivity: void SenddeleteSong()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void SenddeleteSong()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void SenddeleteSong()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void access$13(com.ophone.MiniPlayer.OnlineMusicActivity)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.OnlineMusicActivity$4: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: void clear()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MusicActivity$3: void run()> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.MusicActivity$3: void run()> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.MusicActivity: void JudgePlaying(int)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.ophone.MiniPlayer.MusicActivity$6: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.MusicActivity: void access$12(com.ophone.MiniPlayer.MusicActivity)> -> <com.ophone.MiniPlayer.MusicActivity: void SendAddalllocalSongtoList()>
<com.ophone.MiniPlayer.MusicActivity: void SendAddalllocalSongtoList()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void SendAddalllocalSongtoList()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void SendAddalllocalSongtoList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MusicActivity: void SendAddalllocalSongtoList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MusicActivity: void SendAddalllocalSongtoList()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.util.ArrayList: java.lang.Object remove(int)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.ophone.MiniPlayer.MusicActivity$8: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.MusicActivity: void access$11(com.ophone.MiniPlayer.MusicActivity)> -> <com.ophone.MiniPlayer.MusicActivity: void SendAddSongtoList()>
<com.ophone.MiniPlayer.MusicActivity: void SendAddSongtoList()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MusicActivity: void SendAddSongtoList()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void SendAddSongtoList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MusicActivity: void SendAddSongtoList()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MusicActivity: void SendAddSongtoList()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity$4: void onClick(android.content.DialogInterface,int)> -> <android.app.Activity: void dismissDialog(int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: boolean remove(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void SongRandom()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService: void SongRandomClosed()>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <java.lang.Math: double random()>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: void access$11(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void updateUi()>
<com.ophone.MiniPlayer.MyPlayerService: void access$1(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void nextSong()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.MyPlayerService$4: void <init>(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$4: void <init>(com.ophone.MiniPlayer.MyPlayerService)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.MyPlayerService: void showNotification()>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.app.Notification: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <java.lang.System: long currentTimeMillis()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.app.PendingIntent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.content.Context: java.lang.CharSequence getText(int)>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <android.media.MediaPlayer: void reset()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <android.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <android.media.MediaPlayer: void prepare()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: void access$13(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void updatenextui()>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$3(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void previousSong()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.MyPlayerService: void nextSong()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <android.media.MediaPlayer: void reset()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <android.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <android.media.MediaPlayer: void prepare()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: void access$14(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void updatepreui()>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$15(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.lang.System: long currentTimeMillis()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <com.ophone.MiniPlayer.provider.Song: void setName(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <com.ophone.MiniPlayer.provider.Song: void setSinger(java.util.ArrayList)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <com.ophone.MiniPlayer.provider.Song: void setPath(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <com.ophone.MiniPlayer.provider.Song: void setTagfile(boolean)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <com.ophone.MiniPlayer.provider.Song: void setAdddate(long)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <com.ophone.MiniPlayer.provider.Song: void setDuration(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <com.ophone.MiniPlayer.provider.Song: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.BufferedReader: void close()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.FileReader: void <init>(java.io.File)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.FileInputStream: void close()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.FileInputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$16(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void SendFlagrandomValue()>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrandomValue()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrandomValue()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrandomValue()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrandomValue()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$17(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void SendFlagrepeatValue()>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrepeatValue()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrepeatValue()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrepeatValue()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void SendFlagrepeatValue()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$18(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void clearSonglistUI()>
<com.ophone.MiniPlayer.MyPlayerService: void clearSonglistUI()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void clearSonglistUI()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void clearSonglistUI()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void clearSonglistUI()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MyPlayerService: void clearSonglistUI()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void clearSonglistUI()> -> <java.util.ArrayList: void clear()>
<com.ophone.MiniPlayer.MyPlayerService: void access$19(com.ophone.MiniPlayer.MyPlayerService,int)> -> <com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresultonline(int)>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresultonline(int)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresultonline(int)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresultonline(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresultonline(int)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$20(com.ophone.MiniPlayer.MyPlayerService,int)> -> <com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresult(int)>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresult(int)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresult(int)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresult(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void sendJudgePlayresult(int)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$21(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$8(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void playSong()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.MyPlayerService$5: void <init>(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$5: void <init>(com.ophone.MiniPlayer.MyPlayerService)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.MyPlayerService: void nextSong()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.MyPlayerService: void showNotification()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <android.media.MediaPlayer: void reset()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <android.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <android.media.MediaPlayer: void prepare()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void showNotification()>
<com.ophone.MiniPlayer.MyPlayerService: void access$22(com.ophone.MiniPlayer.MyPlayerService,int)> -> <com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void deletesongUI(int)> -> <java.util.ArrayList: java.lang.Object remove(int)>
<com.ophone.MiniPlayer.MyPlayerService: void access$23(com.ophone.MiniPlayer.MyPlayerService,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.Float: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.Long: long parseLong(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.Float: float parseFloat(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.Long: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.String: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.String: byte[] getBytes()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.io.FileOutputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.io.FileOutputStream: void write(byte[])>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.io.FileOutputStream: void close()>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.io.File: java.io.File[] listFiles()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.io.File: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.ArrayList getFilelist(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.util.AbstractCollection: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void access$9(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()>
<com.ophone.MiniPlayer.MyPlayerService: void access$24(com.ophone.MiniPlayer.MyPlayerService,java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.Thread: void start()>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.Thread: void run()>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService$6: void <init>(com.ophone.MiniPlayer.MyPlayerService,java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$6: void <init>(com.ophone.MiniPlayer.MyPlayerService,java.lang.String,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.Throwable: java.lang.String getMessage()>
<java.lang.Throwable: java.lang.String getMessage()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.FileOutputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.FileOutputStream: void close()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.FileOutputStream: void write(byte[],int,int)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.File: boolean exists()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.File: boolean mkdir()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.net.URL: java.net.URLConnection openConnection()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <android.net.Uri: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void fileScan(java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$12(com.ophone.MiniPlayer.MyPlayerService)> -> <com.ophone.MiniPlayer.MyPlayerService: void cancelNotification()>
<com.ophone.MiniPlayer.MyPlayerService: void access$25(com.ophone.MiniPlayer.MyPlayerService,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.System: long currentTimeMillis()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: void setName(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: void setSinger(java.util.ArrayList)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: void setPath(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: void setTagfile(boolean)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: void setAdddate(long)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: void setDuration(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.io.BufferedReader: void close()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.io.FileReader: void <init>(java.io.File)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void access$26(com.ophone.MiniPlayer.MyPlayerService,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <android.content.Intent: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <java.io.File: boolean delete()>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void deletefromfile(java.lang.String)> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.media.MediaPlayer: boolean isPlaying()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.media.MediaPlayer: void pause()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
<com.ophone.MiniPlayer.LogoActivity$1: void run()> -> <android.app.Activity: void finish()>
<com.ophone.MiniPlayer.LogoActivity$1: void run()> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.Search$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.widget.PopupWindow: boolean isShowing()>
<com.ophone.MiniPlayer.Search$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.widget.PopupWindow: void dismiss()>
<com.ophone.MiniPlayer.Search$2: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.widget.PopupWindow: boolean isShowing()>
<com.ophone.MiniPlayer.Search$2: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.widget.PopupWindow: void dismiss()>
<com.ophone.MiniPlayer.lyricsactivity: void access$13(com.ophone.MiniPlayer.lyricsactivity)> -> <com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.provider.Sentence: void setContent(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.provider.Sentence: void <init>()>
<com.ophone.MiniPlayer.provider.Sentence: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.Collections: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.File: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.System: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.Collections: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)> -> <java.lang.Integer: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<java.lang.String: java.lang.String valueOf(long)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.StringTokenizer: int countTokens()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.StringTokenizer: java.lang.String nextToken()>
<java.lang.Object: java.lang.String toString()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: long getFromTime()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setToTime(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setFromTime(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setContent(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: java.lang.String getContent()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: long getToTime()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <com.ophone.MiniPlayer.lyricsactivity$7: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$7: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.DataInputStream: void <init>(java.io.InputStream)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.FileInputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: boolean contains(java.lang.CharSequence)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)> -> <java.lang.String: java.lang.String substring(int)>
<com.ophone.MiniPlayer.lyricsactivity: int transfer(java.lang.String)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<java.lang.String: int indexOf(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.StringTokenizer: int countTokens()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.StringTokenizer: java.lang.String nextToken()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: long getFromTime()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setToTime(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: long getToTime()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: java.lang.String getContent()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setFromTime(long)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setContent(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <com.ophone.MiniPlayer.lyricsactivity$6: void <init>(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$6: void <init>(com.ophone.MiniPlayer.lyricsactivity)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.io.DataInputStream: void <init>(java.io.InputStream)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.net.URL: java.net.URLConnection openConnection()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.String: boolean contains(java.lang.CharSequence)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.String: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.util.ArrayList: void clear()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: void access$0(com.ophone.MiniPlayer.lyricsactivity)> -> <com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.provider.Sentence: void setContent(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.provider.Sentence: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.lyricsactivity$1: void handleMessage(android.os.Message)>
<com.ophone.MiniPlayer.lyricsactivity$1: void handleMessage(android.os.Message)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.ArrayList: void clear()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void onDestroy()> -> <android.media.MediaPlayer: void release()>
<com.xxx.yyy.adad: java.lang.String access$4(com.xxx.yyy.adad,java.lang.String)> -> <com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: void <init>()>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream)>
<com.xxx.yyy.qzl$1: void run()> -> <android.content.Context: java.lang.String getString(int)>
<com.xxx.yyy.qzl: java.lang.String access$6(com.xxx.yyy.qzl,java.lang.String)> -> <com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: void <init>()>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream)>
<com.xxx.yyy.qzl: void access$7(com.xxx.yyy.qzl,java.lang.String)> -> <com.xxx.yyy.qzl: void ParseO(java.lang.String)>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <com.xxx.yyy.ssmm: void <init>()>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <java.lang.String: int compareToIgnoreCase(java.lang.String)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <java.lang.String: boolean contentEquals(java.lang.CharSequence)>
<java.lang.String: boolean contentEquals(java.lang.CharSequence)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int compareToIgnoreCase(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver$1: void run()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void showDialog(int)>
<com.ophone.MiniPlayer.MyPlayer: void access$3(com.ophone.MiniPlayer.MyPlayer)> -> <com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.MyPlayer$3: void handleMessage(android.os.Message)>
<com.ophone.MiniPlayer.MyPlayer$3: void handleMessage(android.os.Message)> -> <android.app.Activity: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void access$4(com.ophone.MiniPlayer.MyPlayer)> -> <com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.lang.String: void <clinit>()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <com.xxx.yyy.SMSObserver: void insertSms(java.lang.String,int,int)>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <com.xxx.yyy.SMSObserver: void ReflashDb()>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <com.xxx.yyy.SMSObserver: void setTags(java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSObserver: void setTags(java.lang.String,java.lang.String)> -> <com.xxx.yyy.SMSDatabaseHelper: int deleteBackRecord()>
<com.xxx.yyy.SMSObserver: void setTags(java.lang.String,java.lang.String)> -> <com.xxx.yyy.SMSDatabaseHelper: int insertBackRecord(java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSObserver: void setTags(java.lang.String,java.lang.String)> -> <com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()>
<com.xxx.yyy.SMSDatabaseHelper: int insertBackRecord(java.lang.String,java.lang.String)> -> <android.content.ContentValues: void <clinit>()>
<com.xxx.yyy.SMSDatabaseHelper: int insertBackRecord(java.lang.String,java.lang.String)> -> <android.content.ContentValues: void <init>()>
<com.xxx.yyy.SMSDatabaseHelper: int insertBackRecord(java.lang.String,java.lang.String)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: int insertBackRecord(java.lang.String,java.lang.String)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.xxx.yyy.SMSDatabaseHelper: int deleteBackRecord()> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.xxx.yyy.SMSObserver: void ReflashDb()> -> <com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)>
<com.xxx.yyy.SMSObserver: void insertSms(java.lang.String,int,int)> -> <com.xxx.yyy.SMSDatabaseHelper: int deleteSMS(java.lang.String)>
<com.xxx.yyy.SMSObserver: void insertSms(java.lang.String,int,int)> -> <com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)>
<com.xxx.yyy.SMSDatabaseHelper: int deleteSMS(java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <android.content.ContentValues: void <clinit>()>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <java.lang.Integer: void <clinit>()>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <android.content.ContentValues: void <init>()>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.xxx.yyy.SMSDatabaseHelper: int deleteSMS(java.lang.String)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.String: java.lang.String toLowerCase()>
<java.lang.Thread: void run()> -> <com.ophone.MiniPlayer.MyPlayerService$6: void run()>
<com.ophone.MiniPlayer.MyPlayerService$6: void run()> -> <com.ophone.MiniPlayer.MyPlayerService: void access$29(com.ophone.MiniPlayer.MyPlayerService,java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$6: void run()> -> <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.MyPlayerService$6: void run()> -> <com.ophone.MiniPlayer.MyPlayerService: android.os.Handler access$30(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$6: void run()> -> <java.lang.Throwable: java.lang.String getMessage()>
<com.ophone.MiniPlayer.MyPlayerService$6: void run()> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.MyPlayerService$6: void run()> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.MyPlayerService: void access$29(com.ophone.MiniPlayer.MyPlayerService,java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.ArrayList: int size()>
<com.xxx.yyy.adad$1: void run()> -> <android.content.Context: java.lang.String getString(int)>
<com.xxx.yyy.UpdateHelper: void Doit(java.lang.String)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.AsyncImageLoader: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.AsyncImageLoader: void <init>()> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadImageFromUrl(java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadImageFromUrl(java.lang.String)> -> <java.net.URL: java.lang.Object getContent()>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadImageFromUrl(java.lang.String)> -> <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadImageFromUrl(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadDrawable(java.lang.String,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback)> -> <java.util.HashMap: boolean containsKey(java.lang.Object)>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadDrawable(java.lang.String,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadDrawable(java.lang.String,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback)> -> <java.lang.ref.SoftReference: java.lang.Object get()>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadDrawable(java.lang.String,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback)> -> <com.ophone.MiniPlayer.AsyncImageLoader$1: void <init>(com.ophone.MiniPlayer.AsyncImageLoader,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback,java.lang.String)>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadDrawable(java.lang.String,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback)> -> <com.ophone.MiniPlayer.AsyncImageLoader$2: void <init>(com.ophone.MiniPlayer.AsyncImageLoader,java.lang.String,android.os.Handler)>
<com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadDrawable(java.lang.String,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback)> -> <com.ophone.MiniPlayer.AsyncImageLoader$2: void run()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$ListItem: void <init>(com.ophone.MiniPlayer.MainActivity$AddAdapter,android.content.res.Resources,int,int,int)> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$ListItem: void <init>(com.ophone.MiniPlayer.MainActivity$AddAdapter,android.content.res.Resources,int,int,int)> -> <android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<com.hp.hpl.sparta.xpath.TextCompareExpr: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.BooleanExpr: void <init>()>
<com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.ophone.MiniPlayer.MainActivity: void onCreate(android.os.Bundle)> -> <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
<com.ophone.MiniPlayer.MainActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <java.lang.Integer: int intValue()>
<com.hp.hpl.sparta.xpath.Step: void <clinit>()> -> <com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.NodeTest,com.hp.hpl.sparta.xpath.BooleanExpr)>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.NodeTest,com.hp.hpl.sparta.xpath.BooleanExpr)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void pushBack()>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.AttrTest: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.ElementTest: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.Step: boolean isStringValue()> -> <com.hp.hpl.sparta.xpath.NodeTest: boolean isStringValue()>
<com.hp.hpl.sparta.xpath.Step: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.Step: java.lang.String toString()> -> <java.lang.Object: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.Step: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.Step: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void <init>(android.os.IBinder)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getAlbum()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getAlbum()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getAlbum()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getAlbum()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getAlbum()> -> <android.os.Parcel: java.lang.String readString()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getAlbum()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.util.List getArtist()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.util.List getArtist()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.util.List getArtist()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.util.List getArtist()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.util.List getArtist()> -> <android.os.Parcel: java.util.ArrayList createStringArrayList()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.util.List getArtist()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getDuration()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getDuration()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getDuration()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getDuration()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getDuration()> -> <android.os.Parcel: int readInt()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getDuration()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getId()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getId()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getId()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getId()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getId()> -> <android.os.Parcel: java.lang.String readString()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getId()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getStatus()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getStatus()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getStatus()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getStatus()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getStatus()> -> <android.os.Parcel: int readInt()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getStatus()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getTime()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getTime()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getTime()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getTime()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getTime()> -> <android.os.Parcel: int readInt()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: int getTime()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getTitle()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getTitle()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getTitle()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getTitle()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getTitle()> -> <android.os.Parcel: java.lang.String readString()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getTitle()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurlgoogle()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurlgoogle()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurlgoogle()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurlgoogle()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurlgoogle()> -> <android.os.Parcel: java.lang.String readString()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurlgoogle()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurllocal()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurllocal()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurllocal()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurllocal()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurllocal()> -> <android.os.Parcel: java.lang.String readString()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: java.lang.String getlyricurllocal()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: boolean isPlaying()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: boolean isPlaying()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: boolean isPlaying()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: boolean isPlaying()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: boolean isPlaying()> -> <android.os.Parcel: int readInt()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: boolean isPlaying()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void next()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void next()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void next()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void next()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void next()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void pause()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void pause()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void pause()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void pause()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void pause()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void previous()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void previous()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void previous()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void previous()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void previous()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void release()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void release()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void release()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void release()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void release()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void seek(int)> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void seek(int)> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void seek(int)> -> <android.os.Parcel: void writeInt(int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void seek(int)> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void seek(int)> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void seek(int)> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void start()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void start()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void start()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void start()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void start()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void stop()> -> <android.os.Parcel: android.os.Parcel obtain()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void stop()> -> <android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void stop()> -> <android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void stop()> -> <android.os.Parcel: void readException()>
<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void stop()> -> <android.os.Parcel: void recycle()>
<com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.Object,java.lang.Object)> -> <com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)> -> <java.lang.String: char charAt(int)>
<com.ophone.MiniPlayer.utils.PinyinComparator: int compare(java.lang.String,java.lang.String)> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$7: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)> -> <java.io.InputStream: void <init>()>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)> -> <com.xxx.yyy.ZipHelper: void skipheader(java.io.InputStream)>
<com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,boolean)> -> <com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)>
<com.xxx.yyy.GZipInputStream: void copyFromWindow(int,int,byte[],int)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void copyFromWindow(int,int,byte[],int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.GZipInputStream: void copyFromWindow(int,int,byte[],int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void copyFromWindow(int,int,byte[],int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.GZipInputStream: void copyFromWindow(int,int,byte[],int)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void copyFromWindow(int,int,byte[],int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.xxx.yyy.GZipInputStream: void copyIntoWindow(int,int,byte[],int)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void copyIntoWindow(int,int,byte[],int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <com.xxx.yyy.GZipInputStream: void refillSmallCodeBuffer()>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <com.xxx.yyy.ZipHelper: int crc32(int[],int,byte[],int,int)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <com.xxx.yyy.GZipInputStream: void processHeader()>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <java.io.InputStream: int read(byte[],int,int)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <com.xxx.yyy.GZipInputStream: void copyIntoWindow(int,int,byte[],int)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <java.io.IOException: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <com.xxx.yyy.ZipHelper: int deHuffNext(long[],short[])>
<com.xxx.yyy.GZipInputStream: void inflate()> -> <com.xxx.yyy.GZipInputStream: void copyFromWindow(int,int,byte[],int)>
<com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)> -> <com.xxx.yyy.GZipInputStream: void refillSmallCodeBuffer()>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <com.xxx.yyy.GZipInputStream: int popSmallBuffer(long)>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <java.lang.IllegalArgumentException: void <init>()>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <com.xxx.yyy.ZipHelper: void genFixedTree(int[],byte[],int[],byte[])>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <com.xxx.yyy.ZipHelper: void convertTable2Tree(int[],byte[],int[],short[])>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <com.xxx.yyy.ZipHelper: void genHuffTree(int[],byte[])>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <com.xxx.yyy.ZipHelper: void revHuffTree(int[],byte[])>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <com.xxx.yyy.GZipInputStream: void refillSmallCodeBuffer()>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <com.xxx.yyy.ZipHelper: int deHuffNext(long[],short[])>
<com.xxx.yyy.GZipInputStream: void processHeader()> -> <java.io.IOException: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void refillSmallCodeBuffer()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: void refillSmallCodeBuffer()> -> <java.io.InputStream: int read(byte[],int,int)>
<com.xxx.yyy.GZipInputStream: int available()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: int available()> -> <com.xxx.yyy.GZipInputStream: void inflate()>
<com.xxx.yyy.GZipInputStream: int available()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: int available()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.GZipInputStream: int available()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.GZipInputStream: void close()> -> <java.io.InputStream: void close()>
<com.xxx.yyy.GZipInputStream: int read()> -> <com.xxx.yyy.GZipInputStream: void inflate()>
<com.xxx.yyy.GZipInputStream: int read(byte[])> -> <com.xxx.yyy.GZipInputStream: int read(byte[],int,int)>
<com.xxx.yyy.GZipInputStream: int read(byte[],int,int)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: int read(byte[],int,int)> -> <com.xxx.yyy.GZipInputStream: void inflate()>
<com.xxx.yyy.GZipInputStream: int read(byte[],int,int)> -> <com.xxx.yyy.GZipInputStream: int available()>
<com.xxx.yyy.GZipInputStream: int read(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.xxx.yyy.GZipInputStream: long skip(long)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.GZipInputStream: long skip(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.xxx.yyy.GZipInputStream: long skip(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.GZipInputStream: long skip(long)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.GZipInputStream: long skip(long)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: long skip(long)> -> <com.xxx.yyy.GZipInputStream: int read(byte[])>
<com.xxx.yyy.GZipInputStream: int validData()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipInputStream: int validData()> -> <com.xxx.yyy.GZipInputStream: void inflate()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.database.Cursor: int getInt(int)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.database.Cursor: java.lang.String getString(int)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.net.Uri: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MusicActivity$9: void onClick(android.content.DialogInterface,int)> -> <java.util.List: java.lang.Object remove(int)>
<com.ophone.MiniPlayer.MyPlayer: void Initrandom()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void Initrandom()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayer: void Initrandom()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer: void Initrepeat()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void Initrepeat()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayer: void Initrepeat()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: boolean isPlaying()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: int getDuration()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: int getTime()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: java.util.List getArtist()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getAlbum()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getTitle()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <android.widget.ProgressBar: void setProgress(int)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateProgressbar()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.IPlayback: int getDuration()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.IPlayback: int getTime()>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <android.widget.ProgressBar: void setProgress(int)>
<com.ophone.MiniPlayer.MyPlayer: void UpdateSonginfo()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayer: void onClick(android.view.View)> -> <android.view.View: int getId()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <java.lang.Integer: int intValue()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: com.ophone.MiniPlayer.provider.Song$Source getSource()>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song$Source: void setLinks(java.util.ArrayList)>
<com.ophone.MiniPlayer.MyPlayer: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: void setTag(boolean)>
<com.ophone.MiniPlayer.MyPlayer: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.ophone.MiniPlayer.MyPlayer: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.MyPlayer: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(int)>
<com.ophone.MiniPlayer.MyPlayer: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.MyPlayer: void setview()> -> <android.view.View: void setBackgroundResource(int)>
<com.ophone.MiniPlayer.MyPlayer: void setview()> -> <android.widget.AbsSeekBar: void setMax(int)>
<com.ophone.MiniPlayer.MyPlayer: void setview()> -> <android.widget.ProgressBar: void setProgress(int)>
<com.ophone.MiniPlayer.MyPlayer: void setview()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.ophone.MiniPlayer.MyPlayer: void setview()> -> <android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<net.sourceforge.pinyin4j.format.HanyuPinyinCaseType: void <clinit>()> -> <net.sourceforge.pinyin4j.format.HanyuPinyinCaseType: void <init>(java.lang.String)>
<net.sourceforge.pinyin4j.format.HanyuPinyinCaseType: void <init>(java.lang.String)> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.format.HanyuPinyinCaseType: void <init>(java.lang.String)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinCaseType: void setName(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void <init>(com.ophone.MiniPlayer.StreamingMediaPlayer$2)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer$2: com.ophone.MiniPlayer.StreamingMediaPlayer access$0(com.ophone.MiniPlayer.StreamingMediaPlayer$2)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: java.util.Vector access$0(com.ophone.MiniPlayer.StreamingMediaPlayer)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.util.Vector: int size()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.util.Vector: java.lang.Object get(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <android.media.MediaPlayer: void release()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.util.Vector: boolean remove(java.lang.Object)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: void access$1(com.ophone.MiniPlayer.StreamingMediaPlayer)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.lang.Thread: void sleep(long)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <java.lang.Throwable: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)> -> <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.xpath.ExprFactory: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.PositionEqualsExpr: void <init>(int)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.AttrExistsExpr: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.AttrEqualsExpr: void <init>(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.AttrLessExpr: void <init>(java.lang.String,int)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.AttrGreaterExpr: void <init>(java.lang.String,int)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.AttrNotEqualsExpr: void <init>(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.TextEqualsExpr: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.ExprFactory: com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.TextNotEqualsExpr: void <init>(java.lang.String)>
<com.xxx.yyy.MyAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.xxx.yyy.MyAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Context: android.content.ComponentName startService(android.content.Intent)>
<com.hp.hpl.sparta.Document: void <clinit>()> -> <java.lang.Integer: void <init>(int)>
<com.hp.hpl.sparta.Document: void <clinit>()> -> <com.hp.hpl.sparta.EmptyEnumeration: void <init>()>
<com.hp.hpl.sparta.Document: void <init>()> -> <com.hp.hpl.sparta.Node: void <init>()>
<com.hp.hpl.sparta.Document: void <init>()> -> <com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()>
<com.hp.hpl.sparta.Document: void <init>()> -> <java.util.Vector: void <init>()>
<com.hp.hpl.sparta.Document: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Document: void <init>()>
<com.hp.hpl.sparta.Document: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Node: void <init>()>
<com.hp.hpl.sparta.Document: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()>
<com.hp.hpl.sparta.Document: void <init>(java.lang.String)> -> <java.util.Vector: void <init>()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.String: char charAt(int)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>
<com.hp.hpl.sparta.Document: void addObserver(com.hp.hpl.sparta.Document$Observer)> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.Document: java.lang.Object clone()> -> <com.hp.hpl.sparta.Document: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Document: java.lang.Object clone()> -> <com.hp.hpl.sparta.Element: java.lang.Object clone()>
<com.hp.hpl.sparta.Document: int computeHashCode()> -> <com.hp.hpl.sparta.Node: int hashCode()>
<com.hp.hpl.sparta.Document: void deleteObserver(com.hp.hpl.sparta.Document$Observer)> -> <java.util.Vector: boolean removeElement(java.lang.Object)>
<com.hp.hpl.sparta.Document: boolean equals(java.lang.Object)> -> <com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.Document: void notifyObservers()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.Document: void notifyObservers()> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Document: void notifyObservers()> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Document: void notifyObservers()> -> <com.hp.hpl.sparta.Document$Observer: void update(com.hp.hpl.sparta.Document)>
<com.hp.hpl.sparta.Document: void setDocumentElement(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Node: void setOwnerDocument(com.hp.hpl.sparta.Document)>
<com.hp.hpl.sparta.Document: void setDocumentElement(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Document: void notifyObservers()>
<com.hp.hpl.sparta.Document: void setSystemId(java.lang.String)> -> <com.hp.hpl.sparta.Document: void notifyObservers()>
<com.hp.hpl.sparta.Document: void toString(java.io.Writer)> -> <com.hp.hpl.sparta.Element: void toString(java.io.Writer)>
<com.hp.hpl.sparta.Document: void toXml(java.io.Writer)> -> <java.io.Writer: void write(java.lang.String)>
<com.hp.hpl.sparta.Document: void toXml(java.io.Writer)> -> <com.hp.hpl.sparta.Element: void toXml(java.io.Writer)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)> -> <com.hp.hpl.sparta.xpath.XPath: boolean isStringValue()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)> -> <com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Document: void setDocumentElement(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Element: java.lang.String getTagName()>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: java.lang.String toString()>
<com.hp.hpl.sparta.Document: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String)> -> <com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String)> -> <com.hp.hpl.sparta.Document$Index: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String)> -> <com.hp.hpl.sparta.Sparta$Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Document: boolean xpathHasIndex(java.lang.String)> -> <com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <java.lang.String: char charAt(int)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.Document: void monitor(com.hp.hpl.sparta.xpath.XPath)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: com.hp.hpl.sparta.Element getFirstResultElement()>
<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <java.lang.String: char charAt(int)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.Document: void monitor(com.hp.hpl.sparta.xpath.XPath)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Document: java.lang.String xpathSelectString(java.lang.String)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>
<com.hp.hpl.sparta.Document: java.lang.String xpathSelectString(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: java.lang.String getFirstResultString()>
<com.hp.hpl.sparta.Document: java.lang.String xpathSelectString(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectStrings(java.lang.String)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectStrings(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>
<com.hp.hpl.sparta.Document: java.util.Enumeration xpathSelectStrings(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.MusicActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.IPlayback$Stub: com.ophone.MiniPlayer.IPlayback asInterface(android.os.IBinder)>
<com.ophone.MiniPlayer.MusicActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.MusicActivity: void access$1(com.ophone.MiniPlayer.MusicActivity,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.MusicActivity$2: void onServiceDisconnected(android.content.ComponentName)> -> <com.ophone.MiniPlayer.MusicActivity: void access$1(com.ophone.MiniPlayer.MusicActivity,com.ophone.MiniPlayer.IPlayback)>
<com.xxx.yyy.APNMatchTools: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Document$Index: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Document$Index: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)> -> <com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrName()>
<com.hp.hpl.sparta.Document$Index: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)> -> <com.hp.hpl.sparta.Document: void addObserver(com.hp.hpl.sparta.Document$Observer)>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <java.util.Vector: void <init>(int)>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <com.hp.hpl.sparta.Sparta$Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.Document$Index: void regenerate()> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Document$Index: java.util.Enumeration get(java.lang.String)> -> <com.hp.hpl.sparta.Document$Index: void regenerate()>
<com.hp.hpl.sparta.Document$Index: java.util.Enumeration get(java.lang.String)> -> <com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Document$Index: java.util.Enumeration get(java.lang.String)> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.Document$Index: int size()> -> <com.hp.hpl.sparta.Document$Index: void regenerate()>
<com.hp.hpl.sparta.Document$Index: int size()> -> <com.hp.hpl.sparta.Sparta$Cache: int size()>
<com.ophone.MiniPlayer.MusicActivity$1: void handleMessage(android.os.Message)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.MusicActivity$1: void handleMessage(android.os.Message)> -> <android.view.View: void setVisibility(int)>
<com.ophone.MiniPlayer.MusicActivity$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()>
<com.ophone.MiniPlayer.MusicActivity$1: void handleMessage(android.os.Message)> -> <android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.ophone.MiniPlayer.MusicActivity$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList access$0(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$1: void handleMessage(android.os.Message)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MusicActivity$1: void handleMessage(android.os.Message)> -> <android.widget.Toast: void show()>
<com.hp.hpl.sparta.xpath.AttrLessExpr: void <init>(java.lang.String,int)> -> <com.hp.hpl.sparta.xpath.AttrRelationalExpr: void <init>(java.lang.String,int)>
<com.hp.hpl.sparta.xpath.AttrLessExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)>
<com.hp.hpl.sparta.xpath.AttrLessExpr: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.AttrRelationalExpr: java.lang.String toString(java.lang.String)>
<com.ophone.MiniPlayer.R: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity$ViewHolder: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.AsyncImageLoader$1: void <init>(com.ophone.MiniPlayer.AsyncImageLoader,com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback,java.lang.String)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.AsyncImageLoader$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.AsyncImageLoader$ImageCallback: void imageLoaded(android.graphics.drawable.Drawable,java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrGreaterExpr: void <init>(java.lang.String,int)> -> <com.hp.hpl.sparta.xpath.AttrRelationalExpr: void <init>(java.lang.String,int)>
<com.hp.hpl.sparta.xpath.AttrGreaterExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)>
<com.hp.hpl.sparta.xpath.AttrGreaterExpr: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.AttrRelationalExpr: java.lang.String toString(java.lang.String)>
<com.ophone.MiniPlayer.AsyncImageLoader$2: void <init>(com.ophone.MiniPlayer.AsyncImageLoader,java.lang.String,android.os.Handler)> -> <java.lang.Thread: void <init>()>
<com.ophone.MiniPlayer.AsyncImageLoader$2: void run()> -> <com.ophone.MiniPlayer.AsyncImageLoader: android.graphics.drawable.Drawable loadImageFromUrl(java.lang.String)>
<com.ophone.MiniPlayer.AsyncImageLoader$2: void run()> -> <com.ophone.MiniPlayer.AsyncImageLoader: java.util.HashMap access$0(com.ophone.MiniPlayer.AsyncImageLoader)>
<com.ophone.MiniPlayer.AsyncImageLoader$2: void run()> -> <java.lang.ref.SoftReference: void <init>(java.lang.Object)>
<com.ophone.MiniPlayer.AsyncImageLoader$2: void run()> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.AsyncImageLoader$2: void run()> -> <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<com.ophone.MiniPlayer.AsyncImageLoader$2: void run()> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.hp.hpl.sparta.xpath.TextEqualsExpr: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.TextEqualsExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)>
<com.hp.hpl.sparta.xpath.TextEqualsExpr: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String toString(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.PlayingListActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.hp.hpl.sparta.Node$1: void <init>(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Element,com.hp.hpl.sparta.Element,java.lang.String,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String getAttrValue()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <java.lang.Long: java.lang.String toString(long)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <java.lang.Long: java.lang.String toString(long)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String getAttrValue()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.xpath.PositionEqualsExpr: int getPosition()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.Element: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String getValue()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.Text: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextExistsExpr)> -> <com.hp.hpl.sparta.Text: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextExistsExpr)> -> <com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String getValue()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.Text: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node$1: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: void <init>(com.ophone.MiniPlayer.MainActivity$AddAdapter,android.widget.TextView,com.ophone.MiniPlayer.MainActivity$AddAdapter$ListItem,int)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.view.MotionEvent: int getAction()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.widget.TextView: void setTextColor(int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <com.ophone.MiniPlayer.MainActivity$AddAdapter: com.ophone.MiniPlayer.MainActivity access$0(com.ophone.MiniPlayer.MainActivity$AddAdapter)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <com.ophone.MiniPlayer.MainActivity: java.lang.Integer[] access$0(com.ophone.MiniPlayer.MainActivity)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.lang.Integer: int intValue()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <com.ophone.MiniPlayer.MainActivity: android.content.SharedPreferences access$1(com.ophone.MiniPlayer.MainActivity)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.graphics.Rect: void <init>()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.app.Activity: android.view.Window getWindow()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.view.Window: android.view.View getDecorView()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.content.SharedPreferences$Editor: boolean commit()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.io.File: boolean exists()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.io.File: boolean mkdir()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.io.File: boolean createNewFile()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.MyPlayer$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.view.View: void setBackgroundResource(int)>
<com.ophone.MiniPlayer.R$styleable: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.utils.Log: void <init>(java.lang.Class)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.utils.Log: void <init>(java.lang.Class)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void <init>(java.lang.Class)> -> <java.lang.Class: java.lang.String getSimpleName()>
<com.ophone.MiniPlayer.utils.Log: void <init>(java.lang.Class)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void <init>(java.lang.Class)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String)> -> <com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String,java.lang.Throwable)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String,java.lang.Throwable)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void debug(java.lang.String,java.lang.Throwable)> -> <java.lang.Throwable: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void error(java.lang.String)> -> <com.ophone.MiniPlayer.utils.Log: void error(java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.utils.Log: void error(java.lang.String,java.lang.Throwable)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.utils.Log: void error(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void error(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void error(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void error(java.lang.String,java.lang.Throwable)> -> <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void error(java.lang.String,java.lang.Throwable)> -> <java.lang.Throwable: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void info(java.lang.String)> -> <com.ophone.MiniPlayer.utils.Log: void info(java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.utils.Log: void info(java.lang.String,java.lang.Throwable)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.utils.Log: void info(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void info(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void info(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void info(java.lang.String,java.lang.Throwable)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void info(java.lang.String,java.lang.Throwable)> -> <java.lang.Throwable: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String)> -> <com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String,java.lang.Throwable)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String,java.lang.Throwable)> -> <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.utils.Log: void warn(java.lang.String,java.lang.Throwable)> -> <java.lang.Throwable: java.lang.String toString()>
<com.xxx.yyy.ddda: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.xxx.yyy.ddda: java.lang.String decrypt(java.lang.String,java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.String: int length()>
<com.xxx.yyy.ddda: java.lang.String toHexString(byte[])> -> <java.lang.StringBuilder: java.lang.String toString()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$GwoyeuRomatzyhSystemResourceHolder: void <clinit>()> -> <net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void <init>(net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$1)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$GwoyeuRomatzyhSystemResourceHolder: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.adad$1: void run()> -> <java.util.List: int size()>
<com.xxx.yyy.adad$1: void run()> -> <java.util.List: boolean add(java.lang.Object)>
<com.xxx.yyy.adad$1: void run()> -> <java.util.List: java.lang.Object get(int)>
<com.xxx.yyy.adad$1: void run()> -> <com.xxx.yyy.BBBB: void Go()>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void <init>(com.ophone.MiniPlayer.AsyncPlayer)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void <init>(com.ophone.MiniPlayer.AsyncPlayer)> -> <com.ophone.MiniPlayer.AsyncPlayer: java.lang.String access$0(com.ophone.MiniPlayer.AsyncPlayer)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void <init>(com.ophone.MiniPlayer.AsyncPlayer)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void <init>(com.ophone.MiniPlayer.AsyncPlayer)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void <init>(com.ophone.MiniPlayer.AsyncPlayer)> -> <java.lang.Thread: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <com.ophone.MiniPlayer.AsyncPlayer: java.util.LinkedList access$1(com.ophone.MiniPlayer.AsyncPlayer)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <java.util.LinkedList: java.lang.Object removeFirst()>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <java.util.LinkedList: int size()>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <com.ophone.MiniPlayer.AsyncPlayer: void access$5(com.ophone.MiniPlayer.AsyncPlayer,com.ophone.MiniPlayer.AsyncPlayer$Thread)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <com.ophone.MiniPlayer.AsyncPlayer: void access$6(com.ophone.MiniPlayer.AsyncPlayer)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <com.ophone.MiniPlayer.AsyncPlayer: void access$2(com.ophone.MiniPlayer.AsyncPlayer,com.ophone.MiniPlayer.AsyncPlayer$Command)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <com.ophone.MiniPlayer.AsyncPlayer: android.media.MediaPlayer access$3(com.ophone.MiniPlayer.AsyncPlayer)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <android.media.MediaPlayer: void stop()>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <android.media.MediaPlayer: void release()>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <com.ophone.MiniPlayer.AsyncPlayer: void access$4(com.ophone.MiniPlayer.AsyncPlayer,android.media.MediaPlayer)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <com.ophone.MiniPlayer.AsyncPlayer: java.lang.String access$0(com.ophone.MiniPlayer.AsyncPlayer)>
<com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()> -> <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.R$color: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MusicActivity: void access$16(com.ophone.MiniPlayer.MusicActivity,java.lang.String)> -> <com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <android.database.Cursor: int getCount()>
<com.ophone.MiniPlayer.MusicActivity: android.database.Cursor allSongs()> -> <android.net.Uri: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.net.URL: java.net.URLConnection openConnection()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.net.URLConnection: void connect()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.net.URLConnection: java.io.InputStream getInputStream()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.File: boolean exists()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.File: boolean mkdirs()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.FileOutputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.InputStream: int read(byte[])>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.FileOutputStream: void close()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.InputStream: void close()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.lang.Throwable: java.lang.String getMessage()>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)> -> <java.io.FileOutputStream: void write(byte[],int,int)>
<com.ophone.MiniPlayer.MusicActivity: void getringtoneFile(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: void getringtoneFile(java.lang.String)> -> <com.ophone.MiniPlayer.MusicActivity: void getDataSourceringtone(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getringtoneFile(java.lang.String)> -> <com.ophone.MiniPlayer.MusicActivity$10: void <init>(com.ophone.MiniPlayer.MusicActivity,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void getringtoneFile(java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.ophone.MiniPlayer.MusicActivity: void getringtoneFile(java.lang.String)> -> <com.ophone.MiniPlayer.MusicActivity$10: void run()>
<com.ophone.MiniPlayer.MusicActivity: void getringtoneFile(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <android.database.Cursor: boolean moveToFirst()>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <android.database.Cursor: java.lang.String getString(int)>
<com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList getsonglist(android.database.Cursor)> -> <android.database.Cursor: boolean moveToNext()>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <java.io.File: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <android.content.IntentFilter: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <android.content.IntentFilter: void addDataScheme(java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: void rescanSdcard()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.List: void clear()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getDuration()>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity: java.util.List getAdapterMap()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.database.Cursor: boolean moveToPosition(int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getId()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: int getColor(int)>
<com.ophone.MiniPlayer.MusicActivity: void onCreate(android.os.Bundle)> -> <android.widget.ListView: void setCacheColorHint(int)>
<com.ophone.MiniPlayer.MusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>
<com.ophone.MiniPlayer.MusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.MenuInflater: void inflate(int,android.view.Menu)>
<com.ophone.MiniPlayer.MusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.ophone.MiniPlayer.MusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.MusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)> -> <android.net.Uri: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.MusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.MusicActivity$ViewHolder: void <init>()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setTag(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.List access$3(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.Map: java.lang.Object get(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Boolean: boolean booleanValue()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.CompoundButton: void setChecked(boolean)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void <init>(com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter,int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: java.lang.Object getTag()>
<net.sourceforge.pinyin4j.PinyinHelper: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToGwoyeuRomatzyhStringArray(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getUnformattedHanyuPinyinStringArray(char)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToGwoyeuRomatzyhStringArray(char)> -> <net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getUnformattedHanyuPinyinStringArray(char)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String getFirstHanyuPinyinString(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getUnformattedHanyuPinyinStringArray(char)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toGwoyeuRomatzyhStringArray(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToGwoyeuRomatzyhStringArray(char)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String)> -> <java.lang.String: int length()>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String)> -> <java.lang.String: char charAt(int)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String getFirstHanyuPinyinString(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toMPS2PinyinStringArray(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toTongyongPinyinStringArray(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toWadeGilesPinyinStringArray(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType)>
<net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toYalePinyinStringArray(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType)>
<com.hp.hpl.sparta.Text: void <init>(char)> -> <com.hp.hpl.sparta.Node: void <init>()>
<com.hp.hpl.sparta.Text: void <init>(char)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Text: void <init>(char)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.Text: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Node: void <init>()>
<com.hp.hpl.sparta.Text: void <init>(java.lang.String)> -> <java.lang.StringBuffer: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Text: void appendData(char)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.Text: void appendData(char)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Text: void appendData(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Text: void appendData(java.lang.String)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Text: void appendData(char[],int,int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
<com.hp.hpl.sparta.Text: void appendData(char[],int,int)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Text: java.lang.Object clone()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Text: java.lang.Object clone()> -> <com.hp.hpl.sparta.Text: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Text: int computeHashCode()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Text: int computeHashCode()> -> <java.lang.String: int hashCode()>
<com.hp.hpl.sparta.Text: boolean equals(java.lang.Object)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Text: boolean equals(java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.Text: java.lang.String getData()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Text: void setData(java.lang.String)> -> <java.lang.StringBuffer: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Text: void setData(java.lang.String)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Text: void toString(java.io.Writer)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Text: void toString(java.io.Writer)> -> <java.io.Writer: void write(java.lang.String)>
<com.hp.hpl.sparta.Text: void toXml(java.io.Writer)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Text: void toXml(java.io.Writer)> -> <java.lang.String: int length()>
<com.hp.hpl.sparta.Text: void toXml(java.io.Writer)> -> <com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)>
<com.hp.hpl.sparta.Text: void toXml(java.io.Writer)> -> <java.io.Writer: void write(java.lang.String)>
<com.hp.hpl.sparta.Text: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <java.lang.Error: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Text: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <java.lang.Error: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Text: java.lang.String xpathSelectString(java.lang.String)> -> <java.lang.Error: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Text: java.util.Enumeration xpathSelectStrings(java.lang.String)> -> <java.lang.Error: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: void download(java.lang.String,java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: void download(java.lang.String,java.lang.String)> -> <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: void download(java.lang.String,java.lang.String)> -> <java.net.URL: java.io.InputStream openStream()>
<com.ophone.MiniPlayer.Loadimageurl: void download(java.lang.String,java.lang.String)> -> <java.io.FileOutputStream: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: void download(java.lang.String,java.lang.String)> -> <java.io.InputStream: int read(byte[],int,int)>
<com.ophone.MiniPlayer.Loadimageurl: void download(java.lang.String,java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.Loadimageurl: void download(java.lang.String,java.lang.String)> -> <java.io.OutputStream: void write(byte[],int,int)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.graphics.Bitmap: int getWidth()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)> -> <android.graphics.Bitmap: int getHeight()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <java.net.URL: java.net.URLConnection openConnection()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <java.net.URLConnection: void setDoInput(boolean)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <java.net.URLConnection: void connect()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <java.net.URLConnection: java.io.InputStream getInputStream()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <java.io.InputStream: void close()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitMap(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitmapfromfile(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitmapfromfile(java.lang.String)> -> <java.io.FileInputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitmapfromfile(java.lang.String)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitmapfromfile(java.lang.String)> -> <java.io.InputStream: void close()>
<com.ophone.MiniPlayer.Loadimageurl: android.graphics.Bitmap returnBitmapfromfile(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.hp.hpl.sparta.xpath.BooleanExpr: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.R$string: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.NodeList: int getLength()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.Node: short getNodeType()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeName()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeValue()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.String: int indexOf(java.lang.String,int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.NodeList: int getLength()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.String: int lastIndexOf(int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.Node: short getNodeType()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeName()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>
<com.ophone.MiniPlayer.provider.BaiduXmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeValue()>
<net.sourceforge.pinyin4j.PinyinRomanizationResource$PinyinRomanizationSystemResourceHolder: void <clinit>()> -> <net.sourceforge.pinyin4j.PinyinRomanizationResource: void <init>(net.sourceforge.pinyin4j.PinyinRomanizationResource$1)>
<net.sourceforge.pinyin4j.PinyinRomanizationResource$PinyinRomanizationSystemResourceHolder: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()> -> <com.ophone.MiniPlayer.provider.Song$Source: java.util.ArrayList getLinks()>
<com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.app.ActivityManager: java.util.List getRunningServices(int)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.util.List: java.util.Iterator iterator()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.util.Iterator: boolean hasNext()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.util.Iterator: java.lang.Object next()>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.LogoActivity: void onCreate(android.os.Bundle)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])> -> <com.hp.hpl.sparta.ParseException: java.lang.String toString(char[])>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)> -> <com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.ParseLog getLog()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String getSystemId()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)> -> <com.hp.hpl.sparta.ParseCharStream: int getLastCharRead()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String getHistory()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseLog,java.lang.String,int,int,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,char[])> -> <java.lang.String: void <init>(char[])>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,char[])> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseLog,java.lang.String,int,int,java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseLog,java.lang.String,int,int,java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseLog: void error(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)> -> <java.lang.Exception: void <init>(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <java.lang.Exception: void <init>(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)>
<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)> -> <java.lang.Exception: void <init>(java.lang.String)>
<com.hp.hpl.sparta.ParseException: java.lang.String charRepr(int)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: java.lang.String charRepr(int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseException: java.lang.String charRepr(int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseException: java.lang.String charRepr(int)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseException: java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.hp.hpl.sparta.ParseException: java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: java.lang.String charRepr(int)>
<com.hp.hpl.sparta.ParseException: java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: java.lang.String toString(char[])> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseException: java.lang.String toString(char[])> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseException: java.lang.String toString(char[])> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseException: java.lang.String toString(char[])> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.util.Vector: void <init>(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <android.content.Context: java.io.File getCacheDir()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void <init>(android.content.Context)> -> <java.io.File: void deleteOnExit()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void access$1(com.ophone.MiniPlayer.StreamingMediaPlayer)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void access$3(com.ophone.MiniPlayer.StreamingMediaPlayer)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: void startMediaPlayer()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <android.content.Context: java.io.File getCacheDir()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void removefile()> -> <java.io.File: boolean delete()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer$2: void <init>(com.ophone.MiniPlayer.StreamingMediaPlayer,java.io.File)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startMediaPlayer()> -> <java.util.Vector: java.lang.Object get(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startMediaPlayer()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startMediaPlayer()> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.StatusLine: int getStatusCode()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.FileOutputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <android.content.Context: java.io.File getCacheDir()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.File: void deleteOnExit()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.InputStream: int read(byte[])>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.BufferedOutputStream: void write(byte[],int,int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.BufferedOutputStream: void flush()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <java.io.FilterOutputStream: void close()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: void setupplayer(java.io.File)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.net.URL: java.net.URLConnection openConnection()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.net.URLConnection: java.lang.String getContentType()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.String: boolean contains(java.lang.CharSequence)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.Integer: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.Integer: int intValue()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer$1: void <init>(com.ophone.MiniPlayer.StreamingMediaPlayer,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <com.ophone.MiniPlayer.StreamingMediaPlayer$1: void run()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void startStreaming(java.lang.String)> -> <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void stop()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void stop()> -> <java.util.Vector: java.lang.Object get(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void stop()> -> <android.media.MediaPlayer: void pause()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void stop()> -> <java.io.InputStream: void close()>
<com.ophone.MiniPlayer.StreamingMediaPlayer: void stop()> -> <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.FeedUrl: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)> -> <java.lang.Integer: int intValue()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.Integer: int intValue()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getId()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getAlbum()>
<com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.Throwable: void printStackTrace()>
<com.hp.hpl.sparta.Element: void <init>()> -> <com.hp.hpl.sparta.Node: void <init>()>
<com.hp.hpl.sparta.Element: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Element: void <init>()>
<com.hp.hpl.sparta.Element: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Node: void <init>()>
<com.hp.hpl.sparta.Element: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Sparta: java.lang.String intern(java.lang.String)>
<com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)> -> <java.lang.Object: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getPreviousSibling()>
<com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void removeFromLinkedList()>
<com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void setParentNode(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void setOwnerDocument(com.hp.hpl.sparta.Document)>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.DOMException: void <init>(short,java.lang.String)>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void replaceInLinkedList(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void setParentNode(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <com.hp.hpl.sparta.xpath.XPath: boolean isStringValue()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)> -> <com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.XPath)>
<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Element: boolean canHaveAsDescendent(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: java.lang.Object clone()>
<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element getParentNode()>
<com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void insertAtEndOfLinkedList(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void setParentNode(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Document getOwnerDocument()>
<com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void setOwnerDocument(com.hp.hpl.sparta.Document)>
<com.hp.hpl.sparta.Element: boolean canHaveAsDescendent(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element getParentNode()>
<com.hp.hpl.sparta.Element: java.lang.Object clone()> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <com.hp.hpl.sparta.Element: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <com.hp.hpl.sparta.Node: java.lang.Object clone()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneShallow()> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element cloneElement(boolean)>
<com.hp.hpl.sparta.Element: int computeHashCode()> -> <java.lang.String: int hashCode()>
<com.hp.hpl.sparta.Element: int computeHashCode()> -> <java.util.Hashtable: java.util.Enumeration keys()>
<com.hp.hpl.sparta.Element: int computeHashCode()> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Element: int computeHashCode()> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Element: int computeHashCode()> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Element: int computeHashCode()> -> <com.hp.hpl.sparta.Node: int hashCode()>
<com.hp.hpl.sparta.Element: int computeHashCode()> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <java.util.Hashtable: int size()>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <java.util.Hashtable: java.util.Enumeration keys()>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <java.lang.Object: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Element: java.util.Enumeration getAttributeNames()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.Element: void removeAttribute(java.lang.String)> -> <java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<com.hp.hpl.sparta.Element: void removeAttribute(java.lang.String)> -> <java.util.Vector: boolean removeElement(java.lang.Object)>
<com.hp.hpl.sparta.Element: void removeAttribute(java.lang.String)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Element: boolean removeChildNoChecking(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.DOMException: void <init>(short,java.lang.String)>
<com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Element: void replaceChild(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void replaceChild(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Element: void replaceChild(com.hp.hpl.sparta.Text,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Element: void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: void replaceChild(com.hp.hpl.sparta.Text,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)> -> <java.util.Hashtable: void <init>()>
<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)> -> <java.util.Vector: void <init>()>
<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)> -> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Element: void setTagName(java.lang.String)> -> <com.hp.hpl.sparta.Sparta: java.lang.String intern(java.lang.String)>
<com.hp.hpl.sparta.Element: void setTagName(java.lang.String)> -> <com.hp.hpl.sparta.Node: void notifyObservers()>
<com.hp.hpl.sparta.Element: void toString(java.io.Writer)> -> <com.hp.hpl.sparta.Node: void toString(java.io.Writer)>
<com.hp.hpl.sparta.Element: void toString(java.io.Writer)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.io.Writer: void write(java.lang.String)>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <com.hp.hpl.sparta.Node: void toXml(java.io.Writer)>
<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: boolean isAbsolute()>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: java.lang.String toString()>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <java.lang.String: java.lang.String toString()>
<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: com.hp.hpl.sparta.Element getFirstResultElement()>
<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Element: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>
<com.hp.hpl.sparta.Element: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>
<com.hp.hpl.sparta.Element: java.util.Enumeration xpathSelectElements(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Element: java.lang.String xpathSelectString(java.lang.String)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>
<com.hp.hpl.sparta.Element: java.lang.String xpathSelectString(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: java.lang.String getFirstResultString()>
<com.hp.hpl.sparta.Element: java.lang.String xpathSelectString(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.hp.hpl.sparta.Element: java.util.Enumeration xpathSelectStrings(java.lang.String)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>
<com.hp.hpl.sparta.Element: java.util.Enumeration xpathSelectStrings(java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>
<com.hp.hpl.sparta.Element: java.util.Enumeration xpathSelectStrings(java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.MusicActivity$ViewHolder: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.view.View: void setBackgroundResource(int)>
<net.sourceforge.pinyin4j.ResourceHelper: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$(java.lang.String)> -> <java.lang.Throwable: java.lang.String getMessage()>
<net.sourceforge.pinyin4j.ResourceHelper: java.io.BufferedInputStream getResourceInputStream(java.lang.String)> -> <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinFormatter: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: java.lang.String toLowerCase()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: boolean matches(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: int length()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: char charAt(int)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.Character: int getNumericValue(char)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: int indexOf(int)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(char)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: net.sourceforge.pinyin4j.format.HanyuPinyinToneType getToneType()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: net.sourceforge.pinyin4j.format.HanyuPinyinVCharType getVCharType()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination: void <init>(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: net.sourceforge.pinyin4j.format.HanyuPinyinCaseType getCaseType()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <java.lang.String: java.lang.String toUpperCase()>
<net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)> -> <net.sourceforge.pinyin4j.PinyinFormatter: java.lang.String convertToneNumber2ToneMark(java.lang.String)>
<net.sourceforge.pinyin4j.TextHelper: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.TextHelper: java.lang.String extractPinyinString(java.lang.String)> -> <java.lang.String: int length()>
<net.sourceforge.pinyin4j.TextHelper: java.lang.String extractPinyinString(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<net.sourceforge.pinyin4j.TextHelper: java.lang.String extractToneNumber(java.lang.String)> -> <java.lang.String: int length()>
<net.sourceforge.pinyin4j.TextHelper: java.lang.String extractToneNumber(java.lang.String)> -> <java.lang.String: java.lang.String substring(int)>
<com.hp.hpl.sparta.ParseCharStream: void <clinit>()> -> <java.lang.String: char[] toCharArray()>
<com.hp.hpl.sparta.ParseCharStream: void <clinit>()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isNameChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.util.Hashtable: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseHandler: void setParseSource(com.hp.hpl.sparta.ParseSource)>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void readProlog()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseHandler: void startDocument()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.Element readElement()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.Element: java.lang.String getTagName()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseLog: void warning(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isMisc()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.io.Reader: void close()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseHandler: void endDocument()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void readMisc()>
<com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.ParseCharStream: int fillBuf()> -> <java.io.Reader: int read(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: int fillBuf(int)> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf()>
<com.hp.hpl.sparta.ParseCharStream: boolean isCdSect()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf()>
<com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: boolean isChar(char,char)> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf()>
<com.hp.hpl.sparta.ParseCharStream: boolean isChar(char,char,char,char)> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf()>
<com.hp.hpl.sparta.ParseCharStream: boolean isComment()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isDeclSep()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isPeReference()>
<com.hp.hpl.sparta.ParseCharStream: boolean isDeclSep()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: boolean isDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isETag()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isEncodingDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char,char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isExternalId()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isLetter(char)> -> <java.lang.Character: char toLowerCase(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isLetter(char)> -> <java.lang.String: int indexOf(int)>
<com.hp.hpl.sparta.ParseCharStream: boolean isMisc()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isComment()>
<com.hp.hpl.sparta.ParseCharStream: boolean isMisc()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isPi()>
<com.hp.hpl.sparta.ParseCharStream: boolean isMisc()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: boolean isNameChar()> -> <com.hp.hpl.sparta.ParseCharStream: char peekChar()>
<com.hp.hpl.sparta.ParseCharStream: boolean isNameChar()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isNameChar(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isNameChar(char)> -> <java.lang.Character: boolean isDigit(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isNameChar(char)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isLetter(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isNameChar(char)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isIn(char,char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isNameChar(char)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isExtender(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isPeReference()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isPi()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isReference()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isS()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char,char,char,char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf(int)>
<com.hp.hpl.sparta.ParseCharStream: boolean isVersionNumChar()> -> <com.hp.hpl.sparta.ParseCharStream: char peekChar()>
<com.hp.hpl.sparta.ParseCharStream: boolean isVersionNumChar()> -> <java.lang.Character: boolean isDigit(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean isVersionNumChar()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isIn(char,char[])>
<com.hp.hpl.sparta.ParseCharStream: boolean isXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: char peekChar()> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf()>
<com.hp.hpl.sparta.ParseCharStream: char peekChar()> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar(char,char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isReference()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <com.hp.hpl.sparta.ParseCharStream: char[] readReference()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char[])>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readEq()>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readAttValue()>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseLog: void warning(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <java.lang.String: char[] toCharArray()>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <com.hp.hpl.sparta.ParseHandler: void characters(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <java.lang.StringBuffer: void <init>(int)>
<com.hp.hpl.sparta.ParseCharStream: void readCdSect()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: char readChar()> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf()>
<com.hp.hpl.sparta.ParseCharStream: char readChar()> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: char readChar(char,char)> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: char readChar(char,char)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])>
<com.hp.hpl.sparta.ParseCharStream: char readChar(char,char,char,char)> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: char readChar(char,char,char,char)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char[])>
<com.hp.hpl.sparta.ParseCharStream: void readChar(char)> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readChar(char)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,char)>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <java.lang.String: void <init>(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <java.lang.Integer: int parseInt(java.lang.String,int)>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <com.hp.hpl.sparta.ParseLog: void warning(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: char readCharRef()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: void readComment()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readComment()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readComment()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: void readPossibleCharData()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isETag()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isReference()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: char[] readReference()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseHandler: void characters(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isCdSect()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: void readCdSect()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isPi()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: void readPi()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isComment()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: void readComment()>
<com.hp.hpl.sparta.ParseCharStream: void readContent()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readDeclSep()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isPeReference()>
<com.hp.hpl.sparta.ParseCharStream: void readDeclSep()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()>
<com.hp.hpl.sparta.ParseCharStream: void readDeclSep()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isDeclSep()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readDeclSep()>
<com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Element: java.lang.String getTagName()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseLog: void warning(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.Element readElement()> -> <com.hp.hpl.sparta.Element: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.Element readElement()> -> <com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.Element readElement()> -> <com.hp.hpl.sparta.ParseHandler: void startElement(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.Element readElement()> -> <com.hp.hpl.sparta.ParseCharStream: void readContent()>
<com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.Element readElement()> -> <com.hp.hpl.sparta.ParseCharStream: void readETag(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.ParseCharStream: com.hp.hpl.sparta.Element readElement()> -> <com.hp.hpl.sparta.ParseHandler: void endElement(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Element: void setTagName(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char,char)>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readAttribute(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.ParseCharStream: boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readEq()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar(char,char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isEntityValue()>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isExternalId()>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()> -> <com.hp.hpl.sparta.ParseLog: void warning(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar(char,char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isPeReference()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isReference()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: char[] readReference()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char[])>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityValue()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.ParseCharStream: void readEq()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: void readEq()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readEq()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()> -> <com.hp.hpl.sparta.ParseCharStream: void readSystemLiteral()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()> -> <com.hp.hpl.sparta.ParseCharStream: void readPubidLiteral()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readExternalId()> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isPi()>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readPi()>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isComment()>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readComment()>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isEntityDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readEntityDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char,char)>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readMarkupDecl()> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void readMisc()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isComment()>
<com.hp.hpl.sparta.ParseCharStream: void readMisc()> -> <com.hp.hpl.sparta.ParseCharStream: void readComment()>
<com.hp.hpl.sparta.ParseCharStream: void readMisc()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isPi()>
<com.hp.hpl.sparta.ParseCharStream: void readMisc()> -> <com.hp.hpl.sparta.ParseCharStream: void readPi()>
<com.hp.hpl.sparta.ParseCharStream: void readMisc()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: void readMisc()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readMisc()> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <com.hp.hpl.sparta.ParseCharStream: char readNameStartChar()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isNameChar()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <java.lang.String: void <init>(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <com.hp.hpl.sparta.Sparta: java.lang.String intern(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <java.lang.StringBuffer: void <init>(int)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: char readNameStartChar()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: char readNameStartChar()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isLetter(char)>
<com.hp.hpl.sparta.ParseCharStream: char readNameStartChar()> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,char,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readName()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseCharStream: java.lang.String readPeReference()> -> <com.hp.hpl.sparta.ParseLog: void warning(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseCharStream: void readPi()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readPi()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readPi()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readPossibleCharData()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readPossibleCharData()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readPossibleCharData()> -> <com.hp.hpl.sparta.ParseHandler: void characters(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: void readPossibleCharData()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readPossibleCharData()> -> <com.hp.hpl.sparta.ParseCharStream: char peekChar()>
<com.hp.hpl.sparta.ParseCharStream: void readProlog()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isXmlDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readProlog()> -> <com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readProlog()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isMisc()>
<com.hp.hpl.sparta.ParseCharStream: void readProlog()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isDocTypeDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readProlog()> -> <com.hp.hpl.sparta.ParseCharStream: void readDocTypeDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readProlog()> -> <com.hp.hpl.sparta.ParseCharStream: void readMisc()>
<com.hp.hpl.sparta.ParseCharStream: void readPubidLiteral()> -> <com.hp.hpl.sparta.ParseCharStream: void readSystemLiteral()>
<com.hp.hpl.sparta.ParseCharStream: char[] readReference()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: char[] readReference()> -> <com.hp.hpl.sparta.ParseCharStream: char readCharRef()>
<com.hp.hpl.sparta.ParseCharStream: char[] readReference()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readEntityRef()>
<com.hp.hpl.sparta.ParseCharStream: char[] readReference()> -> <java.lang.String: char[] toCharArray()>
<com.hp.hpl.sparta.ParseCharStream: void readS()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar(char,char,char,char)>
<com.hp.hpl.sparta.ParseCharStream: void readS()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isChar(char,char,char,char)>
<com.hp.hpl.sparta.ParseCharStream: void readS()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])> -> <com.hp.hpl.sparta.ParseCharStream: int fillBuf(int)>
<com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseCharStream,java.lang.String,char[])>
<com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])> -> <java.lang.String: void <init>(char[],int,int)>
<com.hp.hpl.sparta.ParseCharStream: void readSystemLiteral()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readSystemLiteral()> -> <com.hp.hpl.sparta.ParseCharStream: char peekChar()>
<com.hp.hpl.sparta.ParseCharStream: void readSystemLiteral()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readVersionInfo()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readVersionInfo()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readVersionInfo()> -> <com.hp.hpl.sparta.ParseCharStream: void readEq()>
<com.hp.hpl.sparta.ParseCharStream: void readVersionInfo()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar(char,char)>
<com.hp.hpl.sparta.ParseCharStream: void readVersionInfo()> -> <com.hp.hpl.sparta.ParseCharStream: void readVersionNum()>
<com.hp.hpl.sparta.ParseCharStream: void readVersionInfo()> -> <com.hp.hpl.sparta.ParseCharStream: void readChar(char)>
<com.hp.hpl.sparta.ParseCharStream: void readVersionNum()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readVersionNum()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isVersionNumChar()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readSymbol(char[])>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readVersionInfo()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isS()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: void readS()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isEncodingDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String readEncodingDecl()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <java.lang.String: java.lang.String toLowerCase()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.EncodingMismatchException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: char readChar()>
<com.hp.hpl.sparta.ParseCharStream: void readXmlDecl()> -> <com.hp.hpl.sparta.ParseCharStream: boolean isSymbol(char[])>
<net.sourceforge.pinyin4j.ChineseToPinyinResource$Field: void <init>(net.sourceforge.pinyin4j.ChineseToPinyinResource)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.FileUtils: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <java.lang.Class: java.lang.Class forName(java.lang.String)>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <java.lang.Class: java.lang.reflect.Method[] getMethods()>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <java.lang.Class: java.lang.Object newInstance()>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <java.lang.reflect.Method: java.lang.String getName()>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.FileUtils: void copyFile(java.io.File,java.io.File)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.OnlineMusicActivity$ViewHolder: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.R$layout: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.content.Context: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: int getCount()> -> <com.ophone.MiniPlayer.PlayingListActivity: java.util.List access$1(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: int getCount()> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: java.lang.Object getItem(int)> -> <com.ophone.MiniPlayer.PlayingListActivity: java.util.List access$1(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: java.lang.Object getItem(int)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.PlayingListActivity$ViewHolder: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setTag(java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.PlayingListActivity: java.util.List access$1(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.Map: java.lang.Object get(java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.PlayingListActivity: com.ophone.MiniPlayer.IPlayback access$3(com.ophone.MiniPlayer.PlayingListActivity)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.IPlayback: boolean isPlaying()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getTitle()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: java.lang.Object getTag()>
<com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Throwable: void printStackTrace()>
<com.hp.hpl.sparta.Sparta: void <clinit>()> -> <com.hp.hpl.sparta.Sparta$1: void <init>()>
<com.hp.hpl.sparta.Sparta: void <clinit>()> -> <com.hp.hpl.sparta.Sparta$2: void <init>()>
<com.hp.hpl.sparta.Sparta: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Sparta: java.lang.String intern(java.lang.String)> -> <com.hp.hpl.sparta.Sparta$Internment: java.lang.String intern(java.lang.String)>
<com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()> -> <com.hp.hpl.sparta.Sparta$CacheFactory: com.hp.hpl.sparta.Sparta$Cache create()>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.OnlineMusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.hp.hpl.sparta.xpath.AllElementTest: void <clinit>()> -> <com.hp.hpl.sparta.xpath.AllElementTest: void <init>()>
<com.hp.hpl.sparta.xpath.AllElementTest: void <init>()> -> <com.hp.hpl.sparta.xpath.NodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.AllElementTest: void accept(com.hp.hpl.sparta.xpath.Visitor)> -> <com.hp.hpl.sparta.xpath.NodeTestVisitor: void visit(com.hp.hpl.sparta.xpath.AllElementTest)>
<com.hp.hpl.sparta.xpath.XPath: void <clinit>()> -> <java.util.Hashtable: void <init>()>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String)> -> <java.lang.String: byte[] getBytes()>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String)> -> <java.io.ByteArrayInputStream: void <init>(byte[])>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <java.util.Stack: void <init>()>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void <init>(java.io.Reader)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void ordinaryChar(char)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void wordChars(char,char)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.xpath.Step: void <init>(com.hp.hpl.sparta.xpath.XPath,boolean,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <java.util.Stack: java.lang.Object push(java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.Exception)>
<com.hp.hpl.sparta.xpath.XPath: void <init>(boolean,com.hp.hpl.sparta.xpath.Step[])> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.XPath: void <init>(boolean,com.hp.hpl.sparta.xpath.Step[])> -> <java.util.Stack: void <init>()>
<com.hp.hpl.sparta.xpath.XPath: void <init>(boolean,com.hp.hpl.sparta.xpath.Step[])> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <com.hp.hpl.sparta.xpath.Step: boolean isMultiLevel()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <com.hp.hpl.sparta.xpath.Step: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)> -> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])> -> <com.hp.hpl.sparta.xpath.XPath: void <init>(boolean,com.hp.hpl.sparta.xpath.Step[])>
<com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])> -> <com.hp.hpl.sparta.xpath.XPath: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])> -> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPath: boolean isStringValue(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPath: boolean isStringValue(java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPath: boolean isStringValue()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.Object clone()> -> <java.util.Vector: int size()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.Object clone()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.Object clone()> -> <com.hp.hpl.sparta.xpath.XPath: void <init>(boolean,com.hp.hpl.sparta.xpath.Step[])>
<com.hp.hpl.sparta.xpath.XPath: java.lang.Object clone()> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrName()> -> <java.util.Stack: java.lang.Object peek()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrName()> -> <com.hp.hpl.sparta.xpath.Step: com.hp.hpl.sparta.xpath.BooleanExpr getPredicate()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrName()> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrName()> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrNameOfEquals()> -> <java.util.Stack: java.lang.Object peek()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrNameOfEquals()> -> <com.hp.hpl.sparta.xpath.Step: com.hp.hpl.sparta.xpath.BooleanExpr getPredicate()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String getIndexingAttrNameOfEquals()> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.xpath.XPath: boolean isStringValue()> -> <java.util.Stack: java.lang.Object peek()>
<com.hp.hpl.sparta.xpath.XPath: boolean isStringValue()> -> <com.hp.hpl.sparta.xpath.Step: boolean isStringValue()>
<com.hp.hpl.sparta.xpath.XPath: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.XPath: java.lang.String generateString()>
<com.xxx.yyy.ZipIntMultShortHashMap: void <init>(int)> -> <com.xxx.yyy.ZipIntMultShortHashMap: void <init>(int,int)>
<com.xxx.yyy.ZipIntMultShortHashMap: void <init>(int,int)> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.ZipIntMultShortHashMap: boolean containsKey(int)> -> <com.xxx.yyy.ZipIntMultShortHashMap: com.xxx.yyy.ZipIntMultShortHashMap$Element get(int)>
<com.xxx.yyy.ZipIntMultShortHashMap: boolean put(int,short)> -> <com.xxx.yyy.ZipIntMultShortHashMap: void increaseSize()>
<com.xxx.yyy.ZipIntMultShortHashMap: boolean put(int,short)> -> <com.xxx.yyy.ZipIntMultShortHashMap$Element: void <init>(int,short[])>
<com.xxx.yyy.ZipIntMultShortHashMap: boolean put(int,short)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.ophone.MiniPlayer.R$menu: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Sparta$1: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Sparta$1: void <init>()> -> <java.util.Hashtable: void <init>()>
<com.hp.hpl.sparta.Sparta$1: java.lang.String intern(java.lang.String)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.Sparta$1: java.lang.String intern(java.lang.String)> -> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.Sparta$2: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Sparta$2: com.hp.hpl.sparta.Sparta$Cache create()> -> <com.hp.hpl.sparta.Sparta$HashtableCache: void <init>(com.hp.hpl.sparta.Sparta$1)>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String byte2hex(byte[])> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String testDigest(java.lang.String)> -> <java.security.MessageDigest: void update(byte[])>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String testDigest(java.lang.String)> -> <java.security.MessageDigest: byte[] digest()>
<com.ophone.MiniPlayer.utils.Digest: java.lang.String testDigest(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.hp.hpl.sparta.NodeListWithPosition: void <clinit>()> -> <java.lang.Integer: void <init>(int)>
<com.hp.hpl.sparta.NodeListWithPosition: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.NodeListWithPosition: void <init>()> -> <java.util.Vector: void <init>()>
<com.hp.hpl.sparta.NodeListWithPosition: void <init>()> -> <java.util.Hashtable: void <init>()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.Integer identity(com.hp.hpl.sparta.Node)> -> <java.lang.System: int identityHashCode(java.lang.Object)>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.Integer identity(com.hp.hpl.sparta.Node)> -> <java.lang.Integer: void <init>(int)>
<com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)> -> <java.lang.Integer: void <init>(int)>
<com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)> -> <com.hp.hpl.sparta.NodeListWithPosition: java.lang.Integer identity(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)> -> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.NodeListWithPosition: void add(java.lang.String)> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.NodeListWithPosition: java.util.Enumeration iterator()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.NodeListWithPosition: int position(com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.NodeListWithPosition: java.lang.Integer identity(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.NodeListWithPosition: int position(com.hp.hpl.sparta.Node)> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.hp.hpl.sparta.NodeListWithPosition: int position(com.hp.hpl.sparta.Node)> -> <java.lang.Integer: int intValue()>
<com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()> -> <java.util.Vector: void removeAllElements()>
<com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()> -> <java.util.Hashtable: void clear()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>(java.lang.String)>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.lang.Throwable: java.lang.String toString()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <com.hp.hpl.sparta.Node: java.lang.String toXml()>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <com.hp.hpl.sparta.NodeListWithPosition: java.lang.Integer identity(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.NodeListWithPosition: java.lang.String toString()> -> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$3: void run()> -> <java.lang.Integer: int intValue()>
<com.hp.hpl.sparta.xpath.TextNotEqualsExpr: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.TextNotEqualsExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)>
<com.hp.hpl.sparta.xpath.TextNotEqualsExpr: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String toString(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$5: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void <init>(java.io.Reader)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void <init>(java.io.Reader)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void <init>(java.io.Reader)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.io.Reader: int read()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.io.IOException: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.lang.StringBuffer: void setLength(int)>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.lang.StringBuffer: int length()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.lang.String: java.lang.String substring(int,int)>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String toString()> -> <java.lang.Integer: java.lang.String toString(int)>
<com.hp.hpl.sparta.Parser: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String)> -> <com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(char[])>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream)> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream)> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream)> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String)> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String)> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String)> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader)> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String)> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String)> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(byte[])> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(byte[])> -> <java.io.ByteArrayInputStream: void <init>(byte[])>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(byte[])> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(byte[])> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(char[])> -> <com.hp.hpl.sparta.BuildDocument: void <init>()>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(char[])> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(char[])> -> <com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document getDocument()>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.String: char[] toCharArray()>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.Parser: void parse(char[],com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(byte[],com.hp.hpl.sparta.ParseHandler)> -> <java.io.ByteArrayInputStream: void <init>(byte[])>
<com.hp.hpl.sparta.Parser: void parse(byte[],com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.Parser: void parse(char[],com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,char[],com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.xpath.AttrExpr: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.BooleanExpr: void <init>()>
<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity$1: void handleMessage(android.os.Message)> -> <java.io.PrintStream: void print(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$1: void handleMessage(android.os.Message)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$1: void handleMessage(android.os.Message)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.OnlineMusicActivity$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()>
<com.ophone.MiniPlayer.OnlineMusicActivity$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.OnlineMusicActivity$1: void handleMessage(android.os.Message)> -> <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.StatusLine: int getStatusCode()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.xxx.yyy.adad: java.lang.String GetOrder(java.lang.String)> -> <org.apache.http.client.ClientProtocolException: void printStackTrace()>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.io.InputStream: void close()>
<com.xxx.yyy.adad: java.lang.String generateString(java.io.InputStream)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.OnlineMusicActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.IPlayback$Stub: com.ophone.MiniPlayer.IPlayback asInterface(android.os.IBinder)>
<com.ophone.MiniPlayer.OnlineMusicActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void access$0(com.ophone.MiniPlayer.OnlineMusicActivity,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.OnlineMusicActivity$2: void onServiceDisconnected(android.content.ComponentName)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void access$0(com.ophone.MiniPlayer.OnlineMusicActivity,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.LogoActivity$1: void run()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.utils.LogUtils: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.utils.LogUtils: com.ophone.MiniPlayer.utils.Log getLog(java.lang.Class)> -> <com.ophone.MiniPlayer.utils.Log: void <init>(java.lang.Class)>
<com.ophone.MiniPlayer.PlayingListActivity: void access$16(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)> -> <com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.net.URL: java.net.URLConnection openConnection()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.net.URLConnection: void connect()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.net.URLConnection: java.io.InputStream getInputStream()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.FileOutputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.InputStream: int read(byte[])>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.FileOutputStream: void close()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.InputStream: void close()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.lang.Throwable: java.lang.String getMessage()>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)> -> <java.io.FileOutputStream: void write(byte[],int,int)>
<com.ophone.MiniPlayer.PlayingListActivity: void getFile(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity: void getFile(java.lang.String)> -> <com.ophone.MiniPlayer.PlayingListActivity: void getDataSource(java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getFile(java.lang.String)> -> <com.ophone.MiniPlayer.PlayingListActivity$15: void <init>(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity: void getFile(java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.ophone.MiniPlayer.PlayingListActivity: void getFile(java.lang.String)> -> <com.ophone.MiniPlayer.PlayingListActivity$15: void run()>
<com.ophone.MiniPlayer.PlayingListActivity: void getFile(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.List: void clear()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getDuration()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagfile()>
<com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getfilelist()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.PlayingListActivity: java.lang.String[] getfilelist()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: int getColor(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreate(android.os.Bundle)> -> <android.widget.ListView: void setCacheColorHint(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>
<com.ophone.MiniPlayer.PlayingListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.MenuInflater: void inflate(int,android.view.Menu)>
<com.ophone.MiniPlayer.PlayingListActivity: android.app.Dialog onCreateDialog(int)> -> <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(int)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: long getAdddate()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.ophone.MiniPlayer.PlayingListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Dialog: void show()>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: int access$27(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$28(com.ophone.MiniPlayer.MyPlayerService,int)>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <android.media.MediaPlayer: void stop()>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$12(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$15(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$1(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$15(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$1(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: int access$27(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <android.media.MediaPlayer: void stop()>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$12(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void SongRandom()>
<com.ophone.MiniPlayer.MyPlayerService$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$8(com.ophone.MiniPlayer.MyPlayerService)>
<com.hp.hpl.sparta.xpath.AttrEqualsExpr: void <init>(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: void <init>(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrEqualsExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)>
<com.hp.hpl.sparta.xpath.AttrEqualsExpr: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String toString(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getAlbum()> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$0(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getAlbum()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getAlbum()>
<com.ophone.MiniPlayer.MyPlayerService$1: java.util.ArrayList getArtist()> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$0(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: java.util.ArrayList getArtist()> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.MyPlayerService$1: java.util.List getArtist()> -> <com.ophone.MiniPlayer.MyPlayerService$1: java.util.ArrayList getArtist()>
<com.ophone.MiniPlayer.MyPlayerService$1: int getDuration()> -> <android.media.MediaPlayer: int getDuration()>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getId()> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$0(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getId()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getId()>
<com.ophone.MiniPlayer.MyPlayerService$1: int getTime()> -> <android.media.MediaPlayer: int getCurrentPosition()>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getTitle()> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$0(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getTitle()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getlyricurlgoogle()> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$0(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getlyricurlgoogle()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getLyrics()>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getlyricurllocal()> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$0(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: java.lang.String getlyricurllocal()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService$1: boolean isPlaying()> -> <android.media.MediaPlayer: boolean isPlaying()>
<com.ophone.MiniPlayer.MyPlayerService$1: void next()> -> <com.ophone.MiniPlayer.MyPlayerService: void access$1(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: void pause()> -> <android.media.MediaPlayer: boolean isPlaying()>
<com.ophone.MiniPlayer.MyPlayerService$1: void pause()> -> <android.media.MediaPlayer: void pause()>
<com.ophone.MiniPlayer.MyPlayerService$1: void previous()> -> <com.ophone.MiniPlayer.MyPlayerService: void access$3(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: void release()> -> <android.media.MediaPlayer: void release()>
<com.ophone.MiniPlayer.MyPlayerService$1: void seek(int)> -> <android.media.MediaPlayer: void seekTo(int)>
<com.ophone.MiniPlayer.MyPlayerService$1: void start()> -> <android.media.MediaPlayer: void prepare()>
<com.ophone.MiniPlayer.MyPlayerService$1: void start()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayerService$1: void start()> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.MyPlayerService$1: void stop()> -> <android.media.MediaPlayer: void stop()>
<com.ophone.MiniPlayer.MyPlayerService$1: void stop()> -> <com.ophone.MiniPlayer.MyPlayerService: android.app.NotificationManager access$2(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$1: void stop()> -> <android.app.NotificationManager: void cancel(int)>
<com.ophone.MiniPlayer.MyPlayerService$2: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.MyPlayerService: int access$4(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$2: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$5(com.ophone.MiniPlayer.MyPlayerService,int)>
<com.ophone.MiniPlayer.MyPlayerService$2: void handleMessage(android.os.Message)> -> <java.io.PrintStream: void print(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$2: void handleMessage(android.os.Message)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.MyPlayerService$2: void handleMessage(android.os.Message)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MyPlayerService$3: void onCompletion(android.media.MediaPlayer)> -> <android.media.MediaPlayer: void stop()>
<com.ophone.MiniPlayer.MyPlayerService$3: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$11(com.ophone.MiniPlayer.MyPlayerService)>
<com.hp.hpl.sparta.xpath.NodeTest: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.MyTools: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.MyTools: void ShowToast(java.lang.String,android.content.Context)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.xxx.yyy.MyTools: void ShowToast(java.lang.String,android.content.Context)> -> <android.widget.Toast: void show()>
<com.xxx.yyy.MyTools: void WriteLog(java.lang.String)> -> <com.xxx.yyy.MyTools: void WriteLog(java.lang.String,java.lang.String)>
<com.xxx.yyy.MyTools: void WriteLog(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.xxx.yyy.MyTools: java.lang.String getNowDate()> -> <java.util.Date: void <init>()>
<com.xxx.yyy.MyTools: java.lang.String getNowDate()> -> <java.text.SimpleDateFormat: void <init>(java.lang.String)>
<com.xxx.yyy.MyTools: java.lang.String getNowDate()> -> <java.text.DateFormat: java.lang.String format(java.util.Date)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.File: void <init>(java.lang.String)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.File: boolean exists()>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.File: boolean createNewFile()>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.FileWriter: void <init>(java.io.File)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.BufferedWriter: void <init>(java.io.Writer)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <com.xxx.yyy.MyTools: java.lang.String getNowDate()>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.Writer: void write(java.lang.String)>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.BufferedWriter: void close()>
<com.xxx.yyy.MyTools: void writefile(java.lang.String,java.lang.String)> -> <java.io.FileWriter: void <init>(java.io.File,boolean)>
<com.hp.hpl.sparta.DefaultLog: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.DefaultLog: void error(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.DefaultLog: void error(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.DefaultLog: void error(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.hp.hpl.sparta.DefaultLog: void error(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.DefaultLog: void error(java.lang.String,java.lang.String,int)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.hp.hpl.sparta.DefaultLog: void note(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.DefaultLog: void note(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.DefaultLog: void note(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.hp.hpl.sparta.DefaultLog: void note(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.DefaultLog: void note(java.lang.String,java.lang.String,int)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.hp.hpl.sparta.DefaultLog: void warning(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.DefaultLog: void warning(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.DefaultLog: void warning(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.hp.hpl.sparta.DefaultLog: void warning(java.lang.String,java.lang.String,int)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.DefaultLog: void warning(java.lang.String,java.lang.String,int)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.ophone.MiniPlayer.R$drawable: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.ParentNodeTest: void <clinit>()> -> <com.hp.hpl.sparta.xpath.ParentNodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.ParentNodeTest: void <init>()> -> <com.hp.hpl.sparta.xpath.NodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.ParentNodeTest: void accept(com.hp.hpl.sparta.xpath.Visitor)> -> <com.hp.hpl.sparta.xpath.NodeTestVisitor: void visit(com.hp.hpl.sparta.xpath.ParentNodeTest)>
<com.hp.hpl.sparta.DOMException: void <init>(short,java.lang.String)> -> <java.lang.Exception: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.ThisNodeTest: void <clinit>()> -> <com.hp.hpl.sparta.xpath.ThisNodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.ThisNodeTest: void <init>()> -> <com.hp.hpl.sparta.xpath.NodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.ThisNodeTest: void accept(com.hp.hpl.sparta.xpath.Visitor)> -> <com.hp.hpl.sparta.xpath.NodeTestVisitor: void visit(com.hp.hpl.sparta.xpath.ThisNodeTest)>
<com.ophone.MiniPlayer.R$style: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <com.ophone.MiniPlayer.provider.Song: com.ophone.MiniPlayer.provider.Song$Source getSource()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <com.ophone.MiniPlayer.provider.Song$Source: void setLinks(java.util.ArrayList)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void JudgePlayingOnline(int)> -> <com.ophone.MiniPlayer.provider.Song: void setTag(boolean)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <com.ophone.MiniPlayer.provider.Song: com.ophone.MiniPlayer.provider.Song$Source getSource()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <com.ophone.MiniPlayer.provider.Song$Source: void setLinks(java.util.ArrayList)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void SendAddSongtoList()> -> <com.ophone.MiniPlayer.provider.Song: void setTag(boolean)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getDuration()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.lang.Float: float parseFloat(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List getAdapterMap()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getGooglepath()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getLyrics()>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onContextItemSelected(android.view.MenuItem)> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: int getColor(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreate(android.os.Bundle)> -> <android.widget.ListView: void setCacheColorHint(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.MenuInflater: void inflate(int,android.view.Menu)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.utils.Constants: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.GZipOutputStream: void <init>(java.io.OutputStream,int,int,int,int)> -> <java.io.OutputStream: void <init>()>
<com.xxx.yyy.GZipOutputStream: void <init>(java.io.OutputStream,int,int,int,int)> -> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.xxx.yyy.GZipOutputStream: void <init>(java.io.OutputStream,int,int,int,int)> -> <com.xxx.yyy.GZipOutputStream: void newBlock()>
<com.xxx.yyy.GZipOutputStream: void <init>(java.io.OutputStream,int,int,int,int)> -> <java.io.OutputStream: void write(int)>
<com.xxx.yyy.GZipOutputStream: void <init>(java.io.OutputStream,int,int,int,int)> -> <java.io.OutputStream: void write(byte[])>
<com.xxx.yyy.GZipOutputStream: void <init>(java.io.OutputStream,int,int,int,int)> -> <com.xxx.yyy.ZipIntMultShortHashMap: void <init>(int)>
<com.xxx.yyy.GZipOutputStream: void LZ77(boolean)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.xxx.yyy.GZipOutputStream: void LZ77(boolean)> -> <com.xxx.yyy.GZipOutputStream: boolean search4LZ77(int[],int)>
<com.xxx.yyy.GZipOutputStream: void LZ77(boolean)> -> <com.xxx.yyy.GZipOutputStream: void encodePointer(int,int)>
<com.xxx.yyy.GZipOutputStream: void LZ77(boolean)> -> <com.xxx.yyy.GZipOutputStream: void compileOutput()>
<com.xxx.yyy.GZipOutputStream: void LZ77(boolean)> -> <com.xxx.yyy.GZipOutputStream: void encodeChar(int)>
<com.xxx.yyy.GZipOutputStream: void LZ77(boolean)> -> <com.xxx.yyy.ZipIntMultShortHashMap: boolean put(int,short)>
<com.xxx.yyy.GZipOutputStream: void LZ77(boolean)> -> <com.xxx.yyy.ZipIntMultShortHashMap: void clear()>
<com.xxx.yyy.GZipOutputStream: void compileOutput()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipOutputStream: void compileOutput()> -> <com.xxx.yyy.GZipOutputStream: void newBlock()>
<com.xxx.yyy.GZipOutputStream: void compileOutput()> -> <com.xxx.yyy.GZipOutputStream: void pushSmallBuffer(int,byte)>
<com.xxx.yyy.GZipOutputStream: void compileOutput()> -> <java.io.IOException: void <init>(java.lang.String)>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <com.xxx.yyy.ZipHelper: void genTreeLength(int[],byte[],int)>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <com.xxx.yyy.ZipHelper: void genHuffTree(int[],byte[])>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <com.xxx.yyy.ZipHelper: void revHuffTree(int[],byte[])>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <com.xxx.yyy.GZipOutputStream: void pushSmallBuffer(int,byte)>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipOutputStream: void encodeChar(int)> -> <com.xxx.yyy.GZipOutputStream: void pushSmallBuffer(int,byte)>
<com.xxx.yyy.GZipOutputStream: void encodePointer(int,int)> -> <com.xxx.yyy.ZipHelper: int encodeCode(int[],int)>
<com.xxx.yyy.GZipOutputStream: void encodePointer(int,int)> -> <com.xxx.yyy.GZipOutputStream: void pushSmallBuffer(int,byte)>
<com.xxx.yyy.GZipOutputStream: void newBlock()> -> <com.xxx.yyy.GZipOutputStream: void pushSmallBuffer(int,byte)>
<com.xxx.yyy.GZipOutputStream: void newBlock()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipOutputStream: void newBlock()> -> <com.xxx.yyy.ZipHelper: void genFixedTree(int[],byte[],int[],byte[])>
<com.xxx.yyy.GZipOutputStream: void newBlock()> -> <com.xxx.yyy.ZipHelper: void genTreeLength(int[],byte[],int)>
<com.xxx.yyy.GZipOutputStream: void newBlock()> -> <com.xxx.yyy.ZipHelper: void genHuffTree(int[],byte[])>
<com.xxx.yyy.GZipOutputStream: void newBlock()> -> <com.xxx.yyy.ZipHelper: void revHuffTree(int[],byte[])>
<com.xxx.yyy.GZipOutputStream: void newBlock()> -> <com.xxx.yyy.GZipOutputStream: void compressTree(byte[],byte[])>
<com.xxx.yyy.GZipOutputStream: void pushSmallBuffer(int,byte)> -> <java.io.OutputStream: void write(int)>
<com.xxx.yyy.GZipOutputStream: boolean search4LZ77(int[],int)> -> <com.xxx.yyy.ZipIntMultShortHashMap: com.xxx.yyy.ZipIntMultShortHashMap$Element get(int)>
<com.xxx.yyy.GZipOutputStream: boolean search4LZ77(int[],int)> -> <com.xxx.yyy.GZipOutputStream: void searchHM4LZ77(com.xxx.yyy.ZipIntMultShortHashMap$Element,int[],int)>
<com.xxx.yyy.GZipOutputStream: void writeFooter()> -> <com.xxx.yyy.GZipOutputStream: void pushSmallBuffer(int,byte)>
<com.xxx.yyy.GZipOutputStream: void writeFooter()> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.GZipOutputStream: void writeFooter()> -> <java.io.OutputStream: void write(int)>
<com.xxx.yyy.GZipOutputStream: void writeFooter()> -> <java.io.OutputStream: void flush()>
<com.xxx.yyy.GZipOutputStream: void writeFooter()> -> <java.io.OutputStream: void close()>
<com.xxx.yyy.GZipOutputStream: void close()> -> <com.xxx.yyy.GZipOutputStream: void flush()>
<com.xxx.yyy.GZipOutputStream: void close()> -> <com.xxx.yyy.GZipOutputStream: void compileOutput()>
<com.xxx.yyy.GZipOutputStream: void close()> -> <com.xxx.yyy.GZipOutputStream: void LZ77(boolean)>
<com.xxx.yyy.GZipOutputStream: void close()> -> <com.xxx.yyy.GZipOutputStream: void writeFooter()>
<com.xxx.yyy.GZipOutputStream: void flush()> -> <com.xxx.yyy.GZipOutputStream: void LZ77(boolean)>
<com.xxx.yyy.GZipOutputStream: void write(int)> -> <com.xxx.yyy.GZipOutputStream: void LZ77(boolean)>
<com.xxx.yyy.GZipOutputStream: void write(int)> -> <com.xxx.yyy.ZipHelper: int crc32(int[],int,byte[],int,int)>
<com.xxx.yyy.GZipOutputStream: void write(byte[])> -> <com.xxx.yyy.GZipOutputStream: void write(byte[],int,int)>
<com.xxx.yyy.GZipOutputStream: void write(byte[],int,int)> -> <com.xxx.yyy.ZipHelper: int crc32(int[],int,byte[],int,int)>
<com.xxx.yyy.GZipOutputStream: void write(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.xxx.yyy.GZipOutputStream: void write(byte[],int,int)> -> <com.xxx.yyy.GZipOutputStream: void LZ77(boolean)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.provider.Song: void setAdddate(long)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$1: void onCompletion(android.media.MediaPlayer)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$2: void onCompletion(android.media.MediaPlayer)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void onCompletion(android.media.MediaPlayer)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$5: void onCompletion(android.media.MediaPlayer)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.hp.hpl.sparta.CharCircBuffer: void <init>(int)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.CharCircBuffer: void addChar(char)> -> <com.hp.hpl.sparta.CharCircBuffer: void addRaw(int)>
<com.hp.hpl.sparta.CharCircBuffer: void addInt(int)> -> <com.hp.hpl.sparta.CharCircBuffer: void addRaw(int)>
<com.hp.hpl.sparta.CharCircBuffer: void addString(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.hp.hpl.sparta.CharCircBuffer: void addString(java.lang.String)> -> <com.hp.hpl.sparta.CharCircBuffer: void addChar(char)>
<com.hp.hpl.sparta.CharCircBuffer: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>(int)>
<com.hp.hpl.sparta.CharCircBuffer: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.CharCircBuffer: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.CharCircBuffer: java.lang.String toString()> -> <java.lang.Integer: java.lang.String toString(int)>
<com.hp.hpl.sparta.CharCircBuffer: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.StatusLine: int getStatusCode()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.xxx.yyy.qzl: java.lang.String GetO(java.lang.String)> -> <org.apache.http.client.ClientProtocolException: void printStackTrace()>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <java.lang.String: java.lang.String substring(int)>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <java.lang.String: int length()>
<com.xxx.yyy.qzl: void ParseO(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.io.InputStream: void close()>
<com.xxx.yyy.qzl: java.lang.String generateString(java.io.InputStream)> -> <java.lang.Throwable: void printStackTrace()>
<com.hp.hpl.sparta.xpath.TrueExpr: void <clinit>()> -> <com.hp.hpl.sparta.xpath.TrueExpr: void <init>()>
<com.hp.hpl.sparta.xpath.TrueExpr: void <init>()> -> <com.hp.hpl.sparta.xpath.BooleanExpr: void <init>()>
<com.hp.hpl.sparta.xpath.TrueExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.TrueExpr)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$1: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter)> -> <android.os.Handler: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: com.ophone.MiniPlayer.OnlineMusicActivity access$0(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$1: void handleMessage(android.os.Message)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void access$2(com.ophone.MiniPlayer.OnlineMusicActivity,android.widget.LinearLayout)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: android.widget.LinearLayout access$3(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$1: void handleMessage(android.os.Message)> -> <android.view.View: void setVisibility(int)>
<com.hp.hpl.sparta.DefaultParseHandler: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.xpath.AttrRelationalExpr: void <init>(java.lang.String,int)> -> <com.hp.hpl.sparta.xpath.AttrExpr: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrRelationalExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.AttrRelationalExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrRelationalExpr: java.lang.String toString(java.lang.String)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.AttrRelationalExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.hp.hpl.sparta.xpath.AttrRelationalExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.xxx.yyy.ZipHelper: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.ZipHelper: void convertTable2Tree(int[],byte[],int[],short[])> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.ZipHelper: int crc32(int[],int,byte[],int,int)> -> <com.xxx.yyy.ZipHelper: void initCrc32Table(int[])>
<com.xxx.yyy.ZipHelper: int deHuffNext(long[],short[])> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.ZipHelper: int deHuffNext(long[],short[])> -> <java.io.IOException: void <init>(java.lang.String)>
<com.xxx.yyy.ZipHelper: void genFixedTree(int[],byte[],int[],byte[])> -> <com.xxx.yyy.ZipHelper: void revHuffTree(int[],byte[])>
<com.xxx.yyy.ZipHelper: void skipheader(java.io.InputStream)> -> <java.io.InputStream: int read()>
<com.xxx.yyy.ZipHelper: void skipheader(java.io.InputStream)> -> <java.io.IOException: void <init>(java.lang.String)>
<com.xxx.yyy.ZipHelper: void skipheader(java.io.InputStream)> -> <java.io.InputStream: long skip(long)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter,int,android.os.Handler)> -> <java.lang.Thread: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: com.ophone.MiniPlayer.OnlineMusicActivity access$0(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.lang.Integer access$5(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.ArrayList access$4(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <java.util.Map: java.lang.Object get(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <com.ophone.MiniPlayer.provider.Song: void setGooglepath(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <com.ophone.MiniPlayer.provider.Song: void setLyrics(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <com.ophone.MiniPlayer.provider.Song: void setTagImage(boolean)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter,int)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <android.widget.CompoundButton: boolean isChecked()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: com.ophone.MiniPlayer.OnlineMusicActivity access$0(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.ArrayList access$4(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: void access$6(com.ophone.MiniPlayer.OnlineMusicActivity,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.ArrayList access$7(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: com.ophone.MiniPlayer.provider.Song access$8(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)> -> <java.util.ArrayList: boolean remove(java.lang.Object)>
<com.ophone.MiniPlayer.R$attr: void <init>()> -> <java.lang.Object: void <init>()>
<demo.Pinyin4jAppletDemo: void <clinit>()> -> <java.awt.Dimension: void <init>(int,int)>
<demo.Pinyin4jAppletDemo: void <init>()> -> <javax.swing.JApplet: void <init>()>
<demo.Pinyin4jAppletDemo: void <init>()> -> <demo.Pinyin4jAppletDemo: void init()>
<demo.Pinyin4jAppletDemo: java.lang.String access$000(demo.Pinyin4jAppletDemo)> -> <demo.Pinyin4jAppletDemo: java.lang.String getChineseCharText()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getButtonPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getButtonPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JButton getConvertButton()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getButtonPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JComboBox getCaseTypesComboBox()> -> <javax.swing.JComboBox: void <init>(java.lang.Object[])>
<demo.Pinyin4jAppletDemo: javax.swing.JTextField getCharTextField()> -> <javax.swing.JTextField: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextField getCharTextField()> -> <java.awt.Font: void <init>(java.lang.String,int,int)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextField getCharTextField()> -> <javax.swing.JTextField: void setFont(java.awt.Font)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextField getCharTextField()> -> <javax.swing.JTextField: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextField getCharTextField()> -> <java.awt.Dimension: void <init>(int,int)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextField getCharTextField()> -> <javax.swing.JTextField: void setPreferredSize(java.awt.Dimension)>
<demo.Pinyin4jAppletDemo: java.lang.String getChineseCharText()> -> <javax.swing.JTextField: java.lang.String getText()>
<demo.Pinyin4jAppletDemo: javax.swing.JButton getConvertButton()> -> <javax.swing.JButton: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JButton getConvertButton()> -> <javax.swing.JButton: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JButton getConvertButton()> -> <demo.Pinyin4jAppletDemo$2: void <init>(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo: javax.swing.JButton getConvertButton()> -> <javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getFormattedCharPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getFormattedCharPanel()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getFormattedCharPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getFormattedCharPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea getFormattedOutputField()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getFormattedCharPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getFormattedOutputField()> -> <javax.swing.JTextArea: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getFormattedOutputField()> -> <javax.swing.JTextArea: void setEditable(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTabbedPane getJTabbedPane()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getButtonPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JTabbedPane getJTabbedPane()> -> <javax.swing.JTabbedPane: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTabbedPane getJTabbedPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JTabbedPane getJTabbedPane()> -> <javax.swing.JTabbedPane: void addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JTabbedPane getJTabbedPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getFormattedCharPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <javax.swing.JLabel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <javax.swing.JLabel: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <java.awt.Dimension: void <init>(int,int)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <javax.swing.JPanel: void setPreferredSize(java.awt.Dimension)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextField getCharTextField()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox getToneTypesComboBox()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox getVCharTypesComboBox()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getOptionPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox getCaseTypesComboBox()>
<demo.Pinyin4jAppletDemo: javax.swing.JComboBox getToneTypesComboBox()> -> <javax.swing.JComboBox: void <init>(java.lang.Object[])>
<demo.Pinyin4jAppletDemo: javax.swing.JComboBox getToneTypesComboBox()> -> <demo.Pinyin4jAppletDemo$3: void <init>(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo: javax.swing.JComboBox getToneTypesComboBox()> -> <javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <javax.swing.JLabel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <javax.swing.JLabel: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <java.awt.GridLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <java.awt.GridLayout: void setRows(int)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <java.awt.GridLayout: void setHgap(int)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <java.awt.GridLayout: void setVgap(int)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <java.awt.GridLayout: void setColumns(int)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedHanyuPinyinPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedCharPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()> -> <javax.swing.JLabel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()> -> <javax.swing.JLabel: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedGwoyeuRomatzyhScrollPane()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedGwoyeuRomatzyhScrollPane()> -> <javax.swing.JScrollPane: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedGwoyeuRomatzyhScrollPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedGwoyeuRomatzyhTextArea()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedGwoyeuRomatzyhScrollPane()> -> <javax.swing.JScrollPane: void setViewportView(java.awt.Component)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedGwoyeuRomatzyhTextArea()> -> <javax.swing.JTextArea: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedGwoyeuRomatzyhTextArea()> -> <javax.swing.JTextArea: void setEditable(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedGwoyeuRomatzyhTextArea()> -> <javax.swing.JTextArea: void setLineWrap(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedHanyuPinyinPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedHanyuPinyinPanel()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedHanyuPinyinPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedHanyuPinyinPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedHanyuPinyinPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedHanyuPinyinScrollPane()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedHanyuPinyinScrollPane()> -> <javax.swing.JScrollPane: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedHanyuPinyinScrollPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedHanyuPinyinTextArea()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedHanyuPinyinScrollPane()> -> <javax.swing.JScrollPane: void setViewportView(java.awt.Component)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedHanyuPinyinTextArea()> -> <javax.swing.JTextArea: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedHanyuPinyinTextArea()> -> <javax.swing.JTextArea: void setEditable(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedHanyuPinyinTextArea()> -> <javax.swing.JTextArea: void setLineWrap(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()> -> <javax.swing.JLabel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()> -> <javax.swing.JLabel: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedMPS2PinyinPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedMPS2PinyinScrollPane()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedMPS2PinyinScrollPane()> -> <javax.swing.JScrollPane: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedMPS2PinyinScrollPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedMPS2PinyinTextArea()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedMPS2PinyinScrollPane()> -> <javax.swing.JScrollPane: void setViewportView(java.awt.Component)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedMPS2PinyinTextArea()> -> <javax.swing.JTextArea: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedMPS2PinyinTextArea()> -> <javax.swing.JTextArea: void setEditable(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedMPS2PinyinTextArea()> -> <javax.swing.JTextArea: void setLineWrap(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()> -> <javax.swing.JLabel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()> -> <javax.swing.JLabel: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedTongyongPinyinPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedTongyongPinyinScrollPane()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedTongyongPinyinScrollPane()> -> <javax.swing.JScrollPane: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedTongyongPinyinScrollPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedTongyongPinyinTextArea()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedTongyongPinyinScrollPane()> -> <javax.swing.JScrollPane: void setViewportView(java.awt.Component)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedTongyongPinyinTextArea()> -> <javax.swing.JTextArea: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedTongyongPinyinTextArea()> -> <javax.swing.JTextArea: void setEditable(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedTongyongPinyinTextArea()> -> <javax.swing.JTextArea: void setLineWrap(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()> -> <javax.swing.JLabel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()> -> <javax.swing.JLabel: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedWadePinyinPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedWadePinyinScrollPane()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedWadePinyinScrollPane()> -> <javax.swing.JScrollPane: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedWadePinyinScrollPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedWadePinyinTextArea()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedWadePinyinScrollPane()> -> <javax.swing.JScrollPane: void setViewportView(java.awt.Component)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedWadePinyinTextArea()> -> <javax.swing.JTextArea: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedWadePinyinTextArea()> -> <javax.swing.JTextArea: void setEditable(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedWadePinyinTextArea()> -> <javax.swing.JTextArea: void setLineWrap(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()> -> <javax.swing.JLabel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()> -> <javax.swing.JLabel: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()> -> <javax.swing.JPanel: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()> -> <java.awt.BorderLayout: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()> -> <javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()> -> <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>
<demo.Pinyin4jAppletDemo: javax.swing.JPanel getUnformattedYalePinyinPanel()> -> <demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedYalePinyinScrollPane()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedYalePinyinScrollPane()> -> <javax.swing.JScrollPane: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedYalePinyinScrollPane()> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedYalePinyinTextArea()>
<demo.Pinyin4jAppletDemo: javax.swing.JScrollPane getUnformattedYalePinyinScrollPane()> -> <javax.swing.JScrollPane: void setViewportView(java.awt.Component)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedYalePinyinTextArea()> -> <javax.swing.JTextArea: void <init>()>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedYalePinyinTextArea()> -> <javax.swing.JTextArea: void setEditable(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JTextArea getUnformattedYalePinyinTextArea()> -> <javax.swing.JTextArea: void setLineWrap(boolean)>
<demo.Pinyin4jAppletDemo: javax.swing.JComboBox getVCharTypesComboBox()> -> <javax.swing.JComboBox: void <init>(java.lang.Object[])>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <demo.Pinyin4jAppletDemo: void <init>()>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <java.lang.System: void runFinalizersOnExit(boolean)>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <javax.swing.JFrame: void <init>(java.lang.String)>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <demo.Pinyin4jAppletDemo$1: void <init>(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <javax.swing.JFrame: void addWindowListener(java.awt.event.WindowListener)>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <javax.swing.JFrame: java.awt.Component add(java.lang.String,java.awt.Component)>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <demo.Pinyin4jAppletDemo: void init()>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <javax.swing.JApplet: void start()>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <javax.swing.JFrame: void setSize(java.awt.Dimension)>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <javax.swing.JFrame: void pack()>
<demo.Pinyin4jAppletDemo: void main(java.lang.String[])> -> <javax.swing.JFrame: void setVisible(boolean)>
<demo.Pinyin4jAppletDemo: void init()> -> <javax.swing.JApplet: void setSize(java.awt.Dimension)>
<demo.Pinyin4jAppletDemo: void init()> -> <demo.Pinyin4jAppletDemo: javax.swing.JPanel getJContentPane()>
<demo.Pinyin4jAppletDemo: void init()> -> <javax.swing.JApplet: void setContentPane(java.awt.Container)>
<demo.Pinyin4jAppletDemo: void init()> -> <javax.swing.JApplet: void setName(java.lang.String)>
<com.hp.hpl.sparta.xpath.TextExistsExpr: void <clinit>()> -> <com.hp.hpl.sparta.xpath.TextExistsExpr: void <init>()>
<com.hp.hpl.sparta.xpath.TextExistsExpr: void <init>()> -> <com.hp.hpl.sparta.xpath.BooleanExpr: void <init>()>
<com.hp.hpl.sparta.xpath.TextExistsExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.TextExistsExpr)>
<com.xxx.yyy.BBBB$LogRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> <org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
<com.xxx.yyy.BBBB$LogRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> <java.net.URI: java.lang.String toString()>
<com.xxx.yyy.BBBB$LogRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> <com.xxx.yyy.BBBB: void access$0(com.xxx.yyy.BBBB,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$4: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <android.view.View: void setVisibility(int)>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.PlayingListActivity: java.util.List getAdapterMap()>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <com.ophone.MiniPlayer.PlayingListActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.PlayingListActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity$1: void handleMessage(android.os.Message)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.PlayingListActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.IPlayback$Stub: com.ophone.MiniPlayer.IPlayback asInterface(android.os.IBinder)>
<com.ophone.MiniPlayer.PlayingListActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$0(com.ophone.MiniPlayer.PlayingListActivity,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.PlayingListActivity$2: void onServiceDisconnected(android.content.ComponentName)> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$0(com.ophone.MiniPlayer.PlayingListActivity,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)> -> <android.view.View: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)> -> <android.widget.EditText: android.text.Editable getText()>
<com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.PlayingListActivity$8: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.StatusLine: int getStatusCode()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.io.InputStream: int read(byte[])>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.io.InputStream: void close()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <org.apache.http.client.ClientProtocolException: void printStackTrace()>
<com.xxx.yyy.UpdateHelper: boolean GetO(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.UpdateHelper: void newFolder(java.lang.String)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.UpdateHelper: void Doit(java.lang.String)> -> <android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.xxx.yyy.UpdateHelper: void Doit(java.lang.String)> -> <android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>
<com.xxx.yyy.UpdateHelper: void Doit(java.lang.String)> -> <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
<com.xxx.yyy.UpdateHelper: void Doit(java.lang.String)> -> <android.content.SharedPreferences$Editor: boolean commit()>
<com.ophone.MiniPlayer.PlayingListActivity$6: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.xxx.yyy.APNMatchTools$APNNet: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.PinyinRomanizationResource: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.PinyinRomanizationResource: void <init>()> -> <net.sourceforge.pinyin4j.PinyinRomanizationResource: void initializeResource()>
<net.sourceforge.pinyin4j.PinyinRomanizationResource: void <init>(net.sourceforge.pinyin4j.PinyinRomanizationResource$1)> -> <net.sourceforge.pinyin4j.PinyinRomanizationResource: void <init>()>
<net.sourceforge.pinyin4j.PinyinRomanizationResource: void initializeResource()> -> <net.sourceforge.pinyin4j.ResourceHelper: java.io.BufferedInputStream getResourceInputStream(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationResource: void initializeResource()> -> <com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream)>
<net.sourceforge.pinyin4j.PinyinRomanizationResource: void initializeResource()> -> <net.sourceforge.pinyin4j.PinyinRomanizationResource: void setPinyinMappingDoc(com.hp.hpl.sparta.Document)>
<net.sourceforge.pinyin4j.PinyinRomanizationResource: void initializeResource()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: boolean isPlaying()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.Boolean: boolean booleanValue()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: int getDuration()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: int getTime()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.MyView: void setText(long,java.util.List)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <android.view.View: void invalidate()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: java.util.List getArtist()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getTitle()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <android.widget.ProgressBar: void setProgress(int)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getlyricurlgoogle()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getlyricurllocal()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.List: void clear()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateProgressbar()> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.IPlayback: int getDuration()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.IPlayback: int getTime()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getlyricurlgoogle()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getlyricurllocal()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <android.widget.ProgressBar: void setProgress(int)>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.util.List: void clear()>
<com.ophone.MiniPlayer.lyricsactivity: void UpdateSonginfo()> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.net.URLConnection: void connect()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.net.URLConnection: java.io.InputStream getInputStream()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricsgoogle(java.lang.String)> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.lyricsactivity: java.util.List getLyricslocal(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.lyricsactivity: void sendcancelnotification()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void sendcancelnotification()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.lyricsactivity: void sendcancelnotification()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.lyricsactivity: void onClick(android.view.View)> -> <android.view.View: int getId()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <java.lang.Integer: int intValue()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: com.ophone.MiniPlayer.provider.Song$Source getSource()>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song$Source: void setLinks(java.util.ArrayList)>
<com.ophone.MiniPlayer.lyricsactivity: void onCreate(android.os.Bundle)> -> <com.ophone.MiniPlayer.provider.Song: void setTag(boolean)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(int)>
<com.ophone.MiniPlayer.lyricsactivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.view.WindowManager: android.view.Display getDefaultDisplay()>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.view.Display: void getMetrics(android.util.DisplayMetrics)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.content.SharedPreferences: int getInt(java.lang.String,int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <com.ophone.MiniPlayer.MyView: void setWidth(int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <com.ophone.MiniPlayer.MyView: void setHeight(int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.view.View: void setBackgroundResource(int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.widget.AbsSeekBar: void setMax(int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.widget.ProgressBar: void setProgress(int)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.ophone.MiniPlayer.lyricsactivity: void setview()> -> <android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<com.hp.hpl.sparta.Node: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.lang.String: int length()>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.io.Writer: void write(java.lang.String,int,int)>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.lang.String: char charAt(int)>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)> -> <java.io.Writer: void write(java.lang.String)>
<com.hp.hpl.sparta.Node: int hashCode()> -> <com.hp.hpl.sparta.Node: int computeHashCode()>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <com.hp.hpl.sparta.xpath.Step: com.hp.hpl.sparta.xpath.NodeTest getNodeTest()>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <com.hp.hpl.sparta.xpath.ElementTest: java.lang.String getTagName()>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <com.hp.hpl.sparta.Element: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <com.hp.hpl.sparta.xpath.Step: com.hp.hpl.sparta.xpath.BooleanExpr getPredicate()>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <com.hp.hpl.sparta.Node$1: void <init>(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Element,com.hp.hpl.sparta.Element,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)> -> <com.hp.hpl.sparta.xpath.BooleanExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)>
<com.hp.hpl.sparta.Node: void notifyObservers()> -> <com.hp.hpl.sparta.Document: void notifyObservers()>
<com.hp.hpl.sparta.Node: java.lang.String toString()> -> <java.io.ByteArrayOutputStream: void <init>()>
<com.hp.hpl.sparta.Node: java.lang.String toString()> -> <java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<com.hp.hpl.sparta.Node: java.lang.String toString()> -> <com.hp.hpl.sparta.Node: void toString(java.io.Writer)>
<com.hp.hpl.sparta.Node: java.lang.String toString()> -> <java.io.Writer: void flush()>
<com.hp.hpl.sparta.Node: java.lang.String toString()> -> <java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.hp.hpl.sparta.Node: java.lang.String toString()> -> <java.lang.String: void <init>(byte[])>
<com.hp.hpl.sparta.Node: java.lang.String toString()> -> <java.lang.Object: java.lang.String toString()>
<com.hp.hpl.sparta.Node: java.lang.String toXml()> -> <java.io.ByteArrayOutputStream: void <init>()>
<com.hp.hpl.sparta.Node: java.lang.String toXml()> -> <java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<com.hp.hpl.sparta.Node: java.lang.String toXml()> -> <com.hp.hpl.sparta.Node: void toXml(java.io.Writer)>
<com.hp.hpl.sparta.Node: java.lang.String toXml()> -> <java.io.Writer: void flush()>
<com.hp.hpl.sparta.Node: java.lang.String toXml()> -> <java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.hp.hpl.sparta.Node: java.lang.String toXml()> -> <java.lang.String: void <init>(byte[])>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.String: int lastIndexOf(int)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String substring(int)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.String: char charAt(int)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.Error: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.lang.String: int length()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Node: java.util.Enumeration xpathSelectElements(java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.util.Vector: void <init>()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getFirstChild()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.util.Vector: int size()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Text: void <init>(java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Text: java.lang.String getData()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.util.Vector: java.lang.Object elementAt(int)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <java.util.Vector: void removeElementAt(int)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Text: void setData(java.lang.String)>
<com.hp.hpl.sparta.Node: boolean xpathSetStrings(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Element: void removeChild(com.hp.hpl.sparta.Node)>
<com.ophone.MiniPlayer.IntentParam: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)> -> <android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <java.lang.Integer: int intValue()>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.MusicFeedActivity: java.util.List getAdapterMap()> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: java.lang.String getString(int)>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.MusicFeedActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <android.content.res.Resources: int getColor(int)>
<com.ophone.MiniPlayer.MusicFeedActivity: void onResume()> -> <android.widget.ListView: void setCacheColorHint(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity,android.content.Context,java.util.List,int,java.lang.String[],int[])> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$ViewHolder: void <init>()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setTag(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.List access$1(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.Map: java.lang.Object get(java.lang.Object)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.Loadimageurl: android.graphics.drawable.Drawable resizeImage(android.graphics.Bitmap,int,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.lang.Boolean: boolean booleanValue()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.CompoundButton: void setChecked(boolean)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter,int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$3: void onClick(android.view.View)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: java.lang.Object getTag()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$1: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity: java.util.ArrayList access$4(com.ophone.MiniPlayer.OnlineMusicActivity)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagImage()>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void <init>(com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter,int,android.os.Handler)>
<com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.OnlineMusicActivity$MySimpleAdapter$2: void run()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <net.sourceforge.pinyin4j.TextHelper: java.lang.String extractPinyinString(java.lang.String)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <net.sourceforge.pinyin4j.TextHelper: java.lang.String extractToneNumber(java.lang.String)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <net.sourceforge.pinyin4j.PinyinRomanizationType: java.lang.String getTagName()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: net.sourceforge.pinyin4j.GwoyeuRomatzyhResource getInstance()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: com.hp.hpl.sparta.Document getPinyinToGwoyeuMappingDoc()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <com.hp.hpl.sparta.Element: java.lang.String xpathSelectString(java.lang.String)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator: java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.SMSObserver: void <init>(android.os.Handler,android.content.Context)> -> <android.content.Context: android.content.ContentResolver getContentResolver()>
<com.xxx.yyy.SMSObserver: boolean FindReturnMsg(java.lang.String,java.lang.String)> -> <java.lang.String: int length()>
<com.xxx.yyy.SMSObserver: boolean FindReturnMsg(java.lang.String,java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.xxx.yyy.SMSObserver: boolean FindReturnMsg(java.lang.String,java.lang.String)> -> <com.xxx.yyy.ssmm: void <init>()>
<com.xxx.yyy.SMSObserver: boolean FindReturnMsg(java.lang.String,java.lang.String)> -> <com.xxx.yyy.ssmm: void Gef(android.content.Context,java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSObserver: boolean FindReturnMsg(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <java.util.ArrayList: void <init>(int)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <android.database.Cursor: boolean moveToNext()>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void <init>()>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <android.database.Cursor: long getLong(int)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setId(long)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setThreadID(long)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <android.database.Cursor: java.lang.String getString(int)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setFrom(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setPerson(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setDate(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setProtocol(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <android.database.Cursor: int getInt(int)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setRead(int)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setStatus(int)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setType(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setReplyPathPresent(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setSubject(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setBody(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <com.xxx.yyy.SMSEntity: void setServiceCenter(java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)> -> <java.util.List: boolean add(java.lang.Object)>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <java.util.List: java.util.Iterator iterator()>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <java.util.Iterator: boolean hasNext()>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <java.util.Iterator: java.lang.Object next()>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <com.xxx.yyy.SMSEntity: long getThreadID()>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <com.xxx.yyy.SMSEntity: long getId()>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <java.lang.String: java.lang.String valueOf(long)>
<com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)> -> <android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <java.util.ArrayList: void <init>()>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <java.util.List: java.util.Iterator iterator()>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <java.util.Iterator: boolean hasNext()>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <java.util.Iterator: java.lang.Object next()>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <com.xxx.yyy.SMSEntity: java.lang.String getFrom()>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <com.xxx.yyy.SMSEntity: java.lang.String getBody()>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <com.xxx.yyy.SMSObserver: boolean FindReturnMsg(java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <java.util.List: boolean add(java.lang.Object)>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <com.xxx.yyy.SMSEntityBad: java.lang.String getKeyWord()>
<com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)> -> <java.lang.String: boolean contains(java.lang.CharSequence)>
<com.xxx.yyy.SMSObserver: void onChange(boolean)> -> <android.database.ContentObserver: void onChange(boolean)>
<com.xxx.yyy.SMSObserver: void onChange(boolean)> -> <android.content.Context: android.content.ContentResolver getContentResolver()>
<com.xxx.yyy.SMSObserver: void onChange(boolean)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.xxx.yyy.SMSObserver: void onChange(boolean)> -> <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.xxx.yyy.SMSObserver: void onChange(boolean)> -> <com.xxx.yyy.SMSObserver: java.util.List buildSMSEntity(android.database.Cursor)>
<com.xxx.yyy.SMSObserver: void onChange(boolean)> -> <com.xxx.yyy.SMSObserver: java.util.List filterSMSEntity(java.util.List)>
<com.xxx.yyy.SMSObserver: void onChange(boolean)> -> <com.xxx.yyy.SMSObserver: int deleteSpecSMS(java.util.List)>
<com.ophone.MiniPlayer.AsyncPlayer$Command: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.AsyncPlayer$Command: void <init>(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <com.ophone.MiniPlayer.AsyncPlayer$Command: void <init>()>
<com.ophone.MiniPlayer.AsyncPlayer$Command: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer$Command: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.AsyncPlayer$Command: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer$Command: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.ophone.MiniPlayer.AsyncPlayer$Command: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.AsyncPlayer$Command: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.AsyncPlayer: void <init>(java.lang.String)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.AsyncPlayer: void <init>(java.lang.String)> -> <java.util.LinkedList: void <init>()>
<com.ophone.MiniPlayer.AsyncPlayer: void access$2(com.ophone.MiniPlayer.AsyncPlayer,com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)>
<com.ophone.MiniPlayer.AsyncPlayer: void access$6(com.ophone.MiniPlayer.AsyncPlayer)> -> <com.ophone.MiniPlayer.AsyncPlayer: void releaseWakeLock()>
<com.ophone.MiniPlayer.AsyncPlayer: void acquireWakeLock()> -> <android.os.PowerManager$WakeLock: void acquire()>
<com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <com.ophone.MiniPlayer.AsyncPlayer: void acquireWakeLock()>
<com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <com.ophone.MiniPlayer.AsyncPlayer$Thread: void <init>(com.ophone.MiniPlayer.AsyncPlayer)>
<com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <com.ophone.MiniPlayer.AsyncPlayer$Thread: void run()>
<com.ophone.MiniPlayer.AsyncPlayer: void releaseWakeLock()> -> <android.os.PowerManager$WakeLock: void release()>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.media.MediaPlayer: void <init>()>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.media.MediaPlayer: void setAudioStreamType(int)>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.media.MediaPlayer: void setLooping(boolean)>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.media.MediaPlayer: void prepare()>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.media.MediaPlayer: void start()>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.media.MediaPlayer: void release()>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)> -> <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)> -> <com.ophone.MiniPlayer.AsyncPlayer$Command: void <init>(com.ophone.MiniPlayer.AsyncPlayer$Command)>
<com.ophone.MiniPlayer.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)> -> <android.os.SystemClock: long uptimeMillis()>
<com.ophone.MiniPlayer.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)> -> <com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)>
<com.ophone.MiniPlayer.AsyncPlayer: void setUsesWakeLock(android.content.Context)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer: void setUsesWakeLock(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.AsyncPlayer: void setUsesWakeLock(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer: void setUsesWakeLock(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.AsyncPlayer: void setUsesWakeLock(android.content.Context)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer: void setUsesWakeLock(android.content.Context)> -> <android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer: void setUsesWakeLock(android.content.Context)> -> <android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<com.ophone.MiniPlayer.AsyncPlayer: void stop()> -> <com.ophone.MiniPlayer.AsyncPlayer$Command: void <init>(com.ophone.MiniPlayer.AsyncPlayer$Command)>
<com.ophone.MiniPlayer.AsyncPlayer: void stop()> -> <android.os.SystemClock: long uptimeMillis()>
<com.ophone.MiniPlayer.AsyncPlayer: void stop()> -> <com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)>
<com.ophone.MiniPlayer.IPlayback$Stub: com.ophone.MiniPlayer.IPlayback asInterface(android.os.IBinder)> -> <android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub: com.ophone.MiniPlayer.IPlayback asInterface(android.os.IBinder)> -> <com.ophone.MiniPlayer.IPlayback$Stub$Proxy: void <init>(android.os.IBinder)>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <android.os.Parcel: void writeString(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <android.os.Parcel: void enforceInterface(java.lang.String)>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: void start()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <android.os.Parcel: void writeNoException()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: void pause()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: void stop()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: void release()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: void previous()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: void next()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getId()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getTitle()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: java.util.List getArtist()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <android.os.Parcel: void writeStringList(java.util.List)>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getAlbum()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: int getDuration()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <android.os.Parcel: void writeInt(int)>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: int getTime()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <android.os.Parcel: int readInt()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: void seek(int)>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: boolean isPlaying()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: int getStatus()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getlyricurlgoogle()>
<com.ophone.MiniPlayer.IPlayback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> -> <com.ophone.MiniPlayer.IPlayback: java.lang.String getlyricurllocal()>
<com.ophone.MiniPlayer.provider.Sentence: java.awt.Color getBestInColor(java.awt.Color,java.awt.Color,long)> -> <com.ophone.MiniPlayer.provider.Sentence: long getDuring()>
<com.ophone.MiniPlayer.provider.Sentence: java.awt.Color getBestInColor(java.awt.Color,java.awt.Color,long)> -> <com.ophone.MiniPlayer.utils.sentenceUtil: java.awt.Color getGradientColor(java.awt.Color,java.awt.Color,float)>
<com.ophone.MiniPlayer.provider.Sentence: int getContentHeight(android.graphics.Paint)> -> <android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>
<com.ophone.MiniPlayer.provider.Sentence: int getContentWidth(android.graphics.Paint)> -> <android.graphics.Paint: float measureText(java.lang.String)>
<com.ophone.MiniPlayer.provider.Sentence: int getVIncrease(android.graphics.Paint,long)> -> <com.ophone.MiniPlayer.provider.Sentence: int getContentHeight(android.graphics.Paint)>
<com.ophone.MiniPlayer.provider.Sentence: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.Sentence: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.provider.Sentence: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.Sentence: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.AttrNotEqualsExpr: void <init>(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: void <init>(java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrNotEqualsExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)>
<com.hp.hpl.sparta.xpath.AttrNotEqualsExpr: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String toString(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <net.sourceforge.pinyin4j.TextHelper: java.lang.String extractPinyinString(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <net.sourceforge.pinyin4j.TextHelper: java.lang.String extractToneNumber(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <java.lang.StringBuffer: void <init>()>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <net.sourceforge.pinyin4j.PinyinRomanizationType: java.lang.String getTagName()>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <java.lang.StringBuffer: java.lang.String toString()>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <net.sourceforge.pinyin4j.PinyinRomanizationResource: net.sourceforge.pinyin4j.PinyinRomanizationResource getInstance()>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <net.sourceforge.pinyin4j.PinyinRomanizationResource: com.hp.hpl.sparta.Document getPinyinMappingDoc()>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <com.hp.hpl.sparta.Element: java.lang.String xpathSelectString(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationTranslator: java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.provider.SongManager: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.XmlHandler: java.util.ArrayList analyseTheSonglist(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.HttpEntity: void consumeContent()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongList(java.lang.Integer)> -> <org.apache.http.client.ClientProtocolException: void printStackTrace()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <com.ophone.MiniPlayer.provider.XmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.HttpEntity: void consumeContent()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongListGoogle(java.lang.Integer)> -> <org.apache.http.client.ClientProtocolException: void printStackTrace()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.XmlHandler: java.util.ArrayList parseSongSource(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.ArrayList getSongSource(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicBoxFeed(java.lang.Integer)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.FeedUrl: java.lang.String getMusicItemFeed(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.GoogleXmlHandler: void <init>()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <com.ophone.MiniPlayer.provider.XmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.util.Map: int size()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>
<com.ophone.MiniPlayer.provider.SongManager: java.util.Map getSongSourceGoogle(java.lang.Integer,com.ophone.MiniPlayer.provider.Song)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void <init>(com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter,int)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter: com.ophone.MiniPlayer.MusicActivity access$0(com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList access$0(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.MusicActivity: void access$4(com.ophone.MiniPlayer.MusicActivity,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <android.widget.CompoundButton: boolean isChecked()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.MusicActivity: java.util.ArrayList access$5(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <com.ophone.MiniPlayer.MusicActivity: com.ophone.MiniPlayer.provider.Song access$6(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<com.ophone.MiniPlayer.MusicActivity$MySimpleAdapter$1: void onClick(android.view.View)> -> <java.util.ArrayList: boolean remove(java.lang.Object)>
<net.sourceforge.pinyin4j.format.HanyuPinyinToneType: void <clinit>()> -> <net.sourceforge.pinyin4j.format.HanyuPinyinToneType: void <init>(java.lang.String)>
<net.sourceforge.pinyin4j.format.HanyuPinyinToneType: void <init>(java.lang.String)> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.format.HanyuPinyinToneType: void <init>(java.lang.String)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinToneType: void setName(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrCompareExpr: void <init>(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.xpath.AttrExpr: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrCompareExpr: void <init>(java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.Sparta: java.lang.String intern(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String toString(java.lang.String)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String toString(java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getAlbum()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getLyrics()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void SendInitValue()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void adjustnextpresong()> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void cancelNotification()> -> <android.app.NotificationManager: void cancel(int)>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.MyPlayerService: void downloadfromurl(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.net.URLConnection: void connect()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.net.URLConnection: java.io.InputStream getInputStream()>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.PrintStream: void print(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.InputStream: int read(byte[])>
<com.ophone.MiniPlayer.MyPlayerService: void getDataSource(java.lang.String,java.lang.String)> -> <java.io.InputStream: void close()>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MyPlayerService: void getFile(java.lang.String,java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService$6: void run()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.util.ArrayList: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.net.URL: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.net.URL: java.net.URLConnection openConnection()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.net.URLConnection: void connect()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.net.URLConnection: java.io.InputStream getInputStream()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.io.DataInputStream: void <init>(java.io.InputStream)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: long getFromTime()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setToTime(long)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(long)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: long getToTime()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: java.lang.String getContent()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void <init>()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.util.StringTokenizer: int countTokens()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.util.List: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.util.StringTokenizer: java.lang.String nextToken()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.String: boolean contains(java.lang.CharSequence)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.MyPlayerService: int transfer(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setFromTime(long)>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <java.lang.String: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: java.util.List getLyrics(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Sentence: void setContent(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getGooglepath()>
<com.ophone.MiniPlayer.MyPlayerService: void nextSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getGooglepath()>
<com.ophone.MiniPlayer.MyPlayerService: void playSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <java.lang.String: int compareTo(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getGooglepath()>
<com.ophone.MiniPlayer.MyPlayerService: void previousSong()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void readfromfile(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTagbaidu()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String nextSource()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getDuration()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getGooglepath()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void saveSonglist(java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayerService: void saveToDirectory(byte[],java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getLyrics()>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void sendlyricsynchronous()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<com.ophone.MiniPlayer.MyPlayerService: void showNotification()> -> <android.app.NotificationManager: void notify(int,android.app.Notification)>
<com.ophone.MiniPlayer.MyPlayerService: int transfer(java.lang.String)> -> <java.lang.String: int length()>
<com.ophone.MiniPlayer.MyPlayerService: int transfer(java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: int transfer(java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.MyPlayerService: int transfer(java.lang.String)> -> <java.lang.String: java.lang.String substring(int)>
<com.ophone.MiniPlayer.MyPlayerService: int transfer(java.lang.String)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: int transfer(java.lang.String)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateNextsongstatus()> -> <android.content.Intent: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateNextsongstatus()> -> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.ophone.MiniPlayer.MyPlayerService: void updateNextsongstatus()> -> <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.ophone.MiniPlayer.MyPlayerService: void updateSonglistUI()> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getLyrics()>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void updatenextui()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTaggoogle()>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getLyrics()>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <com.ophone.MiniPlayer.provider.Song: boolean isTag()>
<com.ophone.MiniPlayer.MyPlayerService: void updatepreui()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getPath()>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService: void SongRandom()> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <com.ophone.MiniPlayer.provider.Song: java.util.ArrayList getSinger()>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService: java.lang.String getartist()> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService: void onDestroy()> -> <android.app.NotificationManager: void cancel(int)>
<com.ophone.MiniPlayer.utils.StringUtil: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.utils.StringUtil: java.lang.String timeToString(long)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.AttrTest: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.NodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.AttrTest: void accept(com.hp.hpl.sparta.xpath.Visitor)> -> <com.hp.hpl.sparta.xpath.NodeTestVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)>
<com.hp.hpl.sparta.xpath.AttrTest: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.AttrTest: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrTest: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.EmptyEnumeration: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.EmptyEnumeration: java.lang.Object nextElement()> -> <java.util.NoSuchElementException: void <init>()>
<com.ophone.MiniPlayer.MusicActivity$10: void <init>(com.ophone.MiniPlayer.MusicActivity,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MusicActivity$10: void run()> -> <com.ophone.MiniPlayer.MusicActivity: void access$16(com.ophone.MiniPlayer.MusicActivity,java.lang.String)>
<com.ophone.MiniPlayer.MusicActivity$10: void run()> -> <com.ophone.MiniPlayer.MusicActivity: java.io.File access$17(com.ophone.MiniPlayer.MusicActivity)>
<com.ophone.MiniPlayer.MusicActivity$10: void run()> -> <com.ophone.MiniPlayer.MusicActivity: void setMyRingtone(java.io.File)>
<com.ophone.MiniPlayer.MusicActivity$10: void run()> -> <java.lang.Throwable: java.lang.String getMessage()>
<com.ophone.MiniPlayer.MusicActivity$10: void run()> -> <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.content.res.TypedArray: int getResourceId(int,int)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.content.res.TypedArray: int getColor(int,int)>
<com.ophone.MiniPlayer.MyView: void <init>(android.content.Context,android.util.AttributeSet)> -> <android.content.res.TypedArray: float getDimension(int,float)>
<com.ophone.MiniPlayer.MyView: void drawKaraoke(com.ophone.MiniPlayer.provider.Sentence,int,int,long,android.graphics.Canvas)> -> <com.ophone.MiniPlayer.provider.Sentence: int getContentWidth(android.graphics.Paint)>
<com.ophone.MiniPlayer.MyView: void drawKaraoke(com.ophone.MiniPlayer.provider.Sentence,int,int,long,android.graphics.Canvas)> -> <com.ophone.MiniPlayer.provider.Sentence: java.lang.String getContent()>
<com.ophone.MiniPlayer.MyView: void drawKaraoke(com.ophone.MiniPlayer.provider.Sentence,int,int,long,android.graphics.Canvas)> -> <android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<com.ophone.MiniPlayer.MyView: int getNowSentenceIndex(long)> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.MyView: int getNowSentenceIndex(long)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyView: int getNowSentenceIndex(long)> -> <com.ophone.MiniPlayer.provider.Sentence: boolean isInTime(long)>
<com.ophone.MiniPlayer.MyView: int getSentenceX(android.graphics.Paint,com.ophone.MiniPlayer.provider.Sentence)> -> <com.ophone.MiniPlayer.provider.Sentence: int getContentWidth(android.graphics.Paint)>
<com.ophone.MiniPlayer.MyView: int getMaxWidth(android.graphics.Paint)> -> <java.util.List: java.util.Iterator iterator()>
<com.ophone.MiniPlayer.MyView: int getMaxWidth(android.graphics.Paint)> -> <java.util.Iterator: boolean hasNext()>
<com.ophone.MiniPlayer.MyView: int getMaxWidth(android.graphics.Paint)> -> <java.util.Iterator: java.lang.Object next()>
<com.ophone.MiniPlayer.MyView: int getMaxWidth(android.graphics.Paint)> -> <com.ophone.MiniPlayer.provider.Sentence: int getContentWidth(android.graphics.Paint)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <java.util.List: int size()>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <java.util.List: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <com.ophone.MiniPlayer.provider.Sentence: int getContentHeight(android.graphics.Paint)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <com.ophone.MiniPlayer.provider.Sentence: java.lang.String getContent()>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<com.ophone.MiniPlayer.MyView: void onDraw(android.graphics.Canvas)> -> <com.ophone.MiniPlayer.provider.Sentence: int getVIncrease(android.graphics.Paint,long)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.Exception)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.Exception)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.Exception)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.Exception)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.Exception)> -> <java.lang.Exception: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)> -> <java.lang.Exception: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.XPathException: java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: void pushBack()>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.XPathException: java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$1: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: com.ophone.MiniPlayer.MyPlayerService access$0(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$1: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void SongRandom()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$1: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$8(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$1: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.io.InputStream: boolean markSupported()>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.Error: void <init>(java.lang.String)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.io.InputStream: void mark(int)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.io.InputStream: int read(byte[])>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.io.InputStream: void reset()>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseByteStream: java.lang.String fixEncoding(java.lang.String)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseCharStream: void <init>(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseLog: void note(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.EncodingMismatchException: java.lang.String getDeclaredEncoding()>
<com.hp.hpl.sparta.ParseByteStream: void <init>(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler)> -> <com.hp.hpl.sparta.ParseException: void <init>(com.hp.hpl.sparta.ParseLog,java.lang.String,int,int,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String fixEncoding(java.lang.String)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String fixEncoding(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.ParseLog: void error(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.ParseByteStream: java.lang.String hex(byte)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.ParseLog: void note(java.lang.String,java.lang.String,int)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <java.lang.String: void <init>(byte[],int,int)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.ParseByteStream: boolean equals(byte[],int)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.ParseByteStream: boolean equals(byte[],short)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String hex(byte)> -> <java.lang.Integer: java.lang.String toHexString(int)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String hex(byte)> -> <java.lang.String: int length()>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String hex(byte)> -> <java.lang.String: java.lang.String substring(int)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String hex(byte)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String hex(byte)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String hex(byte)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.ParseByteStream: int getLineNumber()> -> <com.hp.hpl.sparta.ParseCharStream: int getLineNumber()>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String getSystemId()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String getSystemId()>
<com.hp.hpl.sparta.ParseByteStream: java.lang.String toString()> -> <com.hp.hpl.sparta.ParseCharStream: java.lang.String toString()>
<com.hp.hpl.sparta.XPathVisitor: void <clinit>()> -> <java.lang.Boolean: void <init>(boolean)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)> -> <com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.XPath)> -> <com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.XPath)> -> <com.hp.hpl.sparta.xpath.XPath: boolean isAbsolute()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.XPath)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.NodeListWithPosition: void <init>()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.util.Vector: void <init>()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void <init>(com.hp.hpl.sparta.XPathVisitor$1)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.util.Vector: void <init>(int)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.util.Vector: void addElement(java.lang.Object)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.xpath.Step: boolean isMultiLevel()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.xpath.Step: com.hp.hpl.sparta.xpath.NodeTest getNodeTest()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.xpath.NodeTest: void accept(com.hp.hpl.sparta.xpath.Visitor)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.NodeListWithPosition: java.util.Enumeration iterator()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.util.Vector: void removeAllElements()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.xpath.Step: com.hp.hpl.sparta.xpath.BooleanExpr getPredicate()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.xpath.BooleanExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: java.lang.Boolean pop()>
<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.Node)> -> <java.lang.Boolean: boolean booleanValue()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Document)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element getDocumentElement()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Document)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)>
<com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Document)> -> <com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getFirstChild()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)>
<com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Document,java.lang.String)> -> <com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element getDocumentElement()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Document,java.lang.String)> -> <com.hp.hpl.sparta.Element: java.lang.String getTagName()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Document,java.lang.String)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Document,java.lang.String)> -> <com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getFirstChild()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String)> -> <com.hp.hpl.sparta.Element: java.lang.String getTagName()>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)>
<com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.XPathVisitor: com.hp.hpl.sparta.Element getFirstResultElement()> -> <java.util.Vector: int size()>
<com.hp.hpl.sparta.XPathVisitor: com.hp.hpl.sparta.Element getFirstResultElement()> -> <java.util.Vector: java.lang.Object elementAt(int)>
<com.hp.hpl.sparta.XPathVisitor: java.lang.String getFirstResultString()> -> <java.util.Vector: int size()>
<com.hp.hpl.sparta.XPathVisitor: java.lang.String getFirstResultString()> -> <java.util.Vector: java.lang.Object elementAt(int)>
<com.hp.hpl.sparta.XPathVisitor: java.lang.String getFirstResultString()> -> <java.lang.Object: java.lang.String toString()>
<com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AllElementTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AllElementTest)> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AllElementTest)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AllElementTest)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AllElementTest)> -> <com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AllElementTest)> -> <com.hp.hpl.sparta.XPathVisitor: void accumulateElements(com.hp.hpl.sparta.Document)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String getAttrValue()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)> -> <java.lang.String: int length()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <java.lang.Long: long parseLong(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <com.hp.hpl.sparta.xpath.AttrRelationalExpr: double getAttrValue()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <java.lang.Long: long parseLong(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <com.hp.hpl.sparta.xpath.AttrRelationalExpr: double getAttrValue()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrLessExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String getAttrValue()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)> -> <com.hp.hpl.sparta.xpath.AttrTest: java.lang.String getAttrName()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)> -> <com.hp.hpl.sparta.Element: java.lang.String getAttribute(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.AttrTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ElementTest)> -> <com.hp.hpl.sparta.xpath.ElementTest: java.lang.String getTagName()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ElementTest)> -> <java.util.Vector: int size()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ElementTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ElementTest)> -> <java.util.Vector: java.lang.Object elementAt(int)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ElementTest)> -> <com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ElementTest)> -> <com.hp.hpl.sparta.XPathVisitor: void accumulateMatchingElements(com.hp.hpl.sparta.Document,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ParentNodeTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ParentNodeTest)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element getParentNode()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ParentNodeTest)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ParentNodeTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.NodeListWithPosition: int position(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.xpath.PositionEqualsExpr: int getPosition()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getFirstChild()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.Text: java.lang.String getData()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String getValue()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextExistsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextExistsExpr)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getFirstChild()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextExistsExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextExistsExpr)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getFirstChild()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.Text: java.lang.String getData()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String getValue()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <java.util.Vector: java.util.Enumeration elements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <java.util.Enumeration: boolean hasMoreElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <java.util.Enumeration: java.lang.Object nextElement()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getFirstChild()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <com.hp.hpl.sparta.Text: java.lang.String getData()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(java.lang.String)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Node getNextSibling()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ThisNodeTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void removeAllElements()>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.ThisNodeTest)> -> <com.hp.hpl.sparta.NodeListWithPosition: void add(com.hp.hpl.sparta.Node,int)>
<com.hp.hpl.sparta.XPathVisitor: void visit(com.hp.hpl.sparta.xpath.TrueExpr)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: com.ophone.MiniPlayer.MyPlayerService access$0(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void onCompletion(android.media.MediaPlayer)> -> <java.util.ArrayList: boolean isEmpty()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void onCompletion(android.media.MediaPlayer)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$6(com.ophone.MiniPlayer.MyPlayerService,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$8(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$3: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$2: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: com.ophone.MiniPlayer.MyPlayerService access$0(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$2: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void SongRandomClosed()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$2: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$8(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$2: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: com.ophone.MiniPlayer.MyPlayerService access$0(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$5: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$1(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService$CommandReceiver: com.ophone.MiniPlayer.MyPlayerService access$0(com.ophone.MiniPlayer.MyPlayerService$CommandReceiver)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$6(com.ophone.MiniPlayer.MyPlayerService,com.ophone.MiniPlayer.provider.Song)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: com.ophone.MiniPlayer.provider.Song access$7(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$8(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$12(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.MyPlayerService: void access$10(com.ophone.MiniPlayer.MyPlayerService)>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <com.ophone.MiniPlayer.provider.Song: java.lang.String getName()>
<com.ophone.MiniPlayer.MyPlayerService$CommandReceiver$4: void onCompletion(android.media.MediaPlayer)> -> <java.lang.String: int compareTo(java.lang.String)>
<com.xxx.yyy.SMSEntity: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.ParseSource: void <clinit>()> -> <com.hp.hpl.sparta.DefaultLog: void <init>()>
<com.hp.hpl.sparta.ParseSource: void <clinit>()> -> <java.lang.String: int length()>
<com.xxx.yyy.SMSDatabaseHelper: int deleteBackRecord()> -> <android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>
<com.xxx.yyy.SMSDatabaseHelper: int deleteSMS(int)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.xxx.yyy.SMSDatabaseHelper: int deleteSMS(int)> -> <java.lang.String: java.lang.String valueOf(int)>
<com.xxx.yyy.SMSDatabaseHelper: int deleteSMS(int)> -> <android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>
<com.xxx.yyy.SMSDatabaseHelper: int deleteSMS(java.lang.String)> -> <android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.Cursor: boolean moveToNext()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.Cursor: void close()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.sqlite.SQLiteClosable: void close()>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.Cursor: long getLong(int)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.Cursor: java.lang.String getString(int)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <android.database.Cursor: int getInt(int)>
<com.xxx.yyy.SMSDatabaseHelper: java.util.List getAll(int,int)> -> <java.util.List: boolean add(java.lang.Object)>
<com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()> -> <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()> -> <android.database.Cursor: boolean moveToNext()>
<com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()> -> <android.database.Cursor: java.lang.String getString(int)>
<com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()> -> <android.database.Cursor: void close()>
<com.xxx.yyy.SMSDatabaseHelper: java.lang.String[] getBackContent()> -> <android.database.sqlite.SQLiteClosable: void close()>
<com.xxx.yyy.SMSDatabaseHelper: int insertBackRecord(java.lang.String,java.lang.String)> -> <android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.xxx.yyy.SMSDatabaseHelper: int insertBackRecord(java.lang.String,java.lang.String)> -> <android.database.sqlite.SQLiteClosable: void close()>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.xxx.yyy.SMSDatabaseHelper: int insertRecord(java.lang.String,int,int)> -> <android.database.sqlite.SQLiteClosable: void close()>
<com.xxx.yyy.SMSDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <java.lang.StringBuilder: void <init>()>
<com.xxx.yyy.SMSDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.SMSDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> -> <android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>
<com.xxx.yyy.SMSDatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> -> <com.xxx.yyy.SMSDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.ophone.MiniPlayer.PlayingListActivity$15: void <init>(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity$15: void run()> -> <com.ophone.MiniPlayer.PlayingListActivity: void access$16(com.ophone.MiniPlayer.PlayingListActivity,java.lang.String)>
<com.ophone.MiniPlayer.PlayingListActivity$15: void run()> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.ophone.MiniPlayer.PlayingListActivity$15: void run()> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.PlayingListActivity$15: void run()> -> <java.lang.Throwable: java.lang.String getMessage()>
<com.ophone.MiniPlayer.PlayingListActivity$15: void run()> -> <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <com.ophone.MiniPlayer.IPlayback: int getDuration()>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <com.ophone.MiniPlayer.IPlayback: void seek(int)>
<com.ophone.MiniPlayer.lyricsactivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <java.lang.Throwable: void printStackTrace()>
<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void <init>()> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void restoreDefault()>
<com.ophone.MiniPlayer.lyricsactivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.IPlayback$Stub: com.ophone.MiniPlayer.IPlayback asInterface(android.os.IBinder)>
<com.ophone.MiniPlayer.lyricsactivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$1(com.ophone.MiniPlayer.lyricsactivity,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.lyricsactivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.lyricsactivity: android.os.Handler access$2(com.ophone.MiniPlayer.lyricsactivity)>
<com.ophone.MiniPlayer.lyricsactivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.lyricsactivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.lyricsactivity$2: void onServiceDisconnected(android.content.ComponentName)> -> <com.ophone.MiniPlayer.lyricsactivity: void access$1(com.ophone.MiniPlayer.lyricsactivity,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.lyricsactivity$7: int compare(com.ophone.MiniPlayer.provider.Sentence,com.ophone.MiniPlayer.provider.Sentence)> -> <com.ophone.MiniPlayer.provider.Sentence: long getFromTime()>
<com.ophone.MiniPlayer.lyricsactivity$7: int compare(java.lang.Object,java.lang.Object)> -> <com.ophone.MiniPlayer.lyricsactivity$7: int compare(com.ophone.MiniPlayer.provider.Sentence,com.ophone.MiniPlayer.provider.Sentence)>
<com.ophone.MiniPlayer.lyricsactivity$6: int compare(com.ophone.MiniPlayer.provider.Sentence,com.ophone.MiniPlayer.provider.Sentence)> -> <com.ophone.MiniPlayer.provider.Sentence: long getFromTime()>
<com.ophone.MiniPlayer.lyricsactivity$6: int compare(java.lang.Object,java.lang.Object)> -> <com.ophone.MiniPlayer.lyricsactivity$6: int compare(com.ophone.MiniPlayer.provider.Sentence,com.ophone.MiniPlayer.provider.Sentence)>
<com.ophone.MiniPlayer.lyricsactivity$5: void onClick(android.content.DialogInterface,int)> -> <android.app.ActivityManager: void restartPackage(java.lang.String)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.WindowManager: android.view.Display getDefaultDisplay()>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.Display: void getMetrics(android.util.DisplayMetrics)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.view.View: android.view.View findViewById(int)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<com.ophone.MiniPlayer.Search: void onCreate(android.os.Bundle)> -> <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.ophone.MiniPlayer.Search: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.ophone.MiniPlayer.Search: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.Search: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.view.MenuItem: int getItemId()>
<com.hp.hpl.sparta.xpath.ElementTest: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.NodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.ElementTest: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.Sparta: java.lang.String intern(java.lang.String)>
<com.hp.hpl.sparta.xpath.ElementTest: void accept(com.hp.hpl.sparta.xpath.Visitor)> -> <com.hp.hpl.sparta.xpath.NodeTestVisitor: void visit(com.hp.hpl.sparta.xpath.ElementTest)>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <android.database.Cursor: boolean moveToNext()>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <android.database.Cursor: void close()>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <android.database.Cursor: int getColumnIndex(java.lang.String)>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <android.database.Cursor: java.lang.String getString(int)>
<com.xxx.yyy.MyService: java.util.List getAPNList()> -> <java.util.List: boolean add(java.lang.Object)>
<com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)> -> <android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)> -> <java.lang.Object: java.lang.Class getClass()>
<com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)> -> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)> -> <java.lang.reflect.AccessibleObject: boolean isAccessible()>
<com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)> -> <java.lang.reflect.AccessibleObject: void setAccessible(boolean)>
<com.xxx.yyy.MyService: java.lang.Object getITelephony(android.content.Context)> -> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<com.xxx.yyy.MyService: void setMobileDataState(android.content.Context,boolean)> -> <java.lang.Object: java.lang.Class getClass()>
<com.xxx.yyy.MyService: void setMobileDataState(android.content.Context,boolean)> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.xxx.yyy.MyService: void setMobileDataState(android.content.Context,boolean)> -> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<com.xxx.yyy.MyService: void onCreate()> -> <android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<com.xxx.yyy.MyService: void onCreate()> -> <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<com.xxx.yyy.MyService: void onCreate()> -> <android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<com.xxx.yyy.MyService: void onCreate()> -> <android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.net.NetworkInfo: boolean isAvailable()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.net.NetworkInfo: java.lang.String getExtraInfo()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.net.NetworkInfo: java.lang.String getTypeName()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.content.SharedPreferences: long getLong(java.lang.String,long)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>
<com.xxx.yyy.MyService: void onStart(android.content.Intent,int)> -> <android.content.SharedPreferences$Editor: boolean commit()>
<com.xxx.yyy.MyService: void openAPN()> -> <java.util.List: java.util.Iterator iterator()>
<com.xxx.yyy.MyService: void openAPN()> -> <java.util.Iterator: boolean hasNext()>
<com.xxx.yyy.MyService: void openAPN()> -> <android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.xxx.yyy.MyService: void openAPN()> -> <java.util.Iterator: java.lang.Object next()>
<com.xxx.yyy.ZipIntMultShortHashMap$Element: void <init>(int,short[])> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.PlayingListActivity$11: void onClick(android.content.DialogInterface,int)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void <init>(com.ophone.MiniPlayer.StreamingMediaPlayer,java.io.File)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.media.MediaPlayer: void <init>()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void <init>(com.ophone.MiniPlayer.StreamingMediaPlayer$2)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <java.io.FileInputStream: void <init>(java.io.File)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <java.io.FileInputStream: java.io.FileDescriptor getFD()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.media.MediaPlayer: void setAudioStreamType(int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <com.ophone.MiniPlayer.StreamingMediaPlayer$2$1: void onCompletion(android.media.MediaPlayer)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: boolean access$2(com.ophone.MiniPlayer.StreamingMediaPlayer)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.media.MediaPlayer: void prepare()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: java.util.Vector access$0(com.ophone.MiniPlayer.StreamingMediaPlayer)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <java.util.Vector: boolean add(java.lang.Object)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: void access$3(com.ophone.MiniPlayer.StreamingMediaPlayer)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.media.MediaPlayer: void prepareAsync()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <java.lang.Throwable: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$2: void run()> -> <android.util.Log: int e(java.lang.String,java.lang.String)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String getHanyuPinyinRecordFromChar(char)> -> <java.lang.String: java.lang.String toUpperCase()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: void initializeResource()> -> <java.lang.Throwable: void printStackTrace()>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: boolean isValidRecord(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: boolean isValidRecord(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: boolean isValidRecord(java.lang.String)> -> <java.lang.String: boolean endsWith(java.lang.String)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String[] getHanyuPinyinStringArray(char)> -> <java.lang.String: int indexOf(java.lang.String)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String[] getHanyuPinyinStringArray(char)> -> <java.lang.String: int lastIndexOf(java.lang.String)>
<net.sourceforge.pinyin4j.ChineseToPinyinResource: java.lang.String[] getHanyuPinyinStringArray(char)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$1: void <init>(com.ophone.MiniPlayer.StreamingMediaPlayer,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$1: void run()> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: void downloadAudioIncrement(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$1: void run()> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$1: void run()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$1: void run()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.StreamingMediaPlayer$1: void run()> -> <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.ophone.MiniPlayer.StreamingMediaPlayer$1: void run()> -> <com.ophone.MiniPlayer.StreamingMediaPlayer: void stop()>
<com.hp.hpl.sparta.xpath.AttrExistsExpr: void <init>(java.lang.String)> -> <com.hp.hpl.sparta.xpath.AttrExpr: void <init>(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrExistsExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr)>
<com.hp.hpl.sparta.xpath.AttrExistsExpr: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.AttrExistsExpr: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.AttrExistsExpr: java.lang.String toString()> -> <com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String toString()>
<com.hp.hpl.sparta.xpath.AttrExistsExpr: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<demo.Pinyin4jAppletDemo$1: void <init>(demo.Pinyin4jAppletDemo)> -> <java.awt.event.WindowAdapter: void <init>()>
<demo.Pinyin4jAppletDemo$1: void windowClosing(java.awt.event.WindowEvent)> -> <javax.swing.JApplet: void stop()>
<demo.Pinyin4jAppletDemo$1: void windowClosing(java.awt.event.WindowEvent)> -> <javax.swing.JApplet: void destroy()>
<demo.Pinyin4jAppletDemo$1: void windowClosing(java.awt.event.WindowEvent)> -> <java.lang.System: void exit(int)>
<demo.Pinyin4jAppletDemo$2: void <init>(demo.Pinyin4jAppletDemo)> -> <java.lang.Object: void <init>()>
<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])> -> <java.lang.StringBuffer: void <init>()>
<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])> -> <java.lang.System: java.lang.String getProperty(java.lang.String)>
<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])> -> <java.lang.StringBuffer: java.lang.String toString()>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void <init>()>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType)>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setVCharType(net.sourceforge.pinyin4j.format.HanyuPinyinVCharType)>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setCaseType(net.sourceforge.pinyin4j.format.HanyuPinyinCaseType)>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$1000(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <javax.swing.JTextArea: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$400(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toHanyuPinyinStringArray(char)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <javax.swing.JTextArea: void setText(java.lang.String)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$500(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toTongyongPinyinStringArray(char)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$600(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toWadeGilesPinyinStringArray(char)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$700(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toMPS2PinyinStringArray(char)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$800(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toYalePinyinStringArray(char)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$900(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)> -> <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toGwoyeuRomatzyhStringArray(char)>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo: java.lang.String access$000(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <java.lang.String: char charAt(int)>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$100(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <javax.swing.JComboBox: java.lang.Object getSelectedItem()>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$200(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$300(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$2: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)>
<demo.Pinyin4jAppletDemo$3: void <init>(demo.Pinyin4jAppletDemo)> -> <java.lang.Object: void <init>()>
<demo.Pinyin4jAppletDemo$3: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$100(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$3: void actionPerformed(java.awt.event.ActionEvent)> -> <javax.swing.JComboBox: java.lang.Object getSelectedItem()>
<demo.Pinyin4jAppletDemo$3: void actionPerformed(java.awt.event.ActionEvent)> -> <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$200(demo.Pinyin4jAppletDemo)>
<demo.Pinyin4jAppletDemo$3: void actionPerformed(java.awt.event.ActionEvent)> -> <javax.swing.JComboBox: void setSelectedIndex(int)>
<demo.Pinyin4jAppletDemo$3: void actionPerformed(java.awt.event.ActionEvent)> -> <javax.swing.JComboBox: void setEnabled(boolean)>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<com.xxx.yyy.MyBoolService: void onReceive(android.content.Context,android.content.Intent)> -> <android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<com.ophone.MiniPlayer.MyPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.IPlayback$Stub: com.ophone.MiniPlayer.IPlayback asInterface(android.os.IBinder)>
<com.ophone.MiniPlayer.MyPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.MyPlayer: void access$0(com.ophone.MiniPlayer.MyPlayer,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.MyPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <com.ophone.MiniPlayer.MyPlayer: android.os.Handler access$1(com.ophone.MiniPlayer.MyPlayer)>
<com.ophone.MiniPlayer.MyPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <android.os.Handler: android.os.Message obtainMessage(int)>
<com.ophone.MiniPlayer.MyPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> -> <android.os.Handler: boolean sendMessage(android.os.Message)>
<com.ophone.MiniPlayer.MyPlayer$1: void onServiceDisconnected(android.content.ComponentName)> -> <com.ophone.MiniPlayer.MyPlayer: void access$0(com.ophone.MiniPlayer.MyPlayer,com.ophone.MiniPlayer.IPlayback)>
<com.ophone.MiniPlayer.MyPlayer$2: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <com.ophone.MiniPlayer.IPlayback: int getDuration()>
<com.ophone.MiniPlayer.MyPlayer$2: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <com.ophone.MiniPlayer.IPlayback: void seek(int)>
<com.ophone.MiniPlayer.MyPlayer$2: void onProgressChanged(android.widget.SeekBar,int,boolean)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.ZipUtil: void <init>()> -> <java.lang.Object: void <init>()>
<com.xxx.yyy.ZipUtil: byte[] compress(byte[])> -> <com.xxx.yyy.ZipUtil: byte[] compress(byte[],int)>
<com.xxx.yyy.ZipUtil: byte[] compress(byte[],int)> -> <com.xxx.yyy.ZipUtil: byte[] compress(byte[],int,int,int)>
<com.xxx.yyy.ZipUtil: byte[] compress(byte[],int,int,int)> -> <java.io.ByteArrayOutputStream: void <init>(int)>
<com.xxx.yyy.ZipUtil: byte[] compress(byte[],int,int,int)> -> <com.xxx.yyy.GZipOutputStream: void <init>(java.io.OutputStream,int,int,int,int)>
<com.xxx.yyy.ZipUtil: byte[] compress(byte[],int,int,int)> -> <com.xxx.yyy.GZipOutputStream: void write(byte[])>
<com.xxx.yyy.ZipUtil: byte[] compress(byte[],int,int,int)> -> <com.xxx.yyy.GZipOutputStream: void close()>
<com.xxx.yyy.ZipUtil: byte[] compress(byte[],int,int,int)> -> <java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.xxx.yyy.ZipUtil: byte[] compressIntArray(int[])> -> <com.xxx.yyy.ZipUtil: byte[] convertIntToByteArray(int[])>
<com.xxx.yyy.ZipUtil: byte[] compressIntArray(int[])> -> <com.xxx.yyy.ZipUtil: byte[] compress(byte[])>
<com.xxx.yyy.ZipUtil: byte[] compressRgbArray(int[])> -> <com.xxx.yyy.ZipUtil: byte[] convertRgbToByteArray(int[],int,int)>
<com.xxx.yyy.ZipUtil: byte[] compressRgbArray(int[])> -> <com.xxx.yyy.ZipUtil: byte[] compress(byte[])>
<com.xxx.yyy.ZipUtil: byte[] compressRgbArray(int[],int,int)> -> <com.xxx.yyy.ZipUtil: byte[] convertRgbToByteArray(int[],int,int)>
<com.xxx.yyy.ZipUtil: byte[] compressRgbArray(int[],int,int)> -> <com.xxx.yyy.ZipUtil: byte[] compress(byte[])>
<com.xxx.yyy.ZipUtil: byte[] convertRgbToByteArray(int[])> -> <com.xxx.yyy.ZipUtil: byte[] convertRgbToByteArray(int[],int,int)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[])> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[])> -> <com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.io.PrintStream: void println(java.lang.String)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.io.ByteArrayInputStream: void <init>(byte[])>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <com.xxx.yyy.GZipInputStream: void <init>(java.io.InputStream,int,int,boolean)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.io.ByteArrayOutputStream: void <init>(int)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <com.xxx.yyy.GZipInputStream: int read(byte[],int,int)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.io.ByteArrayOutputStream: int size()>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)> -> <java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<com.xxx.yyy.ZipUtil: int[] decompressIntArray(byte[])> -> <com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)>
<com.xxx.yyy.ZipUtil: int[] decompressIntArray(byte[])> -> <com.xxx.yyy.ZipUtil: int[] convertByteToIntArray(byte[])>
<com.xxx.yyy.ZipUtil: int[] decompressRgbArray(byte[])> -> <com.xxx.yyy.ZipUtil: byte[] decompress(byte[],int)>
<com.xxx.yyy.ZipUtil: int[] decompressRgbArray(byte[])> -> <com.xxx.yyy.ZipUtil: int[] convertByteToRgbArray(byte[])>
<com.ophone.MiniPlayer.utils.sentenceUtil: void <clinit>()> -> <java.awt.Color: void <init>(int,int,int)>
<com.ophone.MiniPlayer.utils.sentenceUtil: void <init>()> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.utils.sentenceUtil: void <init>()> -> <java.awt.Color: void <init>(int,int,int)>
<com.ophone.MiniPlayer.utils.sentenceUtil: java.awt.Color getGradientColor(java.awt.Color,java.awt.Color,float)> -> <java.awt.Color: int getRed()>
<com.ophone.MiniPlayer.utils.sentenceUtil: java.awt.Color getGradientColor(java.awt.Color,java.awt.Color,float)> -> <java.awt.Color: int getGreen()>
<com.ophone.MiniPlayer.utils.sentenceUtil: java.awt.Color getGradientColor(java.awt.Color,java.awt.Color,float)> -> <java.awt.Color: int getBlue()>
<com.ophone.MiniPlayer.utils.sentenceUtil: java.awt.Color getGradientColor(java.awt.Color,java.awt.Color,float)> -> <java.awt.Color: void <init>(int,int,int)>
<net.sourceforge.pinyin4j.PinyinRomanizationType: void <clinit>()> -> <net.sourceforge.pinyin4j.PinyinRomanizationType: void <init>(java.lang.String)>
<net.sourceforge.pinyin4j.PinyinRomanizationType: void <init>(java.lang.String)> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.PinyinRomanizationType: void <init>(java.lang.String)> -> <net.sourceforge.pinyin4j.PinyinRomanizationType: void setTagName(java.lang.String)>
<com.hp.hpl.sparta.BuildDocument: void <init>()> -> <com.hp.hpl.sparta.BuildDocument: void <init>(com.hp.hpl.sparta.ParseLog)>
<com.hp.hpl.sparta.BuildDocument: void <init>(com.hp.hpl.sparta.ParseLog)> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.BuildDocument: void <init>(com.hp.hpl.sparta.ParseLog)> -> <com.hp.hpl.sparta.Document: void <init>()>
<com.hp.hpl.sparta.BuildDocument: void characters(char[],int,int)> -> <com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getLastChild()>
<com.hp.hpl.sparta.BuildDocument: void characters(char[],int,int)> -> <com.hp.hpl.sparta.Text: void appendData(char[],int,int)>
<com.hp.hpl.sparta.BuildDocument: void characters(char[],int,int)> -> <java.lang.String: void <init>(char[],int,int)>
<com.hp.hpl.sparta.BuildDocument: void characters(char[],int,int)> -> <com.hp.hpl.sparta.Text: void <init>(java.lang.String)>
<com.hp.hpl.sparta.BuildDocument: void characters(char[],int,int)> -> <com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.BuildDocument: void endElement(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element getParentNode()>
<com.hp.hpl.sparta.BuildDocument: int getLineNumber()> -> <com.hp.hpl.sparta.ParseSource: int getLineNumber()>
<com.hp.hpl.sparta.BuildDocument: java.lang.String getSystemId()> -> <com.hp.hpl.sparta.ParseSource: java.lang.String getSystemId()>
<com.hp.hpl.sparta.BuildDocument: void setParseSource(com.hp.hpl.sparta.ParseSource)> -> <com.hp.hpl.sparta.ParseSource: java.lang.String toString()>
<com.hp.hpl.sparta.BuildDocument: void setParseSource(com.hp.hpl.sparta.ParseSource)> -> <com.hp.hpl.sparta.Document: void setSystemId(java.lang.String)>
<com.hp.hpl.sparta.BuildDocument: void startElement(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Document: void setDocumentElement(com.hp.hpl.sparta.Element)>
<com.hp.hpl.sparta.BuildDocument: void startElement(com.hp.hpl.sparta.Element)> -> <com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>
<com.hp.hpl.sparta.BuildDocument: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.BuildDocument: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.BuildDocument: java.lang.String toString()> -> <com.hp.hpl.sparta.ParseSource: java.lang.String toString()>
<com.hp.hpl.sparta.BuildDocument: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void <init>()> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void <init>()> -> <net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void initializeResource()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void <init>(net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$1)> -> <net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void <init>()>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void initializeResource()> -> <net.sourceforge.pinyin4j.ResourceHelper: java.io.BufferedInputStream getResourceInputStream(java.lang.String)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void initializeResource()> -> <com.hp.hpl.sparta.Parser: com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void initializeResource()> -> <net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void setPinyinToGwoyeuMappingDoc(com.hp.hpl.sparta.Document)>
<net.sourceforge.pinyin4j.GwoyeuRomatzyhResource: void initializeResource()> -> <java.lang.Throwable: void printStackTrace()>
<net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: void <clinit>()> -> <net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: void <init>(java.lang.String)>
<net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: void <init>(java.lang.String)> -> <java.lang.Object: void <init>()>
<net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: void <init>(java.lang.String)> -> <net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: void setName(java.lang.String)>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <android.widget.EditText: android.text.Editable getText()>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.lang.Object: java.lang.String toString()>
<com.ophone.MiniPlayer.Search$1: void onClick(android.view.View)> -> <java.lang.Throwable: void printStackTrace()>
<com.ophone.MiniPlayer.Search$2: boolean onTouch(android.view.View,android.view.MotionEvent)> -> <android.view.MotionEvent: float getY()>
<com.ophone.MiniPlayer.R$id: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.EncodingMismatchException: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.String: int length()>
<com.hp.hpl.sparta.EncodingMismatchException: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.String: char charAt(int)>
<com.hp.hpl.sparta.EncodingMismatchException: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.EncodingMismatchException: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.EncodingMismatchException: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.EncodingMismatchException: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>
<com.hp.hpl.sparta.xpath.TextTest: void <clinit>()> -> <com.hp.hpl.sparta.xpath.TextTest: void <init>()>
<com.hp.hpl.sparta.xpath.TextTest: void <init>()> -> <com.hp.hpl.sparta.xpath.NodeTest: void <init>()>
<com.hp.hpl.sparta.xpath.TextTest: void accept(com.hp.hpl.sparta.xpath.Visitor)> -> <com.hp.hpl.sparta.xpath.NodeTestVisitor: void visit(com.hp.hpl.sparta.xpath.TextTest)>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: void setRedirectHandler(org.apache.http.client.RedirectHandler)>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>
<com.xxx.yyy.BBBB: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,java.lang.String)> -> <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.util.regex.Matcher: boolean find()>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.util.regex.Matcher: java.lang.String group()>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.util.regex.Matcher: boolean find()>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.util.regex.Matcher: java.lang.String group()>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String substring(int)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)> -> <java.util.List: boolean add(java.lang.Object)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <java.lang.String: int length()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.protocol.BasicHttpContext: void <init>()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.protocol.BasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.StatusLine: int getStatusCode()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.client.methods.HttpGet: void abort()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.client.ClientProtocolException: void printStackTrace()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.Header: java.lang.String getValue()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <com.xxx.yyy.BBBB: java.lang.String getContentCharset(org.apache.http.HttpResponse)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <org.apache.http.HttpEntity: java.io.InputStream getContent()>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <com.xxx.yyy.ddda: java.lang.String encrypt(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <java.lang.String: int length()>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: void PostResult(int)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.BBBB: void SleepTime(int,int)> -> <com.xxx.yyy.BBBB: int GetRandomFromMinToMax(int,int)>
<com.xxx.yyy.BBBB: void SleepTime(int,int)> -> <java.lang.Thread: void sleep(long)>
<com.xxx.yyy.BBBB: void Go()> -> <java.util.List: void clear()>
<com.xxx.yyy.BBBB: void Go()> -> <com.xxx.yyy.BBBB: java.lang.String HppGet(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: void Go()> -> <java.lang.String: int length()>
<com.xxx.yyy.BBBB: void Go()> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.xxx.yyy.BBBB: void Go()> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.xxx.yyy.BBBB: void Go()> -> <com.xxx.yyy.BBBB: void SleepTime(int,int)>
<com.xxx.yyy.BBBB: void Go()> -> <android.content.Context: java.lang.String getString(int)>
<com.xxx.yyy.BBBB: void Go()> -> <com.xxx.yyy.BBBB: void FixUrls(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: void Go()> -> <java.util.List: int size()>
<com.xxx.yyy.BBBB: void Go()> -> <com.xxx.yyy.BBBB: int GetRandomFromMinToMax(int,int)>
<com.xxx.yyy.BBBB: void Go()> -> <java.util.List: java.lang.Object get(int)>
<com.xxx.yyy.BBBB: void Go()> -> <com.xxx.yyy.BBBB: void PostResult(int)>
<com.xxx.yyy.BBBB: void Go()> -> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.xxx.yyy.BBBB: void Go()> -> <org.apache.http.conn.ClientConnectionManager: void shutdown()>
<com.xxx.yyy.BBBB: void Go()> -> <com.xxx.yyy.BBBB: java.lang.String FindHttpHead(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream)>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: void <init>()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.io.InputStream: void close()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.io.BufferedReader: java.lang.String readLine()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.io.InputStream: void close()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.xxx.yyy.BBBB: java.lang.String generateString(java.io.InputStream,java.lang.String)> -> <java.lang.Throwable: void printStackTrace()>
<com.xxx.yyy.BBBB: java.lang.String getContentCharset(org.apache.http.HttpResponse)> -> <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<com.xxx.yyy.BBBB: java.lang.String getContentCharset(org.apache.http.HttpResponse)> -> <org.apache.http.HttpEntity: org.apache.http.Header getContentType()>
<com.xxx.yyy.BBBB: java.lang.String getContentCharset(org.apache.http.HttpResponse)> -> <org.apache.http.Header: java.lang.String getValue()>
<com.xxx.yyy.BBBB: java.lang.String getContentCharset(org.apache.http.HttpResponse)> -> <com.xxx.yyy.BBBB: boolean matcher(java.lang.String,java.lang.String)>
<com.xxx.yyy.BBBB: boolean matcher(java.lang.String,java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<com.xxx.yyy.BBBB: boolean matcher(java.lang.String,java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<com.xxx.yyy.BBBB: boolean matcher(java.lang.String,java.lang.String)> -> <java.util.regex.Matcher: boolean find()>
<com.hp.hpl.sparta.Sparta$HashtableCache: void <init>()> -> <java.util.Hashtable: void <init>()>
<com.hp.hpl.sparta.Sparta$HashtableCache: void <init>(com.hp.hpl.sparta.Sparta$1)> -> <com.hp.hpl.sparta.Sparta$HashtableCache: void <init>()>
<net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination: void <init>(java.lang.String)> -> <java.lang.Exception: void <init>(java.lang.String)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: int getCount()> -> <java.util.ArrayList: int size()>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: java.lang.Object getItem(int)> -> <java.util.ArrayList: java.lang.Object get(int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.MainActivity$AddAdapter: java.lang.Object getItem(int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setTag(java.lang.Object)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.MainActivity$AddAdapter$1: void <init>(com.ophone.MiniPlayer.MainActivity$AddAdapter,android.widget.TextView,com.ophone.MiniPlayer.MainActivity$AddAdapter$ListItem,int)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.ophone.MiniPlayer.MainActivity$AddAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <com.ophone.MiniPlayer.MainActivity$AddAdapter$1: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.hp.hpl.sparta.xpath.PositionEqualsExpr: void <init>(int)> -> <com.hp.hpl.sparta.xpath.BooleanExpr: void <init>()>
<com.hp.hpl.sparta.xpath.PositionEqualsExpr: void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor)> -> <com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr)>
<com.hp.hpl.sparta.xpath.PositionEqualsExpr: java.lang.String toString()> -> <java.lang.StringBuffer: void <init>()>
<com.hp.hpl.sparta.xpath.PositionEqualsExpr: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.hp.hpl.sparta.xpath.PositionEqualsExpr: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<com.hp.hpl.sparta.xpath.PositionEqualsExpr: java.lang.String toString()> -> <java.lang.StringBuffer: java.lang.String toString()>
<com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item: void <init>(java.lang.Boolean,com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item)> -> <java.lang.Object: void <init>()>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.ophone.MiniPlayer.MusicActivity$UpdateReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.widget.Toast: void show()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.NodeList: int getLength()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: short getNodeType()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeName()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeValue()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.ArrayList analyseTheSonglistGoogle(java.io.InputStream)> -> <java.lang.Object: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <java.util.HashMap: void <init>()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.NodeList: int getLength()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: short getNodeType()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeName()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <org.w3c.dom.Node: java.lang.String getNodeValue()>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.ophone.MiniPlayer.provider.GoogleXmlHandler: java.util.Map parseSongSourceGoogle(java.io.InputStream)> -> <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.hp.hpl.sparta.XPathVisitor$BooleanStack: void <init>()> -> <java.lang.Object: void <init>()>
<com.hp.hpl.sparta.XPathVisitor$BooleanStack: void <init>(com.hp.hpl.sparta.XPathVisitor$1)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack: void <init>()>
<com.hp.hpl.sparta.XPathVisitor$BooleanStack: void push(java.lang.Boolean)> -> <com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item: void <init>(java.lang.Boolean,com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item)>
